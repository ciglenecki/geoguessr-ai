Standard output piped to file:
/home/fwolf/lumen-geoguesser/reports/train-resnext101_32x8d-22-04-20-18-27-12.txt
[{'batch_size': 8,
  'cached_df': 'data/complete/data__spacing_0.5__num_class_55.csv',
  'dataset_dirs': ['data/external/', 'data/raw/'],
  'dataset_frac': 1,
  'image_size': 112,
  'load_in_ram': False,
  'lr': 1e-05,
  'models': ['resnext101_32x8d'],
  'num_workers': 32,
  'output_report': PosixPath('/home/fwolf/lumen-geoguesser/reports'),
  'pretrained': True,
  'quick': False,
  'shuffle_before_splitting': False,
  'split_ratios': [0.8, 0.1, 0.1],
  'trainer_checkpoint': None,
  'unfreeze_backbone_at_epoch': 5,
  'unfreeze_blocks': 'all',
  'use_single_images': False,
  'weight_decay': 0},
 {'accelerator': 'gpu',
  'accumulate_grad_batches': None,
  'amp_backend': 'native',
  'amp_level': None,
  'auto_lr_find': False,
  'auto_scale_batch_size': False,
  'auto_select_gpus': False,
  'benchmark': None,
  'check_val_every_n_epoch': 1,
  'checkpoint_callback': None,
  'default_root_dir': None,
  'detect_anomaly': False,
  'deterministic': False,
  'devices': '1',
  'enable_checkpointing': True,
  'enable_model_summary': True,
  'enable_progress_bar': True,
  'fast_dev_run': False,
  'flush_logs_every_n_steps': None,
  'gpus': None,
  'gradient_clip_algorithm': None,
  'gradient_clip_val': None,
  'ipus': None,
  'limit_predict_batches': None,
  'limit_test_batches': None,
  'limit_train_batches': None,
  'limit_val_batches': None,
  'log_every_n_steps': 20,
  'log_gpu_memory': None,
  'logger': True,
  'max_epochs': None,
  'max_steps': -1,
  'max_time': None,
  'min_epochs': None,
  'min_steps': None,
  'move_metrics_to_cpu': False,
  'multiple_trainloader_mode': 'max_size_cycle',
  'num_nodes': 1,
  'num_processes': None,
  'num_sanity_val_steps': 2,
  'overfit_batches': 0.0,
  'plugins': None,
  'precision': 32,
  'prepare_data_per_node': None,
  'process_position': 0,
  'profiler': None,
  'progress_bar_refresh_rate': None,
  'reload_dataloaders_every_n_epochs': 0,
  'replace_sampler_ddp': True,
  'resume_from_checkpoint': None,
  'stochastic_weight_avg': False,
  'strategy': None,
  'sync_batchnorm': False,
  'terminate_on_nan': None,
  'tpu_cores': None,
  'track_grad_norm': -1,
  'val_check_interval': None,
  'weights_save_path': None,
  'weights_summary': 'top'}]
GeoguesserDataModule init
GeoguesserDataset init
GeoguesserDataset init
GeoguesserDataset init
Train, val and test size 26417 3302 3303
Using cache found in /home/fwolf/.cache/torch/hub/pytorch_vision_v0.12.0
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py:91: PossibleUserWarning: `max_epochs` was not set. Setting it to 1000 epochs. To train without an epoch limit, set `max_epochs=-1`.
  rank_zero_warn(
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/utilities/parsing.py:107: UserWarning: attribute 'data_module' removed from hparams because it cannot be pickled
  rank_zero_warn(f"attribute '{k}' removed from hparams because it cannot be pickled")
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/torch/cuda/__init__.py:122: UserWarning: 
    Found GPU1 NVIDIA GeForce GTX TITAN Black which is of cuda capability 3.5.
    PyTorch no longer supports this GPU because it is too old.
    The minimum cuda capability supported by this library is 3.7.
    
  warnings.warn(old_gpu_warn % (d, name, major, minor, min_arch // 10, min_arch % 10))
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name     | Type   | Params | In sizes         | Out sizes
-------------------------------------------------------------------
0 | backbone | ResNet | 86.7 M | [8, 3, 112, 112] | [8, 2048]
1 | fc       | Linear | 434 K  | [8, 8192]        | [8, 53]  
-------------------------------------------------------------------
637 K     Trainable params
86.5 M    Non-trainable params
87.2 M    Total params
348.706   Total estimated model params size (MB)
/home/fwolf/lumen-geoguesser/src/model.py:96: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).
  outs_backbone = [self.backbone(image) for image in image_list]
Sanity Checking: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:486: PossibleUserWarning: Your `val_dataloader`'s sampler has shuffling enabled, it is strongly recommended that you turn shuffling off for val/test/predict dataloaders.
  rank_zero_warn(
Sanity Checking DataLoader 0:   0%|          | 0/2 [00:02<?, ?it/s]Sanity Checking DataLoader 0: 100%|##########| 2/2 [00:03<00:00,  1.64s/it]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `validation_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
                                                                           Training: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:   0%|          | 0/3714 [00:00<?, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_epoch_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:   4%|4         | 165/3714 [01:39<35:45,  1.65it/s]Epoch 0:   4%|4         | 165/3714 [01:39<35:45,  1.65it/s, loss=3.68, v_num=0, train/loss_step=3.490, train/acc_step=0.125]Epoch 0:   9%|8         | 330/3714 [03:14<33:12,  1.70it/s, loss=3.68, v_num=0, train/loss_step=3.490, train/acc_step=0.125]Epoch 0:   9%|8         | 330/3714 [03:14<33:12,  1.70it/s, loss=3.69, v_num=0, train/loss_step=3.920, train/acc_step=0.000]Epoch 0:  13%|#3        | 495/3714 [04:50<31:27,  1.71it/s, loss=3.69, v_num=0, train/loss_step=3.920, train/acc_step=0.000]Epoch 0:  13%|#3        | 495/3714 [04:50<31:27,  1.71it/s, loss=3.67, v_num=0, train/loss_step=3.720, train/acc_step=0.125]Epoch 0:  18%|#7        | 660/3714 [06:25<29:43,  1.71it/s, loss=3.67, v_num=0, train/loss_step=3.720, train/acc_step=0.125]Epoch 0:  18%|#7        | 660/3714 [06:25<29:43,  1.71it/s, loss=3.57, v_num=0, train/loss_step=3.490, train/acc_step=0.125]Epoch 0:  22%|##2       | 825/3714 [07:58<27:54,  1.72it/s, loss=3.57, v_num=0, train/loss_step=3.490, train/acc_step=0.125]Epoch 0:  22%|##2       | 825/3714 [07:58<27:54,  1.72it/s, loss=3.63, v_num=0, train/loss_step=3.270, train/acc_step=0.000]TensorFlow installation not found - running with reduced feature set.
usage: tensorboard [-h] [--helpfull] [--logdir PATH] [--logdir_spec PATH_SPEC]
                   [--host ADDR] [--bind_all] [--port PORT]
                   [--reuse_port BOOL] [--load_fast {false,auto,true}]
                   [--extra_data_server_flags EXTRA_DATA_SERVER_FLAGS]
                   [--grpc_creds_type {local,ssl,ssl_dev}]
                   [--grpc_data_provider PORT] [--purge_orphaned_data BOOL]
                   [--db URI] [--db_import] [--inspect] [--version_tb]
                   [--tag TAG] [--event_file PATH] [--path_prefix PATH]
                   [--window_title TEXT] [--max_reload_threads COUNT]
                   [--reload_interval SECONDS] [--reload_task TYPE]
                   [--reload_multifile BOOL]
                   [--reload_multifile_inactive_secs SECONDS]
                   [--generic_data TYPE]
                   [--samples_per_plugin SAMPLES_PER_PLUGIN]
                   [--whatif-use-unsafe-custom-prediction YOUR_CUSTOM_PREDICT_FUNCTION.py]
                   [--whatif-data-dir PATH]
                   {serve,dev} ...
tensorboard: error: ambiguous option: --log=reports/22-04-20* could match --logtostderr, --log_dir, --logger_levels, --logdir, --logdir_spec
Epoch 0:  27%|##6       | 990/3714 [09:31<26:13,  1.73it/s, loss=3.63, v_num=0, train/loss_step=3.270, train/acc_step=0.000]Epoch 0:  27%|##6       | 990/3714 [09:31<26:13,  1.73it/s, loss=3.67, v_num=0, train/loss_step=3.690, train/acc_step=0.000]TensorFlow installation not found - running with reduced feature set.
usage: tensorboard [-h] [--helpfull] [--logdir PATH] [--logdir_spec PATH_SPEC]
                   [--host ADDR] [--bind_all] [--port PORT]
                   [--reuse_port BOOL] [--load_fast {false,auto,true}]
                   [--extra_data_server_flags EXTRA_DATA_SERVER_FLAGS]
                   [--grpc_creds_type {local,ssl,ssl_dev}]
                   [--grpc_data_provider PORT] [--purge_orphaned_data BOOL]
                   [--db URI] [--db_import] [--inspect] [--version_tb]
                   [--tag TAG] [--event_file PATH] [--path_prefix PATH]
                   [--window_title TEXT] [--max_reload_threads COUNT]
                   [--reload_interval SECONDS] [--reload_task TYPE]
                   [--reload_multifile BOOL]
                   [--reload_multifile_inactive_secs SECONDS]
                   [--generic_data TYPE]
                   [--samples_per_plugin SAMPLES_PER_PLUGIN]
                   [--whatif-use-unsafe-custom-prediction YOUR_CUSTOM_PREDICT_FUNCTION.py]
                   [--whatif-data-dir PATH]
                   {serve,dev} ...
tensorboard: error: ambiguous option: --log=reports could match --logtostderr, --log_dir, --logger_levels, --logdir, --logdir_spec
Epoch 0:  31%|###1      | 1155/3714 [11:06<24:36,  1.73it/s, loss=3.67, v_num=0, train/loss_step=3.690, train/acc_step=0.000]Epoch 0:  31%|###1      | 1155/3714 [11:06<24:36,  1.73it/s, loss=3.6, v_num=0, train/loss_step=3.540, train/acc_step=0.000] Epoch 0:  36%|###5      | 1320/3714 [12:40<22:59,  1.74it/s, loss=3.6, v_num=0, train/loss_step=3.540, train/acc_step=0.000]Epoch 0:  36%|###5      | 1320/3714 [12:40<22:59,  1.74it/s, loss=3.67, v_num=0, train/loss_step=3.380, train/acc_step=0.125]Epoch 0:  40%|###9      | 1485/3714 [14:12<21:19,  1.74it/s, loss=3.67, v_num=0, train/loss_step=3.380, train/acc_step=0.125]Epoch 0:  40%|###9      | 1485/3714 [14:12<21:19,  1.74it/s, loss=3.7, v_num=0, train/loss_step=3.400, train/acc_step=0.125] Epoch 0:  44%|####4     | 1650/3714 [15:44<19:41,  1.75it/s, loss=3.7, v_num=0, train/loss_step=3.400, train/acc_step=0.125]Epoch 0:  44%|####4     | 1650/3714 [15:44<19:41,  1.75it/s, loss=3.61, v_num=0, train/loss_step=3.530, train/acc_step=0.000]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py:727: UserWarning: Detected KeyboardInterrupt, attempting graceful shutdown...
  rank_zero_warn("Detected KeyboardInterrupt, attempting graceful shutdown...")
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]
TensorFlow installation not found - running with reduced feature set.

NOTE: Using experimental fast data loading logic. To disable, pass
    "--load_fast=false" and report issues on GitHub. More details:
    https://github.com/tensorflow/tensorboard/issues/4784

Serving TensorBoard on localhost; to expose to the network, use a proxy or pass --bind_all
TensorBoard 2.8.0 at http://localhost:6006/ (Press CTRL+C to quit)
Standard output piped to file:
/home/fwolf/lumen-geoguesser/reports/train-resnext101_32x8d-22-04-20-18-51-31.txt
[{'batch_size': 8,
  'cached_df': 'data/complete/data__spacing_0.5__num_class_55.csv',
  'dataset_dirs': ['data/external/', 'data/raw/'],
  'dataset_frac': 1,
  'image_size': 112,
  'load_in_ram': False,
  'lr': 1e-05,
  'models': ['resnext101_32x8d'],
  'num_workers': 32,
  'output_report': PosixPath('/home/fwolf/lumen-geoguesser/reports'),
  'pretrained': True,
  'quick': False,
  'shuffle_before_splitting': False,
  'split_ratios': [0.8, 0.1, 0.1],
  'trainer_checkpoint': None,
  'unfreeze_backbone_at_epoch': 5,
  'unfreeze_blocks': 'all',
  'use_single_images': False,
  'weight_decay': 0},
 {'accelerator': 'gpu',
  'accumulate_grad_batches': None,
  'amp_backend': 'native',
  'amp_level': None,
  'auto_lr_find': False,
  'auto_scale_batch_size': False,
  'auto_select_gpus': False,
  'benchmark': None,
  'check_val_every_n_epoch': 1,
  'checkpoint_callback': None,
  'default_root_dir': None,
  'detect_anomaly': False,
  'deterministic': False,
  'devices': '1',
  'enable_checkpointing': True,
  'enable_model_summary': True,
  'enable_progress_bar': True,
  'fast_dev_run': False,
  'flush_logs_every_n_steps': None,
  'gpus': None,
  'gradient_clip_algorithm': None,
  'gradient_clip_val': None,
  'ipus': None,
  'limit_predict_batches': None,
  'limit_test_batches': None,
  'limit_train_batches': None,
  'limit_val_batches': None,
  'log_every_n_steps': 20,
  'log_gpu_memory': None,
  'logger': True,
  'max_epochs': None,
  'max_steps': -1,
  'max_time': None,
  'min_epochs': None,
  'min_steps': None,
  'move_metrics_to_cpu': False,
  'multiple_trainloader_mode': 'max_size_cycle',
  'num_nodes': 1,
  'num_processes': None,
  'num_sanity_val_steps': 2,
  'overfit_batches': 0.0,
  'plugins': None,
  'precision': 32,
  'prepare_data_per_node': None,
  'process_position': 0,
  'profiler': None,
  'progress_bar_refresh_rate': None,
  'reload_dataloaders_every_n_epochs': 0,
  'replace_sampler_ddp': True,
  'resume_from_checkpoint': None,
  'stochastic_weight_avg': False,
  'strategy': None,
  'sync_batchnorm': False,
  'terminate_on_nan': None,
  'tpu_cores': None,
  'track_grad_norm': -1,
  'val_check_interval': None,
  'weights_save_path': None,
  'weights_summary': 'top'}]
GeoguesserDataModule init
GeoguesserDataset init
GeoguesserDataset init
GeoguesserDataset init
Train, val and test size 26417 3302 3303
Using cache found in /home/fwolf/.cache/torch/hub/pytorch_vision_v0.12.0
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py:91: PossibleUserWarning: `max_epochs` was not set. Setting it to 1000 epochs. To train without an epoch limit, set `max_epochs=-1`.
  rank_zero_warn(
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/utilities/parsing.py:107: UserWarning: attribute 'data_module' removed from hparams because it cannot be pickled
  rank_zero_warn(f"attribute '{k}' removed from hparams because it cannot be pickled")
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/torch/cuda/__init__.py:122: UserWarning: 
    Found GPU1 NVIDIA GeForce GTX TITAN Black which is of cuda capability 3.5.
    PyTorch no longer supports this GPU because it is too old.
    The minimum cuda capability supported by this library is 3.7.
    
  warnings.warn(old_gpu_warn % (d, name, major, minor, min_arch // 10, min_arch % 10))
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name     | Type   | Params | In sizes         | Out sizes
-------------------------------------------------------------------
0 | backbone | ResNet | 86.7 M | [8, 3, 112, 112] | [8, 2048]
1 | fc       | Linear | 434 K  | [8, 8192]        | [8, 53]  
-------------------------------------------------------------------
637 K     Trainable params
86.5 M    Non-trainable params
87.2 M    Total params
348.706   Total estimated model params size (MB)
/home/fwolf/lumen-geoguesser/src/model.py:96: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).
  outs_backbone = [self.backbone(image) for image in image_list]
Sanity Checking: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:486: PossibleUserWarning: Your `val_dataloader`'s sampler has shuffling enabled, it is strongly recommended that you turn shuffling off for val/test/predict dataloaders.
  rank_zero_warn(
Sanity Checking DataLoader 0:   0%|          | 0/2 [00:02<?, ?it/s]Sanity Checking DataLoader 0: 100%|##########| 2/2 [00:03<00:00,  1.84s/it]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `validation_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
                                                                           Training: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:   0%|          | 0/3714 [00:00<?, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_epoch_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:   4%|4         | 165/3714 [01:35<34:03,  1.74it/s]Epoch 0:   4%|4         | 165/3714 [01:35<34:03,  1.74it/s, loss=3.67, v_num=0, train/loss_step=3.690, train/acc_step=0.000]Epoch 0:   9%|8         | 330/3714 [03:05<31:42,  1.78it/s, loss=3.67, v_num=0, train/loss_step=3.690, train/acc_step=0.000]Epoch 0:   9%|8         | 330/3714 [03:05<31:42,  1.78it/s, loss=3.79, v_num=0, train/loss_step=3.360, train/acc_step=0.000]Epoch 0:  13%|#3        | 495/3714 [04:35<29:53,  1.79it/s, loss=3.79, v_num=0, train/loss_step=3.360, train/acc_step=0.000]Epoch 0:  13%|#3        | 495/3714 [04:35<29:53,  1.79it/s, loss=3.59, v_num=0, train/loss_step=3.470, train/acc_step=0.000]Epoch 0:  18%|#7        | 660/3714 [06:04<28:06,  1.81it/s, loss=3.59, v_num=0, train/loss_step=3.470, train/acc_step=0.000]Epoch 0:  18%|#7        | 660/3714 [06:04<28:06,  1.81it/s, loss=3.58, v_num=0, train/loss_step=3.370, train/acc_step=0.000]Epoch 0:  22%|##2       | 825/3714 [07:34<26:33,  1.81it/s, loss=3.58, v_num=0, train/loss_step=3.370, train/acc_step=0.000]Epoch 0:  22%|##2       | 825/3714 [07:34<26:33,  1.81it/s, loss=3.66, v_num=0, train/loss_step=3.780, train/acc_step=0.000]Epoch 0:  27%|##6       | 990/3714 [09:06<25:03,  1.81it/s, loss=3.66, v_num=0, train/loss_step=3.780, train/acc_step=0.000]Epoch 0:  27%|##6       | 990/3714 [09:06<25:03,  1.81it/s, loss=3.59, v_num=0, train/loss_step=3.500, train/acc_step=0.125]Epoch 0:  31%|###1      | 1155/3714 [10:34<23:25,  1.82it/s, loss=3.59, v_num=0, train/loss_step=3.500, train/acc_step=0.125]Epoch 0:  31%|###1      | 1155/3714 [10:34<23:25,  1.82it/s, loss=3.64, v_num=0, train/loss_step=3.600, train/acc_step=0.000]Epoch 0:  36%|###5      | 1320/3714 [12:05<21:54,  1.82it/s, loss=3.64, v_num=0, train/loss_step=3.600, train/acc_step=0.000]Epoch 0:  36%|###5      | 1320/3714 [12:05<21:54,  1.82it/s, loss=3.59, v_num=0, train/loss_step=3.650, train/acc_step=0.000]Epoch 0:  40%|###9      | 1485/3714 [13:33<20:21,  1.82it/s, loss=3.59, v_num=0, train/loss_step=3.650, train/acc_step=0.000]Epoch 0:  40%|###9      | 1485/3714 [13:33<20:21,  1.82it/s, loss=3.6, v_num=0, train/loss_step=3.680, train/acc_step=0.000] Epoch 0:  44%|####4     | 1650/3714 [15:02<18:49,  1.83it/s, loss=3.6, v_num=0, train/loss_step=3.680, train/acc_step=0.000]Epoch 0:  44%|####4     | 1650/3714 [15:02<18:49,  1.83it/s, loss=3.66, v_num=0, train/loss_step=3.580, train/acc_step=0.125]Epoch 0:  49%|####8     | 1815/3714 [16:31<17:16,  1.83it/s, loss=3.66, v_num=0, train/loss_step=3.580, train/acc_step=0.125]Epoch 0:  49%|####8     | 1815/3714 [16:31<17:16,  1.83it/s, loss=3.5, v_num=0, train/loss_step=3.710, train/acc_step=0.125] Epoch 0:  53%|#####3    | 1980/3714 [18:01<15:47,  1.83it/s, loss=3.5, v_num=0, train/loss_step=3.710, train/acc_step=0.125]Epoch 0:  53%|#####3    | 1980/3714 [18:01<15:47,  1.83it/s, loss=3.53, v_num=0, train/loss_step=3.700, train/acc_step=0.000]Epoch 0:  58%|#####7    | 2145/3714 [19:30<14:16,  1.83it/s, loss=3.53, v_num=0, train/loss_step=3.700, train/acc_step=0.000]Epoch 0:  58%|#####7    | 2145/3714 [19:30<14:16,  1.83it/s, loss=3.54, v_num=0, train/loss_step=4.020, train/acc_step=0.000]Epoch 0:  62%|######2   | 2310/3714 [21:01<12:46,  1.83it/s, loss=3.54, v_num=0, train/loss_step=4.020, train/acc_step=0.000]Epoch 0:  62%|######2   | 2310/3714 [21:01<12:46,  1.83it/s, loss=3.46, v_num=0, train/loss_step=3.610, train/acc_step=0.000]Epoch 0:  67%|######6   | 2475/3714 [22:32<11:17,  1.83it/s, loss=3.46, v_num=0, train/loss_step=3.610, train/acc_step=0.000]Epoch 0:  67%|######6   | 2475/3714 [22:32<11:17,  1.83it/s, loss=3.56, v_num=0, train/loss_step=3.570, train/acc_step=0.125]Epoch 0:  71%|#######1  | 2640/3714 [24:01<09:46,  1.83it/s, loss=3.56, v_num=0, train/loss_step=3.570, train/acc_step=0.125]Epoch 0:  71%|#######1  | 2640/3714 [24:01<09:46,  1.83it/s, loss=3.53, v_num=0, train/loss_step=3.750, train/acc_step=0.000]Epoch 0:  76%|#######5  | 2805/3714 [25:31<08:16,  1.83it/s, loss=3.53, v_num=0, train/loss_step=3.750, train/acc_step=0.000]Epoch 0:  76%|#######5  | 2805/3714 [25:31<08:16,  1.83it/s, loss=3.5, v_num=0, train/loss_step=3.120, train/acc_step=0.125] Epoch 0:  80%|#######9  | 2970/3714 [27:00<06:46,  1.83it/s, loss=3.5, v_num=0, train/loss_step=3.120, train/acc_step=0.125]Epoch 0:  80%|#######9  | 2970/3714 [27:00<06:46,  1.83it/s, loss=3.56, v_num=0, train/loss_step=3.540, train/acc_step=0.125]Epoch 0:  84%|########4 | 3135/3714 [28:29<05:15,  1.83it/s, loss=3.56, v_num=0, train/loss_step=3.540, train/acc_step=0.125]Epoch 0:  84%|########4 | 3135/3714 [28:29<05:15,  1.83it/s, loss=3.52, v_num=0, train/loss_step=3.890, train/acc_step=0.000]Epoch 0:  89%|########8 | 3300/3714 [30:00<03:45,  1.83it/s, loss=3.52, v_num=0, train/loss_step=3.890, train/acc_step=0.000]Epoch 0:  89%|########8 | 3300/3714 [30:00<03:45,  1.83it/s, loss=3.53, v_num=0, train/loss_step=4.000, train/acc_step=0.000]Epoch 0:  89%|########8 | 3302/3714 [30:01<03:44,  1.83it/s, loss=3.53, v_num=0, train/loss_step=4.000, train/acc_step=0.000]Epoch 0:  89%|########8 | 3302/3714 [30:01<03:44,  1.83it/s, loss=3.53, v_num=0, train/loss_step=3.730, train/acc_step=0.000]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:04<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:31<00:47,  5.20it/s][AEpoch 0:  93%|#########3| 3467/3714 [30:33<02:10,  1.89it/s, loss=3.53, v_num=0, train/loss_step=3.730, train/acc_step=0.000]
Validation DataLoader 0:  80%|########  | 330/412 [00:58<00:14,  5.62it/s][AEpoch 0:  98%|#########7| 3632/3714 [31:00<00:42,  1.95it/s, loss=3.53, v_num=0, train/loss_step=3.730, train/acc_step=0.000]
Validation DataLoader 0: 100%|##########| 412/412 [01:12<00:00,  5.71it/s][AEpoch 0: 100%|##########| 3714/3714 [31:14<00:00,  1.98it/s, loss=3.53, v_num=0, train/loss_step=3.730, train/acc_step=0.000]Epoch 0: 100%|##########| 3714/3714 [31:14<00:00,  1.98it/s, loss=3.53, v_num=0, train/loss_step=3.730, train/acc_step=0.000, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670]
                                                                          [A/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `training_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Metric val/loss improved. New best score: 3.461
Epoch 0: 100%|##########| 3714/3714 [31:23<00:00,  1.97it/s, loss=3.53, v_num=0, train/loss_step=3.730, train/acc_step=0.000, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1: 100%|##########| 3714/3714 [31:25<00:00,  1.97it/s, loss=3.53, v_num=0, train/loss_step=3.730, train/acc_step=0.000, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:   4%|4         | 165/3714 [33:03<11:50:59, 12.02s/it, loss=3.53, v_num=0, train/loss_step=3.730, train/acc_step=0.000, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:   4%|4         | 165/3714 [33:03<11:50:59, 12.02s/it, loss=3.51, v_num=0, train/loss_step=2.890, train/acc_step=0.375, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:   9%|8         | 330/3714 [34:33<5:54:27,  6.28s/it, loss=3.51, v_num=0, train/loss_step=2.890, train/acc_step=0.375, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614] Epoch 1:   9%|8         | 330/3714 [34:33<5:54:27,  6.28s/it, loss=3.52, v_num=0, train/loss_step=3.350, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  13%|#3        | 495/3714 [36:07<3:54:57,  4.38s/it, loss=3.52, v_num=0, train/loss_step=3.350, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  13%|#3        | 495/3714 [36:07<3:54:57,  4.38s/it, loss=3.6, v_num=0, train/loss_step=3.550, train/acc_step=0.000, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614] Epoch 1:  18%|#7        | 660/3714 [37:40<2:54:18,  3.42s/it, loss=3.6, v_num=0, train/loss_step=3.550, train/acc_step=0.000, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  18%|#7        | 660/3714 [37:40<2:54:18,  3.42s/it, loss=3.45, v_num=0, train/loss_step=3.050, train/acc_step=0.375, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  22%|##2       | 825/3714 [39:11<2:17:15,  2.85s/it, loss=3.45, v_num=0, train/loss_step=3.050, train/acc_step=0.375, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  22%|##2       | 825/3714 [39:11<2:17:15,  2.85s/it, loss=3.45, v_num=0, train/loss_step=3.220, train/acc_step=0.250, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  27%|##6       | 990/3714 [40:44<1:52:06,  2.47s/it, loss=3.45, v_num=0, train/loss_step=3.220, train/acc_step=0.250, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  27%|##6       | 990/3714 [40:44<1:52:06,  2.47s/it, loss=3.4, v_num=0, train/loss_step=3.380, train/acc_step=0.000, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614] Epoch 1:  31%|###1      | 1155/3714 [42:16<1:33:40,  2.20s/it, loss=3.4, v_num=0, train/loss_step=3.380, train/acc_step=0.000, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  31%|###1      | 1155/3714 [42:16<1:33:40,  2.20s/it, loss=3.4, v_num=0, train/loss_step=3.130, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  36%|###5      | 1320/3714 [43:49<1:19:29,  1.99s/it, loss=3.4, v_num=0, train/loss_step=3.130, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  36%|###5      | 1320/3714 [43:49<1:19:29,  1.99s/it, loss=3.35, v_num=0, train/loss_step=3.200, train/acc_step=0.375, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  40%|###9      | 1485/3714 [45:23<1:08:07,  1.83s/it, loss=3.35, v_num=0, train/loss_step=3.200, train/acc_step=0.375, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  40%|###9      | 1485/3714 [45:23<1:08:07,  1.83s/it, loss=3.46, v_num=0, train/loss_step=3.370, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  44%|####4     | 1650/3714 [46:57<58:43,  1.71s/it, loss=3.46, v_num=0, train/loss_step=3.370, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]  Epoch 1:  44%|####4     | 1650/3714 [46:57<58:43,  1.71s/it, loss=3.37, v_num=0, train/loss_step=3.710, train/acc_step=0.000, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  49%|####8     | 1815/3714 [48:30<50:44,  1.60s/it, loss=3.37, v_num=0, train/loss_step=3.710, train/acc_step=0.000, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  49%|####8     | 1815/3714 [48:30<50:44,  1.60s/it, loss=3.43, v_num=0, train/loss_step=3.030, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  53%|#####3    | 1980/3714 [50:04<43:51,  1.52s/it, loss=3.43, v_num=0, train/loss_step=3.030, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  53%|#####3    | 1980/3714 [50:04<43:51,  1.52s/it, loss=3.32, v_num=0, train/loss_step=3.510, train/acc_step=0.000, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  58%|#####7    | 2145/3714 [51:38<37:46,  1.44s/it, loss=3.32, v_num=0, train/loss_step=3.510, train/acc_step=0.000, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  58%|#####7    | 2145/3714 [51:38<37:46,  1.44s/it, loss=3.28, v_num=0, train/loss_step=3.180, train/acc_step=0.000, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  62%|######2   | 2310/3714 [53:12<32:20,  1.38s/it, loss=3.28, v_num=0, train/loss_step=3.180, train/acc_step=0.000, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  62%|######2   | 2310/3714 [53:12<32:20,  1.38s/it, loss=3.5, v_num=0, train/loss_step=3.430, train/acc_step=0.000, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614] Epoch 1:  67%|######6   | 2475/3714 [54:45<27:24,  1.33s/it, loss=3.5, v_num=0, train/loss_step=3.430, train/acc_step=0.000, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  67%|######6   | 2475/3714 [54:45<27:24,  1.33s/it, loss=3.43, v_num=0, train/loss_step=3.020, train/acc_step=0.250, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  71%|#######1  | 2640/3714 [56:21<22:55,  1.28s/it, loss=3.43, v_num=0, train/loss_step=3.020, train/acc_step=0.250, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  71%|#######1  | 2640/3714 [56:21<22:55,  1.28s/it, loss=3.42, v_num=0, train/loss_step=3.840, train/acc_step=0.000, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  76%|#######5  | 2805/3714 [57:56<18:46,  1.24s/it, loss=3.42, v_num=0, train/loss_step=3.840, train/acc_step=0.000, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  76%|#######5  | 2805/3714 [57:56<18:46,  1.24s/it, loss=3.37, v_num=0, train/loss_step=3.180, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  80%|#######9  | 2970/3714 [59:31<14:54,  1.20s/it, loss=3.37, v_num=0, train/loss_step=3.180, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  80%|#######9  | 2970/3714 [59:31<14:54,  1.20s/it, loss=3.25, v_num=0, train/loss_step=3.230, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  84%|########4 | 3135/3714 [1:01:05<11:17,  1.17s/it, loss=3.25, v_num=0, train/loss_step=3.230, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  84%|########4 | 3135/3714 [1:01:05<11:17,  1.17s/it, loss=3.33, v_num=0, train/loss_step=3.510, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  89%|########8 | 3300/3714 [1:02:40<07:51,  1.14s/it, loss=3.33, v_num=0, train/loss_step=3.510, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  89%|########8 | 3300/3714 [1:02:40<07:51,  1.14s/it, loss=3.28, v_num=0, train/loss_step=3.130, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  89%|########8 | 3302/3714 [1:02:41<07:49,  1.14s/it, loss=3.28, v_num=0, train/loss_step=3.130, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1:  89%|########8 | 3302/3714 [1:02:41<07:49,  1.14s/it, loss=3.25, v_num=0, train/loss_step=3.010, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:04<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:36<00:55,  4.48it/s][AEpoch 1:  93%|#########3| 3467/3714 [1:03:19<04:30,  1.10s/it, loss=3.25, v_num=0, train/loss_step=3.010, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]
Validation DataLoader 0:  80%|########  | 330/412 [01:07<00:16,  4.90it/s][AEpoch 1:  98%|#########7| 3632/3714 [1:03:50<01:26,  1.05s/it, loss=3.25, v_num=0, train/loss_step=3.010, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]
Validation DataLoader 0: 100%|##########| 412/412 [01:22<00:00,  5.00it/s][AEpoch 1: 100%|##########| 3714/3714 [1:04:05<00:00,  1.04s/it, loss=3.25, v_num=0, train/loss_step=3.010, train/acc_step=0.125, val/loss_step=3.670, val/acc_step=0.000, val/haversine_distance_step=1.460, val/loss_epoch=3.460, val/acc_epoch=0.0883, val/haversine_distance_epoch=1.670, train/loss_epoch=3.590, train/acc_epoch=0.0614]Epoch 1: 100%|##########| 3714/3714 [1:04:05<00:00,  1.04s/it, loss=3.25, v_num=0, train/loss_step=3.010, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.590, train/acc_epoch=0.0614] 
                                                                          [AMetric val/loss improved by 0.190 >= min_delta = 0.0. New best score: 3.270
Epoch 1: 100%|##########| 3714/3714 [1:04:16<00:00,  1.04s/it, loss=3.25, v_num=0, train/loss_step=3.010, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106] Epoch 2: 100%|##########| 3714/3714 [1:04:16<00:00,  1.04s/it, loss=3.25, v_num=0, train/loss_step=3.010, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:   4%|4         | 165/3714 [1:05:54<23:37:42, 23.97s/it, loss=3.25, v_num=0, train/loss_step=3.010, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:   4%|4         | 165/3714 [1:05:54<23:37:42, 23.97s/it, loss=3.37, v_num=0, train/loss_step=3.530, train/acc_step=0.000, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:   9%|8         | 330/3714 [1:07:24<11:31:13, 12.26s/it, loss=3.37, v_num=0, train/loss_step=3.530, train/acc_step=0.000, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:   9%|8         | 330/3714 [1:07:24<11:31:13, 12.26s/it, loss=3.25, v_num=0, train/loss_step=3.110, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  13%|#3        | 495/3714 [1:08:56<7:28:20,  8.36s/it, loss=3.25, v_num=0, train/loss_step=3.110, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106] Epoch 2:  13%|#3        | 495/3714 [1:08:56<7:28:20,  8.36s/it, loss=3.24, v_num=0, train/loss_step=2.800, train/acc_step=0.250, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  18%|#7        | 660/3714 [1:10:29<5:26:12,  6.41s/it, loss=3.24, v_num=0, train/loss_step=2.800, train/acc_step=0.250, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  18%|#7        | 660/3714 [1:10:29<5:26:12,  6.41s/it, loss=3.26, v_num=0, train/loss_step=2.990, train/acc_step=0.375, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  22%|##2       | 825/3714 [1:12:00<4:12:10,  5.24s/it, loss=3.26, v_num=0, train/loss_step=2.990, train/acc_step=0.375, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  22%|##2       | 825/3714 [1:12:00<4:12:10,  5.24s/it, loss=3.2, v_num=0, train/loss_step=3.170, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106] Epoch 2:  27%|##6       | 990/3714 [1:13:32<3:22:22,  4.46s/it, loss=3.2, v_num=0, train/loss_step=3.170, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  27%|##6       | 990/3714 [1:13:32<3:22:22,  4.46s/it, loss=3.2, v_num=0, train/loss_step=3.070, train/acc_step=0.000, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  31%|###1      | 1155/3714 [1:15:07<2:46:25,  3.90s/it, loss=3.2, v_num=0, train/loss_step=3.070, train/acc_step=0.000, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  31%|###1      | 1155/3714 [1:15:07<2:46:25,  3.90s/it, loss=3.17, v_num=0, train/loss_step=2.940, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  36%|###5      | 1320/3714 [1:16:42<2:19:07,  3.49s/it, loss=3.17, v_num=0, train/loss_step=2.940, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  36%|###5      | 1320/3714 [1:16:42<2:19:07,  3.49s/it, loss=3.22, v_num=0, train/loss_step=3.610, train/acc_step=0.000, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  40%|###9      | 1485/3714 [1:18:17<1:57:30,  3.16s/it, loss=3.22, v_num=0, train/loss_step=3.610, train/acc_step=0.000, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  40%|###9      | 1485/3714 [1:18:17<1:57:30,  3.16s/it, loss=3.23, v_num=0, train/loss_step=3.480, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  44%|####4     | 1650/3714 [1:19:52<1:39:54,  2.90s/it, loss=3.23, v_num=0, train/loss_step=3.480, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  44%|####4     | 1650/3714 [1:19:52<1:39:54,  2.90s/it, loss=3.31, v_num=0, train/loss_step=2.990, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  49%|####8     | 1815/3714 [1:21:26<1:25:12,  2.69s/it, loss=3.31, v_num=0, train/loss_step=2.990, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  49%|####8     | 1815/3714 [1:21:26<1:25:12,  2.69s/it, loss=3.2, v_num=0, train/loss_step=3.350, train/acc_step=0.250, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106] Epoch 2:  53%|#####3    | 1980/3714 [1:23:01<1:12:42,  2.52s/it, loss=3.2, v_num=0, train/loss_step=3.350, train/acc_step=0.250, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  53%|#####3    | 1980/3714 [1:23:01<1:12:42,  2.52s/it, loss=3.13, v_num=0, train/loss_step=3.480, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  58%|#####7    | 2145/3714 [1:24:36<1:01:53,  2.37s/it, loss=3.13, v_num=0, train/loss_step=3.480, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  58%|#####7    | 2145/3714 [1:24:36<1:01:53,  2.37s/it, loss=3.12, v_num=0, train/loss_step=3.130, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  62%|######2   | 2310/3714 [1:26:09<52:22,  2.24s/it, loss=3.12, v_num=0, train/loss_step=3.130, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]  Epoch 2:  62%|######2   | 2310/3714 [1:26:09<52:22,  2.24s/it, loss=3.15, v_num=0, train/loss_step=3.370, train/acc_step=0.375, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  67%|######6   | 2475/3714 [1:27:42<43:54,  2.13s/it, loss=3.15, v_num=0, train/loss_step=3.370, train/acc_step=0.375, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  67%|######6   | 2475/3714 [1:27:42<43:54,  2.13s/it, loss=3.31, v_num=0, train/loss_step=3.280, train/acc_step=0.250, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  71%|#######1  | 2640/3714 [1:29:17<36:19,  2.03s/it, loss=3.31, v_num=0, train/loss_step=3.280, train/acc_step=0.250, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  71%|#######1  | 2640/3714 [1:29:17<36:19,  2.03s/it, loss=3.09, v_num=0, train/loss_step=3.200, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  76%|#######5  | 2805/3714 [1:30:51<29:26,  1.94s/it, loss=3.09, v_num=0, train/loss_step=3.200, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  76%|#######5  | 2805/3714 [1:30:51<29:26,  1.94s/it, loss=3.15, v_num=0, train/loss_step=3.590, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  80%|#######9  | 2970/3714 [1:32:24<23:08,  1.87s/it, loss=3.15, v_num=0, train/loss_step=3.590, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  80%|#######9  | 2970/3714 [1:32:24<23:08,  1.87s/it, loss=3.15, v_num=0, train/loss_step=3.290, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  84%|########4 | 3135/3714 [1:33:58<17:21,  1.80s/it, loss=3.15, v_num=0, train/loss_step=3.290, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  84%|########4 | 3135/3714 [1:33:58<17:21,  1.80s/it, loss=3.09, v_num=0, train/loss_step=2.880, train/acc_step=0.250, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  89%|########8 | 3300/3714 [1:35:32<11:59,  1.74s/it, loss=3.09, v_num=0, train/loss_step=2.880, train/acc_step=0.250, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  89%|########8 | 3300/3714 [1:35:32<11:59,  1.74s/it, loss=3.07, v_num=0, train/loss_step=2.460, train/acc_step=0.500, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  89%|########8 | 3302/3714 [1:35:34<11:55,  1.74s/it, loss=3.07, v_num=0, train/loss_step=2.460, train/acc_step=0.500, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  89%|########8 | 3302/3714 [1:35:34<11:55,  1.74s/it, loss=3.08, v_num=0, train/loss_step=2.990, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:04<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:32<00:48,  5.05it/s][AEpoch 2:  93%|#########3| 3467/3714 [1:36:07<06:50,  1.66s/it, loss=3.08, v_num=0, train/loss_step=2.990, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]
Validation DataLoader 0:  80%|########  | 330/412 [01:05<00:16,  5.06it/s][AEpoch 2:  98%|#########7| 3632/3714 [1:36:40<02:10,  1.60s/it, loss=3.08, v_num=0, train/loss_step=2.990, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]
Validation DataLoader 0: 100%|##########| 412/412 [01:20<00:00,  5.12it/s][AEpoch 2: 100%|##########| 3714/3714 [1:36:55<00:00,  1.57s/it, loss=3.08, v_num=0, train/loss_step=2.990, train/acc_step=0.125, val/loss_step=2.850, val/acc_step=0.375, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.121, val/haversine_distance_epoch=1.820, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2: 100%|##########| 3714/3714 [1:36:55<00:00,  1.57s/it, loss=3.08, v_num=0, train/loss_step=2.990, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.390, train/acc_epoch=0.106]
                                                                          [AMetric val/loss improved by 0.198 >= min_delta = 0.0. New best score: 3.072
Epoch 2: 100%|##########| 3714/3714 [1:37:03<00:00,  1.57s/it, loss=3.08, v_num=0, train/loss_step=2.990, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3: 100%|##########| 3714/3714 [1:37:03<00:00,  1.57s/it, loss=3.08, v_num=0, train/loss_step=2.990, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:   4%|4         | 165/3714 [1:38:42<35:23:09, 35.89s/it, loss=3.08, v_num=0, train/loss_step=2.990, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:   4%|4         | 165/3714 [1:38:42<35:23:09, 35.89s/it, loss=3.06, v_num=0, train/loss_step=3.280, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:   9%|8         | 330/3714 [1:40:15<17:08:03, 18.23s/it, loss=3.06, v_num=0, train/loss_step=3.280, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:   9%|8         | 330/3714 [1:40:15<17:08:03, 18.23s/it, loss=3.04, v_num=0, train/loss_step=2.990, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  13%|#3        | 495/3714 [1:41:47<11:01:56, 12.34s/it, loss=3.04, v_num=0, train/loss_step=2.990, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  13%|#3        | 495/3714 [1:41:47<11:01:56, 12.34s/it, loss=3.13, v_num=0, train/loss_step=2.980, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  18%|#7        | 660/3714 [1:43:20<7:58:10,  9.39s/it, loss=3.13, v_num=0, train/loss_step=2.980, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136] Epoch 3:  18%|#7        | 660/3714 [1:43:20<7:58:10,  9.39s/it, loss=2.91, v_num=0, train/loss_step=3.100, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  22%|##2       | 825/3714 [1:44:53<6:07:18,  7.63s/it, loss=2.91, v_num=0, train/loss_step=3.100, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  22%|##2       | 825/3714 [1:44:53<6:07:18,  7.63s/it, loss=3.07, v_num=0, train/loss_step=2.920, train/acc_step=0.250, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  27%|##6       | 990/3714 [1:46:26<4:52:52,  6.45s/it, loss=3.07, v_num=0, train/loss_step=2.920, train/acc_step=0.250, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  27%|##6       | 990/3714 [1:46:26<4:52:52,  6.45s/it, loss=3.09, v_num=0, train/loss_step=2.870, train/acc_step=0.250, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  31%|###1      | 1155/3714 [1:47:59<3:59:16,  5.61s/it, loss=3.09, v_num=0, train/loss_step=2.870, train/acc_step=0.250, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  31%|###1      | 1155/3714 [1:47:59<3:59:16,  5.61s/it, loss=3.06, v_num=0, train/loss_step=2.880, train/acc_step=0.250, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  36%|###5      | 1320/3714 [1:49:33<3:18:42,  4.98s/it, loss=3.06, v_num=0, train/loss_step=2.880, train/acc_step=0.250, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  36%|###5      | 1320/3714 [1:49:33<3:18:42,  4.98s/it, loss=3.15, v_num=0, train/loss_step=3.310, train/acc_step=0.000, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  40%|###9      | 1485/3714 [1:51:06<2:46:45,  4.49s/it, loss=3.15, v_num=0, train/loss_step=3.310, train/acc_step=0.000, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  40%|###9      | 1485/3714 [1:51:06<2:46:45,  4.49s/it, loss=3.08, v_num=0, train/loss_step=3.180, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  44%|####4     | 1650/3714 [1:52:40<2:20:56,  4.10s/it, loss=3.08, v_num=0, train/loss_step=3.180, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  44%|####4     | 1650/3714 [1:52:40<2:20:56,  4.10s/it, loss=3.03, v_num=0, train/loss_step=2.810, train/acc_step=0.000, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  49%|####8     | 1815/3714 [1:54:13<1:59:31,  3.78s/it, loss=3.03, v_num=0, train/loss_step=2.810, train/acc_step=0.000, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  49%|####8     | 1815/3714 [1:54:13<1:59:31,  3.78s/it, loss=3, v_num=0, train/loss_step=2.510, train/acc_step=0.375, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]   Epoch 3:  53%|#####3    | 1980/3714 [1:55:47<1:41:24,  3.51s/it, loss=3, v_num=0, train/loss_step=2.510, train/acc_step=0.375, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  53%|#####3    | 1980/3714 [1:55:47<1:41:24,  3.51s/it, loss=2.91, v_num=0, train/loss_step=2.880, train/acc_step=0.250, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  58%|#####7    | 2145/3714 [1:57:20<1:25:50,  3.28s/it, loss=2.91, v_num=0, train/loss_step=2.880, train/acc_step=0.250, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  58%|#####7    | 2145/3714 [1:57:20<1:25:50,  3.28s/it, loss=3.13, v_num=0, train/loss_step=3.400, train/acc_step=0.250, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  62%|######2   | 2310/3714 [1:58:54<1:12:16,  3.09s/it, loss=3.13, v_num=0, train/loss_step=3.400, train/acc_step=0.250, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  62%|######2   | 2310/3714 [1:58:54<1:12:16,  3.09s/it, loss=3.19, v_num=0, train/loss_step=3.460, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  67%|######6   | 2475/3714 [2:00:26<1:00:17,  2.92s/it, loss=3.19, v_num=0, train/loss_step=3.460, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  67%|######6   | 2475/3714 [2:00:26<1:00:17,  2.92s/it, loss=3.05, v_num=0, train/loss_step=3.190, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  71%|#######1  | 2640/3714 [2:02:05<49:39,  2.77s/it, loss=3.05, v_num=0, train/loss_step=3.190, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]  Epoch 3:  71%|#######1  | 2640/3714 [2:02:05<49:39,  2.77s/it, loss=2.94, v_num=0, train/loss_step=3.450, train/acc_step=0.250, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  76%|#######5  | 2805/3714 [2:03:40<40:04,  2.65s/it, loss=2.94, v_num=0, train/loss_step=3.450, train/acc_step=0.250, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  76%|#######5  | 2805/3714 [2:03:40<40:04,  2.65s/it, loss=3, v_num=0, train/loss_step=3.380, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]   Epoch 3:  80%|#######9  | 2970/3714 [2:05:15<31:22,  2.53s/it, loss=3, v_num=0, train/loss_step=3.380, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  80%|#######9  | 2970/3714 [2:05:15<31:22,  2.53s/it, loss=3.09, v_num=0, train/loss_step=3.710, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  84%|########4 | 3135/3714 [2:06:52<23:25,  2.43s/it, loss=3.09, v_num=0, train/loss_step=3.710, train/acc_step=0.125, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  84%|########4 | 3135/3714 [2:06:52<23:25,  2.43s/it, loss=3.07, v_num=0, train/loss_step=2.610, train/acc_step=0.250, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  89%|########8 | 3300/3714 [2:08:27<16:06,  2.34s/it, loss=3.07, v_num=0, train/loss_step=2.610, train/acc_step=0.250, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  89%|########8 | 3300/3714 [2:08:27<16:06,  2.34s/it, loss=3.06, v_num=0, train/loss_step=2.650, train/acc_step=0.250, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  89%|########8 | 3302/3714 [2:08:29<16:01,  2.33s/it, loss=3.06, v_num=0, train/loss_step=2.650, train/acc_step=0.250, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3:  89%|########8 | 3302/3714 [2:08:29<16:01,  2.33s/it, loss=3.05, v_num=0, train/loss_step=2.880, train/acc_step=0.000, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:04<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:32<00:48,  5.07it/s][AEpoch 3:  93%|#########3| 3467/3714 [2:09:02<09:11,  2.23s/it, loss=3.05, v_num=0, train/loss_step=2.880, train/acc_step=0.000, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]
Validation DataLoader 0:  80%|########  | 330/412 [01:00<00:15,  5.44it/s][AEpoch 3:  98%|#########7| 3632/3714 [2:09:30<02:55,  2.14s/it, loss=3.05, v_num=0, train/loss_step=2.880, train/acc_step=0.000, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]
Validation DataLoader 0: 100%|##########| 412/412 [01:16<00:00,  5.41it/s][AEpoch 3: 100%|##########| 3714/3714 [2:09:46<00:00,  2.10s/it, loss=3.05, v_num=0, train/loss_step=2.880, train/acc_step=0.000, val/loss_step=2.520, val/acc_step=0.375, val/haversine_distance_step=1.510, val/loss_epoch=3.070, val/acc_epoch=0.157, val/haversine_distance_epoch=1.700, train/loss_epoch=3.210, train/acc_epoch=0.136]Epoch 3: 100%|##########| 3714/3714 [2:09:46<00:00,  2.10s/it, loss=3.05, v_num=0, train/loss_step=2.880, train/acc_step=0.000, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.210, train/acc_epoch=0.136]
                                                                          [AMetric val/loss improved by 0.080 >= min_delta = 0.0. New best score: 2.992
Epoch 3: 100%|##########| 3714/3714 [2:09:56<00:00,  2.10s/it, loss=3.05, v_num=0, train/loss_step=2.880, train/acc_step=0.000, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4: 100%|##########| 3714/3714 [2:09:57<00:00,  2.10s/it, loss=3.05, v_num=0, train/loss_step=2.880, train/acc_step=0.000, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:   4%|4         | 165/3714 [2:11:36<47:10:53, 47.86s/it, loss=3.05, v_num=0, train/loss_step=2.880, train/acc_step=0.000, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:   4%|4         | 165/3714 [2:11:36<47:10:53, 47.86s/it, loss=2.91, v_num=0, train/loss_step=2.800, train/acc_step=0.250, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:   9%|8         | 330/3714 [2:13:07<22:45:10, 24.21s/it, loss=2.91, v_num=0, train/loss_step=2.800, train/acc_step=0.250, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:   9%|8         | 330/3714 [2:13:07<22:45:10, 24.21s/it, loss=3.02, v_num=0, train/loss_step=3.030, train/acc_step=0.125, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  13%|#3        | 495/3714 [2:14:39<14:35:43, 16.32s/it, loss=3.02, v_num=0, train/loss_step=3.030, train/acc_step=0.125, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  13%|#3        | 495/3714 [2:14:39<14:35:43, 16.32s/it, loss=2.96, v_num=0, train/loss_step=2.570, train/acc_step=0.250, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  18%|#7        | 660/3714 [2:16:11<10:30:10, 12.38s/it, loss=2.96, v_num=0, train/loss_step=2.570, train/acc_step=0.250, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  18%|#7        | 660/3714 [2:16:11<10:30:10, 12.38s/it, loss=3.08, v_num=0, train/loss_step=2.570, train/acc_step=0.125, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  22%|##2       | 825/3714 [2:17:44<8:02:19, 10.02s/it, loss=3.08, v_num=0, train/loss_step=2.570, train/acc_step=0.125, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160] Epoch 4:  22%|##2       | 825/3714 [2:17:44<8:02:19, 10.02s/it, loss=3.04, v_num=0, train/loss_step=2.780, train/acc_step=0.250, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  27%|##6       | 990/3714 [2:19:18<6:23:19,  8.44s/it, loss=3.04, v_num=0, train/loss_step=2.780, train/acc_step=0.250, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  27%|##6       | 990/3714 [2:19:18<6:23:19,  8.44s/it, loss=2.95, v_num=0, train/loss_step=3.660, train/acc_step=0.000, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  31%|###1      | 1155/3714 [2:20:51<5:12:05,  7.32s/it, loss=2.95, v_num=0, train/loss_step=3.660, train/acc_step=0.000, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  31%|###1      | 1155/3714 [2:20:51<5:12:05,  7.32s/it, loss=3.04, v_num=0, train/loss_step=3.050, train/acc_step=0.125, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  36%|###5      | 1320/3714 [2:22:24<4:18:16,  6.47s/it, loss=3.04, v_num=0, train/loss_step=3.050, train/acc_step=0.125, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  36%|###5      | 1320/3714 [2:22:24<4:18:16,  6.47s/it, loss=2.84, v_num=0, train/loss_step=2.710, train/acc_step=0.250, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  40%|###9      | 1485/3714 [2:23:57<3:36:04,  5.82s/it, loss=2.84, v_num=0, train/loss_step=2.710, train/acc_step=0.250, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  40%|###9      | 1485/3714 [2:23:57<3:36:04,  5.82s/it, loss=2.93, v_num=0, train/loss_step=2.960, train/acc_step=0.125, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  44%|####4     | 1650/3714 [2:25:31<3:02:02,  5.29s/it, loss=2.93, v_num=0, train/loss_step=2.960, train/acc_step=0.125, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  44%|####4     | 1650/3714 [2:25:31<3:02:02,  5.29s/it, loss=2.94, v_num=0, train/loss_step=2.850, train/acc_step=0.375, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  49%|####8     | 1815/3714 [2:27:04<2:33:52,  4.86s/it, loss=2.94, v_num=0, train/loss_step=2.850, train/acc_step=0.375, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  49%|####8     | 1815/3714 [2:27:04<2:33:52,  4.86s/it, loss=2.84, v_num=0, train/loss_step=3.050, train/acc_step=0.125, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  53%|#####3    | 1980/3714 [2:28:38<2:10:10,  4.50s/it, loss=2.84, v_num=0, train/loss_step=3.050, train/acc_step=0.125, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  53%|#####3    | 1980/3714 [2:28:38<2:10:10,  4.50s/it, loss=2.99, v_num=0, train/loss_step=3.290, train/acc_step=0.125, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  58%|#####7    | 2145/3714 [2:30:10<1:49:51,  4.20s/it, loss=2.99, v_num=0, train/loss_step=3.290, train/acc_step=0.125, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  58%|#####7    | 2145/3714 [2:30:10<1:49:51,  4.20s/it, loss=2.88, v_num=0, train/loss_step=2.610, train/acc_step=0.375, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  62%|######2   | 2310/3714 [2:31:42<1:32:12,  3.94s/it, loss=2.88, v_num=0, train/loss_step=2.610, train/acc_step=0.375, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  62%|######2   | 2310/3714 [2:31:42<1:32:12,  3.94s/it, loss=2.93, v_num=0, train/loss_step=2.450, train/acc_step=0.500, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  67%|######6   | 2475/3714 [2:33:16<1:16:43,  3.72s/it, loss=2.93, v_num=0, train/loss_step=2.450, train/acc_step=0.500, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  67%|######6   | 2475/3714 [2:33:16<1:16:43,  3.72s/it, loss=3, v_num=0, train/loss_step=3.170, train/acc_step=0.125, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]   Epoch 4:  71%|#######1  | 2640/3714 [2:34:50<1:02:59,  3.52s/it, loss=3, v_num=0, train/loss_step=3.170, train/acc_step=0.125, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  71%|#######1  | 2640/3714 [2:34:50<1:02:59,  3.52s/it, loss=2.93, v_num=0, train/loss_step=3.610, train/acc_step=0.000, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  76%|#######5  | 2805/3714 [2:36:24<50:41,  3.35s/it, loss=2.93, v_num=0, train/loss_step=3.610, train/acc_step=0.000, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]  Epoch 4:  76%|#######5  | 2805/3714 [2:36:24<50:41,  3.35s/it, loss=3.01, v_num=0, train/loss_step=3.780, train/acc_step=0.000, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  80%|#######9  | 2970/3714 [2:37:57<39:34,  3.19s/it, loss=3.01, v_num=0, train/loss_step=3.780, train/acc_step=0.000, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  80%|#######9  | 2970/3714 [2:37:57<39:34,  3.19s/it, loss=2.92, v_num=0, train/loss_step=3.210, train/acc_step=0.250, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  84%|########4 | 3135/3714 [2:39:31<29:27,  3.05s/it, loss=2.92, v_num=0, train/loss_step=3.210, train/acc_step=0.250, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  84%|########4 | 3135/3714 [2:39:31<29:27,  3.05s/it, loss=3.05, v_num=0, train/loss_step=2.960, train/acc_step=0.375, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  89%|########8 | 3300/3714 [2:41:03<20:12,  2.93s/it, loss=3.05, v_num=0, train/loss_step=2.960, train/acc_step=0.375, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  89%|########8 | 3300/3714 [2:41:03<20:12,  2.93s/it, loss=2.91, v_num=0, train/loss_step=3.360, train/acc_step=0.125, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  89%|########8 | 3302/3714 [2:41:05<20:05,  2.93s/it, loss=2.91, v_num=0, train/loss_step=3.360, train/acc_step=0.125, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  89%|########8 | 3302/3714 [2:41:05<20:05,  2.93s/it, loss=2.85, v_num=0, train/loss_step=2.340, train/acc_step=0.250, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:04<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:33<00:50,  4.87it/s][AEpoch 4:  93%|#########3| 3467/3714 [2:41:40<11:31,  2.80s/it, loss=2.85, v_num=0, train/loss_step=2.340, train/acc_step=0.250, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]
Validation DataLoader 0:  80%|########  | 330/412 [01:07<00:16,  4.89it/s][AEpoch 4:  98%|#########7| 3632/3714 [2:42:13<03:39,  2.68s/it, loss=2.85, v_num=0, train/loss_step=2.340, train/acc_step=0.250, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]
Validation DataLoader 0: 100%|##########| 412/412 [01:21<00:00,  5.04it/s][AEpoch 4: 100%|##########| 3714/3714 [2:42:28<00:00,  2.62s/it, loss=2.85, v_num=0, train/loss_step=2.340, train/acc_step=0.250, val/loss_step=2.690, val/acc_step=0.375, val/haversine_distance_step=1.620, val/loss_epoch=2.990, val/acc_epoch=0.159, val/haversine_distance_epoch=1.670, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4: 100%|##########| 3714/3714 [2:42:28<00:00,  2.62s/it, loss=2.85, v_num=0, train/loss_step=2.340, train/acc_step=0.250, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=3.080, train/acc_epoch=0.160]
                                                                          [AMetric val/loss improved by 0.116 >= min_delta = 0.0. New best score: 2.876
Epoch 4: 100%|##########| 3714/3714 [2:42:35<00:00,  2.63s/it, loss=2.85, v_num=0, train/loss_step=2.340, train/acc_step=0.250, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5: 100%|##########| 3714/3714 [2:42:35<00:00,  2.63s/it, loss=2.85, v_num=0, train/loss_step=2.340, train/acc_step=0.250, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/callbacks/finetuning.py:210: UserWarning: The provided params to be frozen already exist within another group of this optimizer. Those parameters will be skipped.
HINT: Did you init your optimizer in `configure_optimizer` as such:
 <class 'torch.optim.adam.Adam'>(filter(lambda p: p.requires_grad, self.parameters()), ...) 
  rank_zero_warn(
Epoch 5:   4%|4         | 165/3714 [2:44:47<59:04:36, 59.93s/it, loss=2.85, v_num=0, train/loss_step=2.340, train/acc_step=0.250, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:   4%|4         | 165/3714 [2:44:47<59:04:36, 59.93s/it, loss=3.03, v_num=0, train/loss_step=2.820, train/acc_step=0.375, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:   9%|8         | 330/3714 [2:46:51<28:31:04, 30.34s/it, loss=3.03, v_num=0, train/loss_step=2.820, train/acc_step=0.375, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:   9%|8         | 330/3714 [2:46:51<28:31:04, 30.34s/it, loss=2.91, v_num=0, train/loss_step=2.770, train/acc_step=0.375, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  13%|#3        | 495/3714 [2:48:54<18:18:21, 20.47s/it, loss=2.91, v_num=0, train/loss_step=2.770, train/acc_step=0.375, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  13%|#3        | 495/3714 [2:48:54<18:18:21, 20.47s/it, loss=2.86, v_num=0, train/loss_step=2.360, train/acc_step=0.375, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  18%|#7        | 660/3714 [2:50:58<13:11:06, 15.54s/it, loss=2.86, v_num=0, train/loss_step=2.360, train/acc_step=0.375, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  18%|#7        | 660/3714 [2:50:58<13:11:06, 15.54s/it, loss=2.71, v_num=0, train/loss_step=3.260, train/acc_step=0.000, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  22%|##2       | 825/3714 [2:53:01<10:05:54, 12.58s/it, loss=2.71, v_num=0, train/loss_step=3.260, train/acc_step=0.000, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  22%|##2       | 825/3714 [2:53:01<10:05:54, 12.58s/it, loss=2.64, v_num=0, train/loss_step=2.970, train/acc_step=0.125, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  27%|##6       | 990/3714 [2:55:06<8:01:48, 10.61s/it, loss=2.64, v_num=0, train/loss_step=2.970, train/acc_step=0.125, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180] Epoch 5:  27%|##6       | 990/3714 [2:55:06<8:01:48, 10.61s/it, loss=2.7, v_num=0, train/loss_step=2.780, train/acc_step=0.125, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180] Epoch 5:  31%|###1      | 1155/3714 [2:57:09<6:32:29,  9.20s/it, loss=2.7, v_num=0, train/loss_step=2.780, train/acc_step=0.125, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  31%|###1      | 1155/3714 [2:57:09<6:32:29,  9.20s/it, loss=2.64, v_num=0, train/loss_step=3.130, train/acc_step=0.125, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  36%|###5      | 1320/3714 [2:59:14<5:25:05,  8.15s/it, loss=2.64, v_num=0, train/loss_step=3.130, train/acc_step=0.125, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  36%|###5      | 1320/3714 [2:59:14<5:25:05,  8.15s/it, loss=2.6, v_num=0, train/loss_step=2.250, train/acc_step=0.375, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180] Epoch 5:  40%|###9      | 1485/3714 [3:01:21<4:32:13,  7.33s/it, loss=2.6, v_num=0, train/loss_step=2.250, train/acc_step=0.375, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  40%|###9      | 1485/3714 [3:01:21<4:32:13,  7.33s/it, loss=2.69, v_num=0, train/loss_step=2.280, train/acc_step=0.250, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  44%|####4     | 1650/3714 [3:03:26<3:49:27,  6.67s/it, loss=2.69, v_num=0, train/loss_step=2.280, train/acc_step=0.250, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  44%|####4     | 1650/3714 [3:03:26<3:49:27,  6.67s/it, loss=2.72, v_num=0, train/loss_step=2.800, train/acc_step=0.250, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  49%|####8     | 1815/3714 [3:05:33<3:14:08,  6.13s/it, loss=2.72, v_num=0, train/loss_step=2.800, train/acc_step=0.250, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  49%|####8     | 1815/3714 [3:05:33<3:14:08,  6.13s/it, loss=2.68, v_num=0, train/loss_step=2.560, train/acc_step=0.500, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  53%|#####3    | 1980/3714 [3:07:42<2:44:23,  5.69s/it, loss=2.68, v_num=0, train/loss_step=2.560, train/acc_step=0.500, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  53%|#####3    | 1980/3714 [3:07:42<2:44:23,  5.69s/it, loss=2.52, v_num=0, train/loss_step=2.960, train/acc_step=0.250, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  58%|#####7    | 2145/3714 [3:09:48<2:18:50,  5.31s/it, loss=2.52, v_num=0, train/loss_step=2.960, train/acc_step=0.250, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  58%|#####7    | 2145/3714 [3:09:48<2:18:50,  5.31s/it, loss=2.4, v_num=0, train/loss_step=2.320, train/acc_step=0.125, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180] Epoch 5:  62%|######2   | 2310/3714 [3:11:55<1:56:39,  4.99s/it, loss=2.4, v_num=0, train/loss_step=2.320, train/acc_step=0.125, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  62%|######2   | 2310/3714 [3:11:55<1:56:39,  4.99s/it, loss=2.48, v_num=0, train/loss_step=2.620, train/acc_step=0.250, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  67%|######6   | 2475/3714 [3:14:01<1:37:07,  4.70s/it, loss=2.48, v_num=0, train/loss_step=2.620, train/acc_step=0.250, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  67%|######6   | 2475/3714 [3:14:01<1:37:07,  4.70s/it, loss=2.53, v_num=0, train/loss_step=2.200, train/acc_step=0.500, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  71%|#######1  | 2640/3714 [3:16:09<1:19:48,  4.46s/it, loss=2.53, v_num=0, train/loss_step=2.200, train/acc_step=0.500, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  71%|#######1  | 2640/3714 [3:16:09<1:19:48,  4.46s/it, loss=2.47, v_num=0, train/loss_step=2.490, train/acc_step=0.125, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  76%|#######5  | 2805/3714 [3:18:14<1:04:14,  4.24s/it, loss=2.47, v_num=0, train/loss_step=2.490, train/acc_step=0.125, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  76%|#######5  | 2805/3714 [3:18:14<1:04:14,  4.24s/it, loss=2.46, v_num=0, train/loss_step=2.050, train/acc_step=0.375, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  80%|#######9  | 2970/3714 [3:20:19<50:10,  4.05s/it, loss=2.46, v_num=0, train/loss_step=2.050, train/acc_step=0.375, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]  Epoch 5:  80%|#######9  | 2970/3714 [3:20:19<50:10,  4.05s/it, loss=2.48, v_num=0, train/loss_step=2.270, train/acc_step=0.125, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  84%|########4 | 3135/3714 [3:22:24<37:22,  3.87s/it, loss=2.48, v_num=0, train/loss_step=2.270, train/acc_step=0.125, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  84%|########4 | 3135/3714 [3:22:24<37:22,  3.87s/it, loss=2.54, v_num=0, train/loss_step=1.710, train/acc_step=0.500, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  89%|########8 | 3300/3714 [3:24:30<25:39,  3.72s/it, loss=2.54, v_num=0, train/loss_step=1.710, train/acc_step=0.500, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  89%|########8 | 3300/3714 [3:24:30<25:39,  3.72s/it, loss=2.48, v_num=0, train/loss_step=2.410, train/acc_step=0.250, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  89%|########8 | 3302/3714 [3:24:32<25:31,  3.72s/it, loss=2.48, v_num=0, train/loss_step=2.410, train/acc_step=0.250, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5:  89%|########8 | 3302/3714 [3:24:32<25:31,  3.72s/it, loss=2.46, v_num=0, train/loss_step=2.720, train/acc_step=0.250, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:05<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:33<00:50,  4.93it/s][AEpoch 5:  93%|#########3| 3467/3714 [3:25:07<14:36,  3.55s/it, loss=2.46, v_num=0, train/loss_step=2.720, train/acc_step=0.250, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]
Validation DataLoader 0:  80%|########  | 330/412 [01:04<00:16,  5.08it/s][AEpoch 5:  98%|#########7| 3632/3714 [3:25:38<04:38,  3.40s/it, loss=2.46, v_num=0, train/loss_step=2.720, train/acc_step=0.250, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]
Validation DataLoader 0: 100%|##########| 412/412 [01:22<00:00,  5.02it/s][AEpoch 5: 100%|##########| 3714/3714 [3:25:56<00:00,  3.33s/it, loss=2.46, v_num=0, train/loss_step=2.720, train/acc_step=0.250, val/loss_step=2.460, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=2.880, val/acc_epoch=0.188, val/haversine_distance_epoch=1.680, train/loss_epoch=2.980, train/acc_epoch=0.180]Epoch 5: 100%|##########| 3714/3714 [3:25:56<00:00,  3.33s/it, loss=2.46, v_num=0, train/loss_step=2.720, train/acc_step=0.250, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.980, train/acc_epoch=0.180]
                                                                          [AMetric val/loss improved by 0.537 >= min_delta = 0.0. New best score: 2.339
Epoch 5: 100%|##########| 3714/3714 [3:26:04<00:00,  3.33s/it, loss=2.46, v_num=0, train/loss_step=2.720, train/acc_step=0.250, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6: 100%|##########| 3714/3714 [3:26:04<00:00,  3.33s/it, loss=2.46, v_num=0, train/loss_step=2.720, train/acc_step=0.250, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:   4%|4         | 165/3714 [3:28:17<74:40:12, 75.74s/it, loss=2.46, v_num=0, train/loss_step=2.720, train/acc_step=0.250, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:   4%|4         | 165/3714 [3:28:17<74:40:12, 75.74s/it, loss=2.28, v_num=0, train/loss_step=2.540, train/acc_step=0.250, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:   9%|8         | 330/3714 [3:30:21<35:57:10, 38.25s/it, loss=2.28, v_num=0, train/loss_step=2.540, train/acc_step=0.250, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:   9%|8         | 330/3714 [3:30:21<35:57:10, 38.25s/it, loss=2.24, v_num=0, train/loss_step=2.920, train/acc_step=0.375, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  13%|#3        | 495/3714 [3:32:22<23:01:07, 25.74s/it, loss=2.24, v_num=0, train/loss_step=2.920, train/acc_step=0.375, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  13%|#3        | 495/3714 [3:32:22<23:01:07, 25.74s/it, loss=2.19, v_num=0, train/loss_step=2.540, train/acc_step=0.000, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  18%|#7        | 660/3714 [3:34:27<16:32:21, 19.50s/it, loss=2.19, v_num=0, train/loss_step=2.540, train/acc_step=0.000, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  18%|#7        | 660/3714 [3:34:27<16:32:21, 19.50s/it, loss=2.11, v_num=0, train/loss_step=2.430, train/acc_step=0.250, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  22%|##2       | 825/3714 [3:36:34<12:38:22, 15.75s/it, loss=2.11, v_num=0, train/loss_step=2.430, train/acc_step=0.250, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  22%|##2       | 825/3714 [3:36:34<12:38:22, 15.75s/it, loss=2.29, v_num=0, train/loss_step=2.190, train/acc_step=0.250, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  27%|##6       | 990/3714 [3:38:38<10:01:35, 13.25s/it, loss=2.29, v_num=0, train/loss_step=2.190, train/acc_step=0.250, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  27%|##6       | 990/3714 [3:38:38<10:01:35, 13.25s/it, loss=2.17, v_num=0, train/loss_step=2.240, train/acc_step=0.375, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  31%|###1      | 1155/3714 [3:40:42<8:09:00, 11.47s/it, loss=2.17, v_num=0, train/loss_step=2.240, train/acc_step=0.375, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  31%|###1      | 1155/3714 [3:40:42<8:09:00, 11.47s/it, loss=2.3, v_num=0, train/loss_step=2.390, train/acc_step=0.125, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243] Epoch 6:  36%|###5      | 1320/3714 [3:42:49<6:44:08, 10.13s/it, loss=2.3, v_num=0, train/loss_step=2.390, train/acc_step=0.125, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  36%|###5      | 1320/3714 [3:42:49<6:44:08, 10.13s/it, loss=2.13, v_num=0, train/loss_step=2.510, train/acc_step=0.250, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  40%|###9      | 1485/3714 [3:44:55<5:37:37,  9.09s/it, loss=2.13, v_num=0, train/loss_step=2.510, train/acc_step=0.250, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  40%|###9      | 1485/3714 [3:44:55<5:37:37,  9.09s/it, loss=2.22, v_num=0, train/loss_step=2.320, train/acc_step=0.500, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  44%|####4     | 1650/3714 [3:46:58<4:43:56,  8.25s/it, loss=2.22, v_num=0, train/loss_step=2.320, train/acc_step=0.500, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  44%|####4     | 1650/3714 [3:46:58<4:43:56,  8.25s/it, loss=2.19, v_num=0, train/loss_step=1.720, train/acc_step=0.500, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  49%|####8     | 1815/3714 [3:49:02<3:59:38,  7.57s/it, loss=2.19, v_num=0, train/loss_step=1.720, train/acc_step=0.500, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  49%|####8     | 1815/3714 [3:49:02<3:59:38,  7.57s/it, loss=2.31, v_num=0, train/loss_step=1.880, train/acc_step=0.375, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  53%|#####3    | 1980/3714 [3:51:07<3:22:24,  7.00s/it, loss=2.31, v_num=0, train/loss_step=1.880, train/acc_step=0.375, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  53%|#####3    | 1980/3714 [3:51:07<3:22:24,  7.00s/it, loss=2.3, v_num=0, train/loss_step=2.210, train/acc_step=0.125, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243] Epoch 6:  58%|#####7    | 2145/3714 [3:53:13<2:50:35,  6.52s/it, loss=2.3, v_num=0, train/loss_step=2.210, train/acc_step=0.125, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  58%|#####7    | 2145/3714 [3:53:13<2:50:35,  6.52s/it, loss=2.23, v_num=0, train/loss_step=2.610, train/acc_step=0.125, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  62%|######2   | 2310/3714 [3:55:17<2:23:00,  6.11s/it, loss=2.23, v_num=0, train/loss_step=2.610, train/acc_step=0.125, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  62%|######2   | 2310/3714 [3:55:17<2:23:00,  6.11s/it, loss=2.15, v_num=0, train/loss_step=1.990, train/acc_step=0.375, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  67%|######6   | 2475/3714 [3:57:22<1:58:49,  5.75s/it, loss=2.15, v_num=0, train/loss_step=1.990, train/acc_step=0.375, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  67%|######6   | 2475/3714 [3:57:22<1:58:49,  5.75s/it, loss=2.26, v_num=0, train/loss_step=2.010, train/acc_step=0.250, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  71%|#######1  | 2640/3714 [3:59:27<1:37:25,  5.44s/it, loss=2.26, v_num=0, train/loss_step=2.010, train/acc_step=0.250, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  71%|#######1  | 2640/3714 [3:59:27<1:37:25,  5.44s/it, loss=2.17, v_num=0, train/loss_step=2.030, train/acc_step=0.250, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  76%|#######5  | 2805/3714 [4:01:33<1:18:16,  5.17s/it, loss=2.17, v_num=0, train/loss_step=2.030, train/acc_step=0.250, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  76%|#######5  | 2805/3714 [4:01:33<1:18:16,  5.17s/it, loss=2.42, v_num=0, train/loss_step=3.590, train/acc_step=0.125, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  80%|#######9  | 2970/3714 [4:03:38<1:01:02,  4.92s/it, loss=2.42, v_num=0, train/loss_step=3.590, train/acc_step=0.125, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  80%|#######9  | 2970/3714 [4:03:38<1:01:02,  4.92s/it, loss=2.12, v_num=0, train/loss_step=2.080, train/acc_step=0.500, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  84%|########4 | 3135/3714 [4:05:44<45:23,  4.70s/it, loss=2.12, v_num=0, train/loss_step=2.080, train/acc_step=0.500, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]  Epoch 6:  84%|########4 | 3135/3714 [4:05:44<45:23,  4.70s/it, loss=2.21, v_num=0, train/loss_step=2.090, train/acc_step=0.250, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  89%|########8 | 3300/3714 [4:07:50<31:05,  4.51s/it, loss=2.21, v_num=0, train/loss_step=2.090, train/acc_step=0.250, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  89%|########8 | 3300/3714 [4:07:50<31:05,  4.51s/it, loss=2.14, v_num=0, train/loss_step=2.190, train/acc_step=0.375, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  89%|########8 | 3302/3714 [4:07:51<30:55,  4.50s/it, loss=2.14, v_num=0, train/loss_step=2.190, train/acc_step=0.375, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6:  89%|########8 | 3302/3714 [4:07:51<30:55,  4.50s/it, loss=2.15, v_num=0, train/loss_step=1.850, train/acc_step=0.625, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:05<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:32<00:48,  5.12it/s][AEpoch 6:  93%|#########3| 3467/3714 [4:08:25<17:41,  4.30s/it, loss=2.15, v_num=0, train/loss_step=1.850, train/acc_step=0.625, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]
Validation DataLoader 0:  80%|########  | 330/412 [01:05<00:16,  5.01it/s][AEpoch 6:  98%|#########7| 3632/3714 [4:08:59<05:37,  4.11s/it, loss=2.15, v_num=0, train/loss_step=1.850, train/acc_step=0.625, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]
Validation DataLoader 0: 100%|##########| 412/412 [01:20<00:00,  5.10it/s][AEpoch 6: 100%|##########| 3714/3714 [4:09:14<00:00,  4.03s/it, loss=2.15, v_num=0, train/loss_step=1.850, train/acc_step=0.625, val/loss_step=2.150, val/acc_step=0.125, val/haversine_distance_step=1.810, val/loss_epoch=2.340, val/acc_epoch=0.314, val/haversine_distance_epoch=1.730, train/loss_epoch=2.650, train/acc_epoch=0.243]Epoch 6: 100%|##########| 3714/3714 [4:09:14<00:00,  4.03s/it, loss=2.15, v_num=0, train/loss_step=1.850, train/acc_step=0.625, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.650, train/acc_epoch=0.243]
                                                                          [AMetric val/loss improved by 0.129 >= min_delta = 0.0. New best score: 2.210
Epoch 6: 100%|##########| 3714/3714 [4:09:21<00:00,  4.03s/it, loss=2.15, v_num=0, train/loss_step=1.850, train/acc_step=0.625, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7: 100%|##########| 3714/3714 [4:09:21<00:00,  4.03s/it, loss=2.15, v_num=0, train/loss_step=1.850, train/acc_step=0.625, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:   4%|4         | 165/3714 [4:11:32<90:10:24, 91.47s/it, loss=2.15, v_num=0, train/loss_step=1.850, train/acc_step=0.625, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:   4%|4         | 165/3714 [4:11:32<90:10:24, 91.47s/it, loss=2.27, v_num=0, train/loss_step=2.230, train/acc_step=0.375, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:   9%|8         | 330/3714 [4:13:34<43:20:14, 46.10s/it, loss=2.27, v_num=0, train/loss_step=2.230, train/acc_step=0.375, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:   9%|8         | 330/3714 [4:13:34<43:20:14, 46.10s/it, loss=2.4, v_num=0, train/loss_step=2.290, train/acc_step=0.375, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362] Epoch 7:  13%|#3        | 495/3714 [4:15:36<27:42:11, 30.98s/it, loss=2.4, v_num=0, train/loss_step=2.290, train/acc_step=0.375, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  13%|#3        | 495/3714 [4:15:36<27:42:11, 30.98s/it, loss=2.04, v_num=0, train/loss_step=2.320, train/acc_step=0.250, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  18%|#7        | 660/3714 [4:17:40<19:52:20, 23.43s/it, loss=2.04, v_num=0, train/loss_step=2.320, train/acc_step=0.250, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  18%|#7        | 660/3714 [4:17:40<19:52:20, 23.43s/it, loss=2.03, v_num=0, train/loss_step=2.600, train/acc_step=0.125, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  22%|##2       | 825/3714 [4:19:44<15:09:35, 18.89s/it, loss=2.03, v_num=0, train/loss_step=2.600, train/acc_step=0.125, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  22%|##2       | 825/3714 [4:19:44<15:09:35, 18.89s/it, loss=2.2, v_num=0, train/loss_step=3.170, train/acc_step=0.125, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362] Epoch 7:  27%|##6       | 990/3714 [4:21:49<12:00:25, 15.87s/it, loss=2.2, v_num=0, train/loss_step=3.170, train/acc_step=0.125, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  27%|##6       | 990/3714 [4:21:49<12:00:25, 15.87s/it, loss=2.13, v_num=0, train/loss_step=1.920, train/acc_step=0.375, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  31%|###1      | 1155/3714 [4:23:51<9:44:35, 13.71s/it, loss=2.13, v_num=0, train/loss_step=1.920, train/acc_step=0.375, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  31%|###1      | 1155/3714 [4:23:51<9:44:35, 13.71s/it, loss=2.15, v_num=0, train/loss_step=2.700, train/acc_step=0.125, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  36%|###5      | 1320/3714 [4:25:55<8:02:18, 12.09s/it, loss=2.15, v_num=0, train/loss_step=2.700, train/acc_step=0.125, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  36%|###5      | 1320/3714 [4:25:55<8:02:18, 12.09s/it, loss=2.04, v_num=0, train/loss_step=2.640, train/acc_step=0.250, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  40%|###9      | 1485/3714 [4:28:00<6:42:16, 10.83s/it, loss=2.04, v_num=0, train/loss_step=2.640, train/acc_step=0.250, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  40%|###9      | 1485/3714 [4:28:00<6:42:16, 10.83s/it, loss=2.11, v_num=0, train/loss_step=2.200, train/acc_step=0.500, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  44%|####4     | 1650/3714 [4:30:04<5:37:50,  9.82s/it, loss=2.11, v_num=0, train/loss_step=2.200, train/acc_step=0.500, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  44%|####4     | 1650/3714 [4:30:04<5:37:50,  9.82s/it, loss=2.08, v_num=0, train/loss_step=1.880, train/acc_step=0.250, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  49%|####8     | 1815/3714 [4:32:06<4:44:41,  9.00s/it, loss=2.08, v_num=0, train/loss_step=1.880, train/acc_step=0.250, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  49%|####8     | 1815/3714 [4:32:06<4:44:41,  9.00s/it, loss=2.17, v_num=0, train/loss_step=2.400, train/acc_step=0.375, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  53%|#####3    | 1980/3714 [4:34:09<4:00:05,  8.31s/it, loss=2.17, v_num=0, train/loss_step=2.400, train/acc_step=0.375, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  53%|#####3    | 1980/3714 [4:34:09<4:00:05,  8.31s/it, loss=1.99, v_num=0, train/loss_step=2.170, train/acc_step=0.625, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  58%|#####7    | 2145/3714 [4:36:13<3:22:02,  7.73s/it, loss=1.99, v_num=0, train/loss_step=2.170, train/acc_step=0.625, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  58%|#####7    | 2145/3714 [4:36:13<3:22:02,  7.73s/it, loss=2.14, v_num=0, train/loss_step=2.010, train/acc_step=0.500, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  62%|######2   | 2310/3714 [4:38:19<2:49:09,  7.23s/it, loss=2.14, v_num=0, train/loss_step=2.010, train/acc_step=0.500, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  62%|######2   | 2310/3714 [4:38:19<2:49:09,  7.23s/it, loss=2.1, v_num=0, train/loss_step=2.290, train/acc_step=0.375, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362] Epoch 7:  67%|######6   | 2475/3714 [4:40:23<2:20:22,  6.80s/it, loss=2.1, v_num=0, train/loss_step=2.290, train/acc_step=0.375, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  67%|######6   | 2475/3714 [4:40:23<2:20:22,  6.80s/it, loss=2.16, v_num=0, train/loss_step=2.140, train/acc_step=0.375, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  71%|#######1  | 2640/3714 [4:42:27<1:54:54,  6.42s/it, loss=2.16, v_num=0, train/loss_step=2.140, train/acc_step=0.375, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  71%|#######1  | 2640/3714 [4:42:27<1:54:54,  6.42s/it, loss=2.03, v_num=0, train/loss_step=2.230, train/acc_step=0.375, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  76%|#######5  | 2805/3714 [4:44:32<1:32:12,  6.09s/it, loss=2.03, v_num=0, train/loss_step=2.230, train/acc_step=0.375, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  76%|#######5  | 2805/3714 [4:44:32<1:32:12,  6.09s/it, loss=2.21, v_num=0, train/loss_step=2.940, train/acc_step=0.125, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  80%|#######9  | 2970/3714 [4:46:36<1:11:47,  5.79s/it, loss=2.21, v_num=0, train/loss_step=2.940, train/acc_step=0.125, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  80%|#######9  | 2970/3714 [4:46:36<1:11:47,  5.79s/it, loss=2.18, v_num=0, train/loss_step=2.060, train/acc_step=0.250, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  84%|########4 | 3135/3714 [4:48:41<53:19,  5.53s/it, loss=2.18, v_num=0, train/loss_step=2.060, train/acc_step=0.250, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]  Epoch 7:  84%|########4 | 3135/3714 [4:48:41<53:19,  5.53s/it, loss=2.1, v_num=0, train/loss_step=2.190, train/acc_step=0.375, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362] Epoch 7:  89%|########8 | 3300/3714 [4:50:45<36:28,  5.29s/it, loss=2.1, v_num=0, train/loss_step=2.190, train/acc_step=0.375, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  89%|########8 | 3300/3714 [4:50:45<36:28,  5.29s/it, loss=2.12, v_num=0, train/loss_step=1.740, train/acc_step=0.500, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  89%|########8 | 3302/3714 [4:50:46<36:16,  5.28s/it, loss=2.12, v_num=0, train/loss_step=1.740, train/acc_step=0.500, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7:  89%|########8 | 3302/3714 [4:50:46<36:16,  5.28s/it, loss=2.02, v_num=0, train/loss_step=1.840, train/acc_step=0.625, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:04<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:32<00:48,  5.14it/s][AEpoch 7:  93%|#########3| 3467/3714 [4:51:20<20:45,  5.04s/it, loss=2.02, v_num=0, train/loss_step=1.840, train/acc_step=0.625, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]
Validation DataLoader 0:  80%|########  | 330/412 [00:58<00:14,  5.60it/s][AEpoch 7:  98%|#########7| 3632/3714 [4:51:47<06:35,  4.82s/it, loss=2.02, v_num=0, train/loss_step=1.840, train/acc_step=0.625, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]
Validation DataLoader 0: 100%|##########| 412/412 [01:11<00:00,  5.72it/s][AEpoch 7: 100%|##########| 3714/3714 [4:52:00<00:00,  4.72s/it, loss=2.02, v_num=0, train/loss_step=1.840, train/acc_step=0.625, val/loss_step=1.720, val/acc_step=0.375, val/haversine_distance_step=1.650, val/loss_epoch=2.210, val/acc_epoch=0.358, val/haversine_distance_epoch=1.710, train/loss_epoch=2.230, train/acc_epoch=0.362]Epoch 7: 100%|##########| 3714/3714 [4:52:00<00:00,  4.72s/it, loss=2.02, v_num=0, train/loss_step=1.840, train/acc_step=0.625, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.230, train/acc_epoch=0.362]
                                                                          [AMetric val/loss improved by 0.083 >= min_delta = 0.0. New best score: 2.127
Epoch 7: 100%|##########| 3714/3714 [4:52:11<00:00,  4.72s/it, loss=2.02, v_num=0, train/loss_step=1.840, train/acc_step=0.625, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8: 100%|##########| 3714/3714 [4:52:11<00:00,  4.72s/it, loss=2.02, v_num=0, train/loss_step=1.840, train/acc_step=0.625, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:   4%|4         | 165/3714 [4:54:21<105:31:32, 107.04s/it, loss=2.02, v_num=0, train/loss_step=1.840, train/acc_step=0.625, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:   4%|4         | 165/3714 [4:54:21<105:31:32, 107.04s/it, loss=2.07, v_num=0, train/loss_step=2.370, train/acc_step=0.125, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:   9%|8         | 330/3714 [4:56:24<50:39:31, 53.89s/it, loss=2.07, v_num=0, train/loss_step=2.370, train/acc_step=0.125, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]  Epoch 8:   9%|8         | 330/3714 [4:56:24<50:39:31, 53.89s/it, loss=2.08, v_num=0, train/loss_step=2.040, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  13%|#3        | 495/3714 [4:58:27<32:20:50, 36.18s/it, loss=2.08, v_num=0, train/loss_step=2.040, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  13%|#3        | 495/3714 [4:58:27<32:20:50, 36.18s/it, loss=2.08, v_num=0, train/loss_step=2.090, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  18%|#7        | 660/3714 [5:00:28<23:10:23, 27.32s/it, loss=2.08, v_num=0, train/loss_step=2.090, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  18%|#7        | 660/3714 [5:00:28<23:10:23, 27.32s/it, loss=2.06, v_num=0, train/loss_step=1.470, train/acc_step=0.625, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  22%|##2       | 825/3714 [5:02:31<17:39:23, 22.00s/it, loss=2.06, v_num=0, train/loss_step=1.470, train/acc_step=0.625, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  22%|##2       | 825/3714 [5:02:31<17:39:23, 22.00s/it, loss=2.05, v_num=0, train/loss_step=2.660, train/acc_step=0.125, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  27%|##6       | 990/3714 [5:04:35<13:58:05, 18.46s/it, loss=2.05, v_num=0, train/loss_step=2.660, train/acc_step=0.125, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  27%|##6       | 990/3714 [5:04:35<13:58:05, 18.46s/it, loss=2.15, v_num=0, train/loss_step=2.550, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  31%|###1      | 1155/3714 [5:06:38<11:19:23, 15.93s/it, loss=2.15, v_num=0, train/loss_step=2.550, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  31%|###1      | 1155/3714 [5:06:38<11:19:23, 15.93s/it, loss=2.17, v_num=0, train/loss_step=2.370, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  36%|###5      | 1320/3714 [5:08:41<9:19:51, 14.03s/it, loss=2.17, v_num=0, train/loss_step=2.370, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381] Epoch 8:  36%|###5      | 1320/3714 [5:08:41<9:19:51, 14.03s/it, loss=1.99, v_num=0, train/loss_step=1.960, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  40%|###9      | 1485/3714 [5:10:44<7:46:25, 12.56s/it, loss=1.99, v_num=0, train/loss_step=1.960, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  40%|###9      | 1485/3714 [5:10:44<7:46:25, 12.56s/it, loss=2.16, v_num=0, train/loss_step=2.040, train/acc_step=0.250, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  44%|####4     | 1650/3714 [5:12:47<6:31:17, 11.37s/it, loss=2.16, v_num=0, train/loss_step=2.040, train/acc_step=0.250, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  44%|####4     | 1650/3714 [5:12:47<6:31:17, 11.37s/it, loss=2, v_num=0, train/loss_step=2.100, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]   Epoch 8:  49%|####8     | 1815/3714 [5:14:53<5:29:27, 10.41s/it, loss=2, v_num=0, train/loss_step=2.100, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  49%|####8     | 1815/3714 [5:14:53<5:29:27, 10.41s/it, loss=1.98, v_num=0, train/loss_step=1.410, train/acc_step=0.750, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  53%|#####3    | 1980/3714 [5:16:58<4:37:35,  9.61s/it, loss=1.98, v_num=0, train/loss_step=1.410, train/acc_step=0.750, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  53%|#####3    | 1980/3714 [5:16:58<4:37:35,  9.61s/it, loss=2.06, v_num=0, train/loss_step=1.810, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  58%|#####7    | 2145/3714 [5:19:04<3:53:23,  8.93s/it, loss=2.06, v_num=0, train/loss_step=1.810, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  58%|#####7    | 2145/3714 [5:19:04<3:53:23,  8.93s/it, loss=1.95, v_num=0, train/loss_step=2.710, train/acc_step=0.250, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  62%|######2   | 2310/3714 [5:21:09<3:15:12,  8.34s/it, loss=1.95, v_num=0, train/loss_step=2.710, train/acc_step=0.250, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  62%|######2   | 2310/3714 [5:21:09<3:15:12,  8.34s/it, loss=2.1, v_num=0, train/loss_step=2.460, train/acc_step=0.500, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381] Epoch 8:  67%|######6   | 2475/3714 [5:23:16<2:41:49,  7.84s/it, loss=2.1, v_num=0, train/loss_step=2.460, train/acc_step=0.500, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  67%|######6   | 2475/3714 [5:23:16<2:41:49,  7.84s/it, loss=1.96, v_num=0, train/loss_step=2.060, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  71%|#######1  | 2640/3714 [5:25:19<2:12:20,  7.39s/it, loss=1.96, v_num=0, train/loss_step=2.060, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  71%|#######1  | 2640/3714 [5:25:19<2:12:20,  7.39s/it, loss=2.03, v_num=0, train/loss_step=2.620, train/acc_step=0.125, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  76%|#######5  | 2805/3714 [5:27:23<1:46:05,  7.00s/it, loss=2.03, v_num=0, train/loss_step=2.620, train/acc_step=0.125, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  76%|#######5  | 2805/3714 [5:27:23<1:46:05,  7.00s/it, loss=1.91, v_num=0, train/loss_step=1.430, train/acc_step=0.500, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  80%|#######9  | 2970/3714 [5:29:25<1:22:31,  6.66s/it, loss=1.91, v_num=0, train/loss_step=1.430, train/acc_step=0.500, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  80%|#######9  | 2970/3714 [5:29:25<1:22:31,  6.66s/it, loss=1.93, v_num=0, train/loss_step=2.210, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  84%|########4 | 3135/3714 [5:31:31<1:01:13,  6.34s/it, loss=1.93, v_num=0, train/loss_step=2.210, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  84%|########4 | 3135/3714 [5:31:31<1:01:13,  6.34s/it, loss=2.08, v_num=0, train/loss_step=1.880, train/acc_step=0.500, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  89%|########8 | 3300/3714 [5:33:34<41:50,  6.07s/it, loss=2.08, v_num=0, train/loss_step=1.880, train/acc_step=0.500, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]  Epoch 8:  89%|########8 | 3300/3714 [5:33:34<41:50,  6.07s/it, loss=2.18, v_num=0, train/loss_step=2.320, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  89%|########8 | 3302/3714 [5:33:36<41:37,  6.06s/it, loss=2.18, v_num=0, train/loss_step=2.320, train/acc_step=0.375, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8:  89%|########8 | 3302/3714 [5:33:36<41:37,  6.06s/it, loss=2.16, v_num=0, train/loss_step=1.830, train/acc_step=0.625, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:04<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:32<00:48,  5.09it/s][AEpoch 8:  93%|#########3| 3467/3714 [5:34:10<23:48,  5.78s/it, loss=2.16, v_num=0, train/loss_step=1.830, train/acc_step=0.625, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]
Validation DataLoader 0:  80%|########  | 330/412 [00:59<00:14,  5.58it/s][AEpoch 8:  98%|#########7| 3632/3714 [5:34:37<07:33,  5.53s/it, loss=2.16, v_num=0, train/loss_step=1.830, train/acc_step=0.625, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]
Validation DataLoader 0: 100%|##########| 412/412 [01:12<00:00,  5.68it/s][AEpoch 8: 100%|##########| 3714/3714 [5:34:50<00:00,  5.41s/it, loss=2.16, v_num=0, train/loss_step=1.830, train/acc_step=0.625, val/loss_step=1.970, val/acc_step=0.500, val/haversine_distance_step=1.730, val/loss_epoch=2.130, val/acc_epoch=0.379, val/haversine_distance_epoch=1.740, train/loss_epoch=2.130, train/acc_epoch=0.381]Epoch 8: 100%|##########| 3714/3714 [5:34:50<00:00,  5.41s/it, loss=2.16, v_num=0, train/loss_step=1.830, train/acc_step=0.625, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.130, train/acc_epoch=0.381]
                                                                          [AMetric val/loss improved by 0.025 >= min_delta = 0.0. New best score: 2.101
Epoch 8: 100%|##########| 3714/3714 [5:35:00<00:00,  5.41s/it, loss=2.16, v_num=0, train/loss_step=1.830, train/acc_step=0.625, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9: 100%|##########| 3714/3714 [5:35:02<00:00,  5.41s/it, loss=2.16, v_num=0, train/loss_step=1.830, train/acc_step=0.625, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:   4%|4         | 165/3714 [5:37:14<120:53:44, 122.63s/it, loss=2.16, v_num=0, train/loss_step=1.830, train/acc_step=0.625, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:   4%|4         | 165/3714 [5:37:14<120:53:44, 122.63s/it, loss=1.94, v_num=0, train/loss_step=1.350, train/acc_step=0.750, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:   9%|8         | 330/3714 [5:39:16<57:59:10, 61.69s/it, loss=1.94, v_num=0, train/loss_step=1.350, train/acc_step=0.750, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]  Epoch 9:   9%|8         | 330/3714 [5:39:16<57:59:10, 61.69s/it, loss=1.86, v_num=0, train/loss_step=1.870, train/acc_step=0.500, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  13%|#3        | 495/3714 [5:41:19<36:59:41, 41.37s/it, loss=1.86, v_num=0, train/loss_step=1.870, train/acc_step=0.500, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  13%|#3        | 495/3714 [5:41:19<36:59:41, 41.37s/it, loss=1.81, v_num=0, train/loss_step=1.820, train/acc_step=0.500, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  18%|#7        | 660/3714 [5:43:23<26:28:58, 31.22s/it, loss=1.81, v_num=0, train/loss_step=1.820, train/acc_step=0.500, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  18%|#7        | 660/3714 [5:43:23<26:28:58, 31.22s/it, loss=1.92, v_num=0, train/loss_step=2.040, train/acc_step=0.375, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  22%|##2       | 825/3714 [5:45:26<20:09:39, 25.12s/it, loss=1.92, v_num=0, train/loss_step=2.040, train/acc_step=0.375, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  22%|##2       | 825/3714 [5:45:26<20:09:39, 25.12s/it, loss=2.04, v_num=0, train/loss_step=3.040, train/acc_step=0.375, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  27%|##6       | 990/3714 [5:47:30<15:56:09, 21.06s/it, loss=2.04, v_num=0, train/loss_step=3.040, train/acc_step=0.375, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  27%|##6       | 990/3714 [5:47:30<15:56:09, 21.06s/it, loss=1.98, v_num=0, train/loss_step=2.200, train/acc_step=0.375, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  31%|###1      | 1155/3714 [5:49:35<12:54:31, 18.16s/it, loss=1.98, v_num=0, train/loss_step=2.200, train/acc_step=0.375, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  31%|###1      | 1155/3714 [5:49:35<12:54:31, 18.16s/it, loss=1.96, v_num=0, train/loss_step=2.200, train/acc_step=0.500, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  36%|###5      | 1320/3714 [5:51:39<10:37:46, 15.98s/it, loss=1.96, v_num=0, train/loss_step=2.200, train/acc_step=0.500, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  36%|###5      | 1320/3714 [5:51:39<10:37:46, 15.98s/it, loss=2.08, v_num=0, train/loss_step=2.180, train/acc_step=0.250, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  40%|###9      | 1485/3714 [5:53:43<8:50:57, 14.29s/it, loss=2.08, v_num=0, train/loss_step=2.180, train/acc_step=0.250, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409] Epoch 9:  40%|###9      | 1485/3714 [5:53:43<8:50:57, 14.29s/it, loss=1.99, v_num=0, train/loss_step=2.000, train/acc_step=0.250, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  44%|####4     | 1650/3714 [5:55:50<7:25:07, 12.94s/it, loss=1.99, v_num=0, train/loss_step=2.000, train/acc_step=0.250, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  44%|####4     | 1650/3714 [5:55:50<7:25:07, 12.94s/it, loss=2.02, v_num=0, train/loss_step=2.190, train/acc_step=0.375, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  49%|####8     | 1815/3714 [5:57:55<6:14:29, 11.83s/it, loss=2.02, v_num=0, train/loss_step=2.190, train/acc_step=0.375, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  49%|####8     | 1815/3714 [5:57:55<6:14:29, 11.83s/it, loss=1.95, v_num=0, train/loss_step=3.090, train/acc_step=0.000, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  53%|#####3    | 1980/3714 [5:59:59<5:15:16, 10.91s/it, loss=1.95, v_num=0, train/loss_step=3.090, train/acc_step=0.000, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  53%|#####3    | 1980/3714 [5:59:59<5:15:16, 10.91s/it, loss=2.12, v_num=0, train/loss_step=2.570, train/acc_step=0.375, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  58%|#####7    | 2145/3714 [6:02:05<4:24:51, 10.13s/it, loss=2.12, v_num=0, train/loss_step=2.570, train/acc_step=0.375, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  58%|#####7    | 2145/3714 [6:02:05<4:24:51, 10.13s/it, loss=2, v_num=0, train/loss_step=1.490, train/acc_step=0.500, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]   Epoch 9:  62%|######2   | 2310/3714 [6:04:09<3:41:20,  9.46s/it, loss=2, v_num=0, train/loss_step=1.490, train/acc_step=0.500, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  62%|######2   | 2310/3714 [6:04:09<3:41:20,  9.46s/it, loss=1.94, v_num=0, train/loss_step=1.750, train/acc_step=0.500, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  67%|######6   | 2475/3714 [6:06:13<3:03:20,  8.88s/it, loss=1.94, v_num=0, train/loss_step=1.750, train/acc_step=0.500, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  67%|######6   | 2475/3714 [6:06:13<3:03:20,  8.88s/it, loss=1.98, v_num=0, train/loss_step=2.140, train/acc_step=0.250, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  71%|#######1  | 2640/3714 [6:08:17<2:29:49,  8.37s/it, loss=1.98, v_num=0, train/loss_step=2.140, train/acc_step=0.250, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  71%|#######1  | 2640/3714 [6:08:17<2:29:49,  8.37s/it, loss=1.88, v_num=0, train/loss_step=1.950, train/acc_step=0.375, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  76%|#######5  | 2805/3714 [6:10:22<2:00:01,  7.92s/it, loss=1.88, v_num=0, train/loss_step=1.950, train/acc_step=0.375, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  76%|#######5  | 2805/3714 [6:10:22<2:00:01,  7.92s/it, loss=1.99, v_num=0, train/loss_step=2.200, train/acc_step=0.625, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  80%|#######9  | 2970/3714 [6:12:29<1:33:18,  7.53s/it, loss=1.99, v_num=0, train/loss_step=2.200, train/acc_step=0.625, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  80%|#######9  | 2970/3714 [6:12:29<1:33:18,  7.53s/it, loss=1.96, v_num=0, train/loss_step=1.410, train/acc_step=0.625, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  84%|########4 | 3135/3714 [6:14:33<1:09:10,  7.17s/it, loss=1.96, v_num=0, train/loss_step=1.410, train/acc_step=0.625, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  84%|########4 | 3135/3714 [6:14:33<1:09:10,  7.17s/it, loss=1.81, v_num=0, train/loss_step=1.690, train/acc_step=0.625, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  89%|########8 | 3300/3714 [6:16:36<47:14,  6.85s/it, loss=1.81, v_num=0, train/loss_step=1.690, train/acc_step=0.625, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]  Epoch 9:  89%|########8 | 3300/3714 [6:16:36<47:14,  6.85s/it, loss=1.84, v_num=0, train/loss_step=1.930, train/acc_step=0.375, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  89%|########8 | 3302/3714 [6:16:38<46:59,  6.84s/it, loss=1.84, v_num=0, train/loss_step=1.930, train/acc_step=0.375, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9:  89%|########8 | 3302/3714 [6:16:38<46:59,  6.84s/it, loss=1.88, v_num=0, train/loss_step=2.220, train/acc_step=0.250, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:05<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:32<00:48,  5.06it/s][AEpoch 9:  93%|#########3| 3467/3714 [6:17:12<26:52,  6.53s/it, loss=1.88, v_num=0, train/loss_step=2.220, train/acc_step=0.250, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]
Validation DataLoader 0:  80%|########  | 330/412 [01:00<00:15,  5.46it/s][AEpoch 9:  98%|#########7| 3632/3714 [6:17:40<08:31,  6.24s/it, loss=1.88, v_num=0, train/loss_step=2.220, train/acc_step=0.250, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]
Validation DataLoader 0: 100%|##########| 412/412 [01:13<00:00,  5.60it/s][AEpoch 9: 100%|##########| 3714/3714 [6:17:53<00:00,  6.10s/it, loss=1.88, v_num=0, train/loss_step=2.220, train/acc_step=0.250, val/loss_step=1.770, val/acc_step=0.500, val/haversine_distance_step=1.910, val/loss_epoch=2.100, val/acc_epoch=0.385, val/haversine_distance_epoch=1.680, train/loss_epoch=2.050, train/acc_epoch=0.409]Epoch 9: 100%|##########| 3714/3714 [6:17:53<00:00,  6.10s/it, loss=1.88, v_num=0, train/loss_step=2.220, train/acc_step=0.250, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=2.050, train/acc_epoch=0.409]
                                                                          [AMetric val/loss improved by 0.040 >= min_delta = 0.0. New best score: 2.062
Epoch 9: 100%|##########| 3714/3714 [6:18:04<00:00,  6.11s/it, loss=1.88, v_num=0, train/loss_step=2.220, train/acc_step=0.250, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10: 100%|##########| 3714/3714 [6:18:04<00:00,  6.11s/it, loss=1.88, v_num=0, train/loss_step=2.220, train/acc_step=0.250, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:   4%|4         | 165/3714 [6:20:14<136:18:33, 138.27s/it, loss=1.88, v_num=0, train/loss_step=2.220, train/acc_step=0.250, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:   4%|4         | 165/3714 [6:20:14<136:18:33, 138.27s/it, loss=1.94, v_num=0, train/loss_step=1.240, train/acc_step=0.625, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:   9%|8         | 330/3714 [6:22:18<65:20:25, 69.51s/it, loss=1.94, v_num=0, train/loss_step=1.240, train/acc_step=0.625, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]  Epoch 10:   9%|8         | 330/3714 [6:22:18<65:20:25, 69.51s/it, loss=1.85, v_num=0, train/loss_step=1.780, train/acc_step=0.250, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  13%|#3        | 495/3714 [6:24:20<41:39:25, 46.59s/it, loss=1.85, v_num=0, train/loss_step=1.780, train/acc_step=0.250, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  13%|#3        | 495/3714 [6:24:20<41:39:25, 46.59s/it, loss=2.06, v_num=0, train/loss_step=2.310, train/acc_step=0.250, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  18%|#7        | 660/3714 [6:26:22<29:47:52, 35.13s/it, loss=2.06, v_num=0, train/loss_step=2.310, train/acc_step=0.250, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  18%|#7        | 660/3714 [6:26:22<29:47:52, 35.13s/it, loss=2, v_num=0, train/loss_step=1.540, train/acc_step=0.500, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]   Epoch 10:  22%|##2       | 825/3714 [6:28:25<22:40:12, 28.25s/it, loss=2, v_num=0, train/loss_step=1.540, train/acc_step=0.500, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  22%|##2       | 825/3714 [6:28:25<22:40:12, 28.25s/it, loss=2, v_num=0, train/loss_step=2.110, train/acc_step=0.250, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  27%|##6       | 990/3714 [6:30:29<17:54:26, 23.67s/it, loss=2, v_num=0, train/loss_step=2.110, train/acc_step=0.250, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  27%|##6       | 990/3714 [6:30:29<17:54:26, 23.67s/it, loss=1.9, v_num=0, train/loss_step=2.000, train/acc_step=0.375, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  31%|###1      | 1155/3714 [6:32:33<14:29:45, 20.39s/it, loss=1.9, v_num=0, train/loss_step=2.000, train/acc_step=0.375, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  31%|###1      | 1155/3714 [6:32:33<14:29:45, 20.39s/it, loss=2.04, v_num=0, train/loss_step=2.890, train/acc_step=0.375, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  36%|###5      | 1320/3714 [6:34:37<11:55:42, 17.94s/it, loss=2.04, v_num=0, train/loss_step=2.890, train/acc_step=0.375, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  36%|###5      | 1320/3714 [6:34:37<11:55:42, 17.94s/it, loss=2.04, v_num=0, train/loss_step=2.340, train/acc_step=0.250, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  40%|###9      | 1485/3714 [6:36:40<9:55:25, 16.03s/it, loss=2.04, v_num=0, train/loss_step=2.340, train/acc_step=0.250, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432] Epoch 10:  40%|###9      | 1485/3714 [6:36:40<9:55:25, 16.03s/it, loss=1.94, v_num=0, train/loss_step=1.980, train/acc_step=0.500, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  44%|####4     | 1650/3714 [6:38:45<8:18:48, 14.50s/it, loss=1.94, v_num=0, train/loss_step=1.980, train/acc_step=0.500, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  44%|####4     | 1650/3714 [6:38:45<8:18:48, 14.50s/it, loss=1.93, v_num=0, train/loss_step=1.610, train/acc_step=0.750, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  49%|####8     | 1815/3714 [6:40:51<6:59:24, 13.25s/it, loss=1.93, v_num=0, train/loss_step=1.610, train/acc_step=0.750, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  49%|####8     | 1815/3714 [6:40:51<6:59:24, 13.25s/it, loss=1.83, v_num=0, train/loss_step=1.430, train/acc_step=0.750, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  53%|#####3    | 1980/3714 [6:42:55<5:52:52, 12.21s/it, loss=1.83, v_num=0, train/loss_step=1.430, train/acc_step=0.750, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  53%|#####3    | 1980/3714 [6:42:55<5:52:52, 12.21s/it, loss=2.05, v_num=0, train/loss_step=1.670, train/acc_step=0.625, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  58%|#####7    | 2145/3714 [6:45:00<4:56:15, 11.33s/it, loss=2.05, v_num=0, train/loss_step=1.670, train/acc_step=0.625, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  58%|#####7    | 2145/3714 [6:45:00<4:56:15, 11.33s/it, loss=1.93, v_num=0, train/loss_step=1.490, train/acc_step=0.500, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  62%|######2   | 2310/3714 [6:47:02<4:07:23, 10.57s/it, loss=1.93, v_num=0, train/loss_step=1.490, train/acc_step=0.500, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  62%|######2   | 2310/3714 [6:47:02<4:07:23, 10.57s/it, loss=1.77, v_num=0, train/loss_step=1.430, train/acc_step=0.625, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  67%|######6   | 2475/3714 [6:49:05<3:24:47,  9.92s/it, loss=1.77, v_num=0, train/loss_step=1.430, train/acc_step=0.625, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  67%|######6   | 2475/3714 [6:49:05<3:24:47,  9.92s/it, loss=1.92, v_num=0, train/loss_step=2.220, train/acc_step=0.250, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  71%|#######1  | 2640/3714 [6:51:11<2:47:16,  9.35s/it, loss=1.92, v_num=0, train/loss_step=2.220, train/acc_step=0.250, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  71%|#######1  | 2640/3714 [6:51:11<2:47:16,  9.35s/it, loss=1.97, v_num=0, train/loss_step=2.570, train/acc_step=0.125, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  76%|#######5  | 2805/3714 [6:53:15<2:13:55,  8.84s/it, loss=1.97, v_num=0, train/loss_step=2.570, train/acc_step=0.125, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  76%|#######5  | 2805/3714 [6:53:15<2:13:55,  8.84s/it, loss=1.95, v_num=0, train/loss_step=1.370, train/acc_step=0.625, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  80%|#######9  | 2970/3714 [6:55:18<1:44:02,  8.39s/it, loss=1.95, v_num=0, train/loss_step=1.370, train/acc_step=0.625, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  80%|#######9  | 2970/3714 [6:55:18<1:44:02,  8.39s/it, loss=2, v_num=0, train/loss_step=1.730, train/acc_step=0.375, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]   Epoch 10:  84%|########4 | 3135/3714 [6:57:23<1:17:05,  7.99s/it, loss=2, v_num=0, train/loss_step=1.730, train/acc_step=0.375, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  84%|########4 | 3135/3714 [6:57:23<1:17:05,  7.99s/it, loss=1.97, v_num=0, train/loss_step=1.760, train/acc_step=0.500, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  89%|########8 | 3300/3714 [6:59:28<52:37,  7.63s/it, loss=1.97, v_num=0, train/loss_step=1.760, train/acc_step=0.500, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]  Epoch 10:  89%|########8 | 3300/3714 [6:59:28<52:37,  7.63s/it, loss=1.95, v_num=0, train/loss_step=1.450, train/acc_step=0.625, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  89%|########8 | 3302/3714 [6:59:30<52:20,  7.62s/it, loss=1.95, v_num=0, train/loss_step=1.450, train/acc_step=0.625, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10:  89%|########8 | 3302/3714 [6:59:30<52:20,  7.62s/it, loss=1.97, v_num=0, train/loss_step=2.020, train/acc_step=0.750, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:05<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:32<00:48,  5.07it/s][AEpoch 10:  93%|#########3| 3467/3714 [7:00:04<29:55,  7.27s/it, loss=1.97, v_num=0, train/loss_step=2.020, train/acc_step=0.750, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]
Validation DataLoader 0:  80%|########  | 330/412 [01:06<00:16,  4.99it/s][AEpoch 10:  98%|#########7| 3632/3714 [7:00:37<09:29,  6.95s/it, loss=1.97, v_num=0, train/loss_step=2.020, train/acc_step=0.750, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]
Validation DataLoader 0: 100%|##########| 412/412 [01:19<00:00,  5.15it/s][AEpoch 10: 100%|##########| 3714/3714 [7:00:51<00:00,  6.80s/it, loss=1.97, v_num=0, train/loss_step=2.020, train/acc_step=0.750, val/loss_step=2.240, val/acc_step=0.250, val/haversine_distance_step=1.510, val/loss_epoch=2.060, val/acc_epoch=0.400, val/haversine_distance_epoch=1.750, train/loss_epoch=1.970, train/acc_epoch=0.432]Epoch 10: 100%|##########| 3714/3714 [7:00:51<00:00,  6.80s/it, loss=1.97, v_num=0, train/loss_step=2.020, train/acc_step=0.750, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.970, train/acc_epoch=0.432]
                                                                          [AMetric val/loss improved by 0.001 >= min_delta = 0.0. New best score: 2.060
Epoch 10: 100%|##########| 3714/3714 [7:00:57<00:00,  6.80s/it, loss=1.97, v_num=0, train/loss_step=2.020, train/acc_step=0.750, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11: 100%|##########| 3714/3714 [7:00:59<00:00,  6.80s/it, loss=1.97, v_num=0, train/loss_step=2.020, train/acc_step=0.750, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:   4%|4         | 165/3714 [7:03:12<151:42:43, 153.89s/it, loss=1.97, v_num=0, train/loss_step=2.020, train/acc_step=0.750, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:   4%|4         | 165/3714 [7:03:12<151:42:43, 153.89s/it, loss=1.87, v_num=0, train/loss_step=1.760, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:   9%|8         | 330/3714 [7:05:15<72:40:53, 77.32s/it, loss=1.87, v_num=0, train/loss_step=1.760, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]  Epoch 11:   9%|8         | 330/3714 [7:05:15<72:40:53, 77.32s/it, loss=1.71, v_num=0, train/loss_step=2.420, train/acc_step=0.125, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  13%|#3        | 495/3714 [7:07:17<46:18:42, 51.79s/it, loss=1.71, v_num=0, train/loss_step=2.420, train/acc_step=0.125, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  13%|#3        | 495/3714 [7:07:17<46:18:42, 51.79s/it, loss=1.83, v_num=0, train/loss_step=2.010, train/acc_step=0.625, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  18%|#7        | 660/3714 [7:09:21<33:06:45, 39.03s/it, loss=1.83, v_num=0, train/loss_step=2.010, train/acc_step=0.625, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  18%|#7        | 660/3714 [7:09:21<33:06:45, 39.03s/it, loss=1.87, v_num=0, train/loss_step=2.010, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  22%|##2       | 825/3714 [7:11:26<25:10:49, 31.38s/it, loss=1.87, v_num=0, train/loss_step=2.010, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  22%|##2       | 825/3714 [7:11:26<25:10:49, 31.38s/it, loss=1.67, v_num=0, train/loss_step=1.530, train/acc_step=0.625, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  27%|##6       | 990/3714 [7:13:32<19:52:52, 26.27s/it, loss=1.67, v_num=0, train/loss_step=1.530, train/acc_step=0.625, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  27%|##6       | 990/3714 [7:13:32<19:52:52, 26.27s/it, loss=1.74, v_num=0, train/loss_step=1.540, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  31%|###1      | 1155/3714 [7:15:37<16:05:09, 22.63s/it, loss=1.74, v_num=0, train/loss_step=1.540, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  31%|###1      | 1155/3714 [7:15:37<16:05:09, 22.63s/it, loss=1.74, v_num=0, train/loss_step=1.190, train/acc_step=0.750, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  36%|###5      | 1320/3714 [7:17:42<13:13:50, 19.90s/it, loss=1.74, v_num=0, train/loss_step=1.190, train/acc_step=0.750, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  36%|###5      | 1320/3714 [7:17:42<13:13:50, 19.90s/it, loss=1.86, v_num=0, train/loss_step=1.570, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  40%|###9      | 1485/3714 [7:19:45<11:00:05, 17.77s/it, loss=1.86, v_num=0, train/loss_step=1.570, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  40%|###9      | 1485/3714 [7:19:45<11:00:05, 17.77s/it, loss=2.07, v_num=0, train/loss_step=1.410, train/acc_step=0.625, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  44%|####4     | 1650/3714 [7:21:50<9:12:41, 16.07s/it, loss=2.07, v_num=0, train/loss_step=1.410, train/acc_step=0.625, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447] Epoch 11:  44%|####4     | 1650/3714 [7:21:50<9:12:41, 16.07s/it, loss=1.79, v_num=0, train/loss_step=1.790, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  49%|####8     | 1815/3714 [7:23:56<7:44:29, 14.68s/it, loss=1.79, v_num=0, train/loss_step=1.790, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  49%|####8     | 1815/3714 [7:23:56<7:44:29, 14.68s/it, loss=1.79, v_num=0, train/loss_step=1.660, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  53%|#####3    | 1980/3714 [7:26:00<6:30:35, 13.52s/it, loss=1.79, v_num=0, train/loss_step=1.660, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  53%|#####3    | 1980/3714 [7:26:00<6:30:35, 13.52s/it, loss=1.79, v_num=0, train/loss_step=1.720, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  58%|#####7    | 2145/3714 [7:28:05<5:27:45, 12.53s/it, loss=1.79, v_num=0, train/loss_step=1.720, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  58%|#####7    | 2145/3714 [7:28:05<5:27:45, 12.53s/it, loss=1.87, v_num=0, train/loss_step=1.820, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  62%|######2   | 2310/3714 [7:30:10<4:33:36, 11.69s/it, loss=1.87, v_num=0, train/loss_step=1.820, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  62%|######2   | 2310/3714 [7:30:10<4:33:36, 11.69s/it, loss=1.9, v_num=0, train/loss_step=2.420, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447] Epoch 11:  67%|######6   | 2475/3714 [7:32:16<3:46:24, 10.96s/it, loss=1.9, v_num=0, train/loss_step=2.420, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  67%|######6   | 2475/3714 [7:32:16<3:46:24, 10.96s/it, loss=1.95, v_num=0, train/loss_step=1.760, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  71%|#######1  | 2640/3714 [7:34:20<3:04:50, 10.33s/it, loss=1.95, v_num=0, train/loss_step=1.760, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  71%|#######1  | 2640/3714 [7:34:20<3:04:50, 10.33s/it, loss=1.76, v_num=0, train/loss_step=2.170, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  76%|#######5  | 2805/3714 [7:36:24<2:27:54,  9.76s/it, loss=1.76, v_num=0, train/loss_step=2.170, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  76%|#######5  | 2805/3714 [7:36:24<2:27:54,  9.76s/it, loss=1.87, v_num=0, train/loss_step=1.730, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  80%|#######9  | 2970/3714 [7:38:29<1:54:51,  9.26s/it, loss=1.87, v_num=0, train/loss_step=1.730, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  80%|#######9  | 2970/3714 [7:38:29<1:54:51,  9.26s/it, loss=1.73, v_num=0, train/loss_step=1.460, train/acc_step=0.750, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  84%|########4 | 3135/3714 [7:40:31<1:25:03,  8.81s/it, loss=1.73, v_num=0, train/loss_step=1.460, train/acc_step=0.750, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  84%|########4 | 3135/3714 [7:40:31<1:25:03,  8.81s/it, loss=1.84, v_num=0, train/loss_step=1.510, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  89%|########8 | 3300/3714 [7:42:36<58:02,  8.41s/it, loss=1.84, v_num=0, train/loss_step=1.510, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]  Epoch 11:  89%|########8 | 3300/3714 [7:42:36<58:02,  8.41s/it, loss=1.74, v_num=0, train/loss_step=2.120, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  89%|########8 | 3302/3714 [7:42:38<57:43,  8.41s/it, loss=1.74, v_num=0, train/loss_step=2.120, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11:  89%|########8 | 3302/3714 [7:42:38<57:43,  8.41s/it, loss=1.73, v_num=0, train/loss_step=1.160, train/acc_step=0.750, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:05<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:33<00:49,  4.99it/s][AEpoch 11:  93%|#########3| 3467/3714 [7:43:13<33:00,  8.02s/it, loss=1.73, v_num=0, train/loss_step=1.160, train/acc_step=0.750, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]
Validation DataLoader 0:  80%|########  | 330/412 [01:00<00:15,  5.45it/s][AEpoch 11:  98%|#########7| 3632/3714 [7:43:40<10:28,  7.66s/it, loss=1.73, v_num=0, train/loss_step=1.160, train/acc_step=0.750, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]
Validation DataLoader 0: 100%|##########| 412/412 [01:13<00:00,  5.58it/s][AEpoch 11: 100%|##########| 3714/3714 [7:43:53<00:00,  7.49s/it, loss=1.73, v_num=0, train/loss_step=1.160, train/acc_step=0.750, val/loss_step=2.060, val/acc_step=0.250, val/haversine_distance_step=1.820, val/loss_epoch=2.060, val/acc_epoch=0.410, val/haversine_distance_epoch=1.740, train/loss_epoch=1.910, train/acc_epoch=0.447]Epoch 11: 100%|##########| 3714/3714 [7:43:53<00:00,  7.49s/it, loss=1.73, v_num=0, train/loss_step=1.160, train/acc_step=0.750, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.910, train/acc_epoch=0.447]
                                                                          [AMetric val/loss improved by 0.107 >= min_delta = 0.0. New best score: 1.953
Epoch 11: 100%|##########| 3714/3714 [7:44:04<00:00,  7.50s/it, loss=1.73, v_num=0, train/loss_step=1.160, train/acc_step=0.750, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12: 100%|##########| 3714/3714 [7:44:04<00:00,  7.50s/it, loss=1.73, v_num=0, train/loss_step=1.160, train/acc_step=0.750, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:   4%|4         | 165/3714 [7:46:17<167:09:37, 169.56s/it, loss=1.73, v_num=0, train/loss_step=1.160, train/acc_step=0.750, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:   4%|4         | 165/3714 [7:46:17<167:09:37, 169.56s/it, loss=1.7, v_num=0, train/loss_step=0.908, train/acc_step=0.875, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472] Epoch 12:   9%|8         | 330/3714 [7:48:19<80:02:24, 85.15s/it, loss=1.7, v_num=0, train/loss_step=0.908, train/acc_step=0.875, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]  Epoch 12:   9%|8         | 330/3714 [7:48:19<80:02:24, 85.15s/it, loss=1.83, v_num=0, train/loss_step=1.340, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  13%|#3        | 495/3714 [7:50:22<50:58:48, 57.01s/it, loss=1.83, v_num=0, train/loss_step=1.340, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  13%|#3        | 495/3714 [7:50:22<50:58:48, 57.01s/it, loss=1.81, v_num=0, train/loss_step=1.480, train/acc_step=0.625, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  18%|#7        | 660/3714 [7:52:25<36:26:03, 42.95s/it, loss=1.81, v_num=0, train/loss_step=1.480, train/acc_step=0.625, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  18%|#7        | 660/3714 [7:52:25<36:26:03, 42.95s/it, loss=1.82, v_num=0, train/loss_step=1.800, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  22%|##2       | 825/3714 [7:54:30<27:41:38, 34.51s/it, loss=1.82, v_num=0, train/loss_step=1.800, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  22%|##2       | 825/3714 [7:54:30<27:41:38, 34.51s/it, loss=1.85, v_num=0, train/loss_step=1.950, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  27%|##6       | 990/3714 [7:56:34<21:51:16, 28.88s/it, loss=1.85, v_num=0, train/loss_step=1.950, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  27%|##6       | 990/3714 [7:56:34<21:51:16, 28.88s/it, loss=1.68, v_num=0, train/loss_step=2.450, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  31%|###1      | 1155/3714 [7:58:37<17:40:27, 24.86s/it, loss=1.68, v_num=0, train/loss_step=2.450, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  31%|###1      | 1155/3714 [7:58:37<17:40:27, 24.86s/it, loss=1.66, v_num=0, train/loss_step=1.720, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  36%|###5      | 1320/3714 [8:00:42<14:31:49, 21.85s/it, loss=1.66, v_num=0, train/loss_step=1.720, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  36%|###5      | 1320/3714 [8:00:42<14:31:49, 21.85s/it, loss=1.85, v_num=0, train/loss_step=1.570, train/acc_step=0.625, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  40%|###9      | 1485/3714 [8:02:45<12:04:37, 19.51s/it, loss=1.85, v_num=0, train/loss_step=1.570, train/acc_step=0.625, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  40%|###9      | 1485/3714 [8:02:45<12:04:37, 19.51s/it, loss=1.79, v_num=0, train/loss_step=1.850, train/acc_step=0.375, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  44%|####4     | 1650/3714 [8:04:51<10:06:30, 17.63s/it, loss=1.79, v_num=0, train/loss_step=1.850, train/acc_step=0.375, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  44%|####4     | 1650/3714 [8:04:51<10:06:30, 17.63s/it, loss=1.67, v_num=0, train/loss_step=1.730, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  49%|####8     | 1815/3714 [8:06:55<8:29:27, 16.10s/it, loss=1.67, v_num=0, train/loss_step=1.730, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472] Epoch 12:  49%|####8     | 1815/3714 [8:06:55<8:29:27, 16.10s/it, loss=1.7, v_num=0, train/loss_step=1.380, train/acc_step=0.750, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472] Epoch 12:  53%|#####3    | 1980/3714 [8:09:01<7:08:15, 14.82s/it, loss=1.7, v_num=0, train/loss_step=1.380, train/acc_step=0.750, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  53%|#####3    | 1980/3714 [8:09:01<7:08:15, 14.82s/it, loss=1.62, v_num=0, train/loss_step=1.100, train/acc_step=0.875, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  58%|#####7    | 2145/3714 [8:11:05<5:59:13, 13.74s/it, loss=1.62, v_num=0, train/loss_step=1.100, train/acc_step=0.875, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  58%|#####7    | 2145/3714 [8:11:05<5:59:13, 13.74s/it, loss=1.88, v_num=0, train/loss_step=2.150, train/acc_step=0.375, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  62%|######2   | 2310/3714 [8:13:10<4:59:44, 12.81s/it, loss=1.88, v_num=0, train/loss_step=2.150, train/acc_step=0.375, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  62%|######2   | 2310/3714 [8:13:10<4:59:44, 12.81s/it, loss=1.67, v_num=0, train/loss_step=2.460, train/acc_step=0.250, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  67%|######6   | 2475/3714 [8:15:16<4:07:56, 12.01s/it, loss=1.67, v_num=0, train/loss_step=2.460, train/acc_step=0.250, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  67%|######6   | 2475/3714 [8:15:16<4:07:56, 12.01s/it, loss=1.81, v_num=0, train/loss_step=2.390, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  71%|#######1  | 2640/3714 [8:17:22<3:22:20, 11.30s/it, loss=1.81, v_num=0, train/loss_step=2.390, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  71%|#######1  | 2640/3714 [8:17:22<3:22:20, 11.30s/it, loss=1.81, v_num=0, train/loss_step=1.770, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  76%|#######5  | 2805/3714 [8:19:26<2:41:51, 10.68s/it, loss=1.81, v_num=0, train/loss_step=1.770, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  76%|#######5  | 2805/3714 [8:19:26<2:41:51, 10.68s/it, loss=1.83, v_num=0, train/loss_step=1.550, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  80%|#######9  | 2970/3714 [8:21:30<2:05:37, 10.13s/it, loss=1.83, v_num=0, train/loss_step=1.550, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  80%|#######9  | 2970/3714 [8:21:30<2:05:37, 10.13s/it, loss=1.72, v_num=0, train/loss_step=1.320, train/acc_step=0.625, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  84%|########4 | 3135/3714 [8:23:35<1:33:00,  9.64s/it, loss=1.72, v_num=0, train/loss_step=1.320, train/acc_step=0.625, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  84%|########4 | 3135/3714 [8:23:35<1:33:00,  9.64s/it, loss=1.66, v_num=0, train/loss_step=1.720, train/acc_step=0.375, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  89%|########8 | 3300/3714 [8:25:39<1:03:26,  9.19s/it, loss=1.66, v_num=0, train/loss_step=1.720, train/acc_step=0.375, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  89%|########8 | 3300/3714 [8:25:39<1:03:26,  9.19s/it, loss=1.59, v_num=0, train/loss_step=1.270, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  89%|########8 | 3302/3714 [8:25:41<1:03:05,  9.19s/it, loss=1.59, v_num=0, train/loss_step=1.270, train/acc_step=0.500, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12:  89%|########8 | 3302/3714 [8:25:41<1:03:05,  9.19s/it, loss=1.64, v_num=0, train/loss_step=2.360, train/acc_step=0.375, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:05<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:33<00:50,  4.88it/s][AEpoch 12:  93%|#########3| 3467/3714 [8:26:16<36:04,  8.76s/it, loss=1.64, v_num=0, train/loss_step=2.360, train/acc_step=0.375, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]  
Validation DataLoader 0:  80%|########  | 330/412 [01:01<00:15,  5.37it/s][AEpoch 12:  98%|#########7| 3632/3714 [8:26:44<11:26,  8.37s/it, loss=1.64, v_num=0, train/loss_step=2.360, train/acc_step=0.375, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]
Validation DataLoader 0: 100%|##########| 412/412 [01:14<00:00,  5.51it/s][AEpoch 12: 100%|##########| 3714/3714 [8:26:57<00:00,  8.19s/it, loss=1.64, v_num=0, train/loss_step=2.360, train/acc_step=0.375, val/loss_step=1.330, val/acc_step=0.500, val/haversine_distance_step=1.450, val/loss_epoch=1.950, val/acc_epoch=0.417, val/haversine_distance_epoch=1.780, train/loss_epoch=1.820, train/acc_epoch=0.472]Epoch 12: 100%|##########| 3714/3714 [8:26:57<00:00,  8.19s/it, loss=1.64, v_num=0, train/loss_step=2.360, train/acc_step=0.375, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.820, train/acc_epoch=0.472]
                                                                          [AMetric val/loss improved by 0.045 >= min_delta = 0.0. New best score: 1.908
Epoch 12: 100%|##########| 3714/3714 [8:27:08<00:00,  8.19s/it, loss=1.64, v_num=0, train/loss_step=2.360, train/acc_step=0.375, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13: 100%|##########| 3714/3714 [8:27:08<00:00,  8.19s/it, loss=1.64, v_num=0, train/loss_step=2.360, train/acc_step=0.375, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:   4%|4         | 165/3714 [8:29:21<182:35:52, 185.22s/it, loss=1.64, v_num=0, train/loss_step=2.360, train/acc_step=0.375, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:   4%|4         | 165/3714 [8:29:21<182:35:52, 185.22s/it, loss=1.73, v_num=0, train/loss_step=1.440, train/acc_step=0.500, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:   9%|8         | 330/3714 [8:31:23<87:24:04, 92.98s/it, loss=1.73, v_num=0, train/loss_step=1.440, train/acc_step=0.500, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]  Epoch 13:   9%|8         | 330/3714 [8:31:23<87:24:04, 92.98s/it, loss=1.78, v_num=0, train/loss_step=1.280, train/acc_step=0.625, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  13%|#3        | 495/3714 [8:33:27<55:39:01, 62.24s/it, loss=1.78, v_num=0, train/loss_step=1.280, train/acc_step=0.625, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  13%|#3        | 495/3714 [8:33:27<55:39:01, 62.24s/it, loss=1.71, v_num=0, train/loss_step=1.220, train/acc_step=0.750, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  18%|#7        | 660/3714 [8:35:30<39:45:24, 46.86s/it, loss=1.71, v_num=0, train/loss_step=1.220, train/acc_step=0.750, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  18%|#7        | 660/3714 [8:35:30<39:45:24, 46.86s/it, loss=1.75, v_num=0, train/loss_step=1.450, train/acc_step=0.500, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  22%|##2       | 825/3714 [8:37:33<30:12:24, 37.64s/it, loss=1.75, v_num=0, train/loss_step=1.450, train/acc_step=0.500, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  22%|##2       | 825/3714 [8:37:33<30:12:24, 37.64s/it, loss=1.67, v_num=0, train/loss_step=2.600, train/acc_step=0.250, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  27%|##6       | 990/3714 [8:39:35<23:49:40, 31.49s/it, loss=1.67, v_num=0, train/loss_step=2.600, train/acc_step=0.250, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  27%|##6       | 990/3714 [8:39:35<23:49:40, 31.49s/it, loss=1.6, v_num=0, train/loss_step=1.690, train/acc_step=0.500, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486] Epoch 13:  31%|###1      | 1155/3714 [8:41:37<19:15:42, 27.10s/it, loss=1.6, v_num=0, train/loss_step=1.690, train/acc_step=0.500, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  31%|###1      | 1155/3714 [8:41:37<19:15:42, 27.10s/it, loss=1.63, v_num=0, train/loss_step=2.110, train/acc_step=0.250, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  36%|###5      | 1320/3714 [8:43:41<15:49:47, 23.80s/it, loss=1.63, v_num=0, train/loss_step=2.110, train/acc_step=0.250, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  36%|###5      | 1320/3714 [8:43:41<15:49:47, 23.80s/it, loss=1.77, v_num=0, train/loss_step=2.510, train/acc_step=0.375, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  40%|###9      | 1485/3714 [8:45:46<13:09:11, 21.24s/it, loss=1.77, v_num=0, train/loss_step=2.510, train/acc_step=0.375, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  40%|###9      | 1485/3714 [8:45:46<13:09:11, 21.24s/it, loss=1.79, v_num=0, train/loss_step=1.430, train/acc_step=0.750, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  44%|####4     | 1650/3714 [8:47:51<11:00:18, 19.20s/it, loss=1.79, v_num=0, train/loss_step=1.430, train/acc_step=0.750, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  44%|####4     | 1650/3714 [8:47:51<11:00:18, 19.20s/it, loss=1.67, v_num=0, train/loss_step=1.880, train/acc_step=0.500, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  49%|####8     | 1815/3714 [8:49:53<9:14:24, 17.52s/it, loss=1.67, v_num=0, train/loss_step=1.880, train/acc_step=0.500, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486] Epoch 13:  49%|####8     | 1815/3714 [8:49:53<9:14:24, 17.52s/it, loss=1.81, v_num=0, train/loss_step=1.270, train/acc_step=0.625, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  53%|#####3    | 1980/3714 [8:51:58<7:45:52, 16.12s/it, loss=1.81, v_num=0, train/loss_step=1.270, train/acc_step=0.625, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  53%|#####3    | 1980/3714 [8:51:58<7:45:52, 16.12s/it, loss=1.58, v_num=0, train/loss_step=1.660, train/acc_step=0.625, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  58%|#####7    | 2145/3714 [8:54:04<6:30:39, 14.94s/it, loss=1.58, v_num=0, train/loss_step=1.660, train/acc_step=0.625, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  58%|#####7    | 2145/3714 [8:54:04<6:30:39, 14.94s/it, loss=1.78, v_num=0, train/loss_step=1.800, train/acc_step=0.375, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  62%|######2   | 2310/3714 [8:56:11<5:25:53, 13.93s/it, loss=1.78, v_num=0, train/loss_step=1.800, train/acc_step=0.375, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  62%|######2   | 2310/3714 [8:56:11<5:25:53, 13.93s/it, loss=1.75, v_num=0, train/loss_step=2.250, train/acc_step=0.125, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  67%|######6   | 2475/3714 [8:58:17<4:29:28, 13.05s/it, loss=1.75, v_num=0, train/loss_step=2.250, train/acc_step=0.125, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  67%|######6   | 2475/3714 [8:58:17<4:29:28, 13.05s/it, loss=1.84, v_num=0, train/loss_step=1.620, train/acc_step=0.500, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  71%|#######1  | 2640/3714 [9:00:21<3:39:49, 12.28s/it, loss=1.84, v_num=0, train/loss_step=1.620, train/acc_step=0.500, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  71%|#######1  | 2640/3714 [9:00:21<3:39:49, 12.28s/it, loss=1.55, v_num=0, train/loss_step=1.930, train/acc_step=0.375, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  76%|#######5  | 2805/3714 [9:02:27<2:55:47, 11.60s/it, loss=1.55, v_num=0, train/loss_step=1.930, train/acc_step=0.375, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  76%|#######5  | 2805/3714 [9:02:27<2:55:47, 11.60s/it, loss=1.82, v_num=0, train/loss_step=1.780, train/acc_step=0.375, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  80%|#######9  | 2970/3714 [9:04:30<2:16:24, 11.00s/it, loss=1.82, v_num=0, train/loss_step=1.780, train/acc_step=0.375, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  80%|#######9  | 2970/3714 [9:04:30<2:16:24, 11.00s/it, loss=1.56, v_num=0, train/loss_step=1.720, train/acc_step=0.375, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  84%|########4 | 3135/3714 [9:06:37<1:40:57, 10.46s/it, loss=1.56, v_num=0, train/loss_step=1.720, train/acc_step=0.375, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  84%|########4 | 3135/3714 [9:06:37<1:40:57, 10.46s/it, loss=1.63, v_num=0, train/loss_step=1.670, train/acc_step=0.375, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  89%|########8 | 3300/3714 [9:08:42<1:08:50,  9.98s/it, loss=1.63, v_num=0, train/loss_step=1.670, train/acc_step=0.375, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  89%|########8 | 3300/3714 [9:08:42<1:08:50,  9.98s/it, loss=1.79, v_num=0, train/loss_step=1.190, train/acc_step=0.750, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  89%|########8 | 3302/3714 [9:08:44<1:08:28,  9.97s/it, loss=1.79, v_num=0, train/loss_step=1.190, train/acc_step=0.750, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13:  89%|########8 | 3302/3714 [9:08:44<1:08:28,  9.97s/it, loss=1.72, v_num=0, train/loss_step=1.740, train/acc_step=0.500, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:05<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:32<00:48,  5.07it/s][AEpoch 13:  93%|#########3| 3467/3714 [9:09:18<39:08,  9.51s/it, loss=1.72, v_num=0, train/loss_step=1.740, train/acc_step=0.500, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]  
Validation DataLoader 0:  80%|########  | 330/412 [00:59<00:14,  5.54it/s][AEpoch 13:  98%|#########7| 3632/3714 [9:09:45<12:24,  9.08s/it, loss=1.72, v_num=0, train/loss_step=1.740, train/acc_step=0.500, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]
Validation DataLoader 0: 100%|##########| 412/412 [01:12<00:00,  5.66it/s][AEpoch 13: 100%|##########| 3714/3714 [9:09:58<00:00,  8.88s/it, loss=1.72, v_num=0, train/loss_step=1.740, train/acc_step=0.500, val/loss_step=1.990, val/acc_step=0.125, val/haversine_distance_step=1.610, val/loss_epoch=1.910, val/acc_epoch=0.431, val/haversine_distance_epoch=1.740, train/loss_epoch=1.770, train/acc_epoch=0.486]Epoch 13: 100%|##########| 3714/3714 [9:09:58<00:00,  8.89s/it, loss=1.72, v_num=0, train/loss_step=1.740, train/acc_step=0.500, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.770, train/acc_epoch=0.486]
                                                                          [AMetric val/loss improved by 0.033 >= min_delta = 0.0. New best score: 1.875
Epoch 13: 100%|##########| 3714/3714 [9:10:08<00:00,  8.89s/it, loss=1.72, v_num=0, train/loss_step=1.740, train/acc_step=0.500, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14: 100%|##########| 3714/3714 [9:10:09<00:00,  8.89s/it, loss=1.72, v_num=0, train/loss_step=1.740, train/acc_step=0.500, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:   4%|4         | 165/3714 [9:12:24<198:01:57, 200.88s/it, loss=1.72, v_num=0, train/loss_step=1.740, train/acc_step=0.500, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:   4%|4         | 165/3714 [9:12:24<198:01:57, 200.88s/it, loss=1.68, v_num=0, train/loss_step=1.560, train/acc_step=0.500, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:   9%|8         | 330/3714 [9:14:28<94:45:57, 100.81s/it, loss=1.68, v_num=0, train/loss_step=1.560, train/acc_step=0.500, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510] Epoch 14:   9%|8         | 330/3714 [9:14:28<94:45:57, 100.81s/it, loss=1.68, v_num=0, train/loss_step=1.230, train/acc_step=0.875, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  13%|#3        | 495/3714 [9:16:32<60:19:15, 67.46s/it, loss=1.68, v_num=0, train/loss_step=1.230, train/acc_step=0.875, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510] Epoch 14:  13%|#3        | 495/3714 [9:16:32<60:19:15, 67.46s/it, loss=1.61, v_num=0, train/loss_step=1.980, train/acc_step=0.625, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  18%|#7        | 660/3714 [9:18:36<43:04:50, 50.78s/it, loss=1.61, v_num=0, train/loss_step=1.980, train/acc_step=0.625, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  18%|#7        | 660/3714 [9:18:36<43:04:50, 50.78s/it, loss=1.58, v_num=0, train/loss_step=1.340, train/acc_step=0.750, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  22%|##2       | 825/3714 [9:20:42<32:43:29, 40.78s/it, loss=1.58, v_num=0, train/loss_step=1.340, train/acc_step=0.750, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  22%|##2       | 825/3714 [9:20:42<32:43:29, 40.78s/it, loss=1.73, v_num=0, train/loss_step=1.610, train/acc_step=0.500, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  27%|##6       | 990/3714 [9:22:47<25:48:30, 34.11s/it, loss=1.73, v_num=0, train/loss_step=1.610, train/acc_step=0.500, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  27%|##6       | 990/3714 [9:22:47<25:48:30, 34.11s/it, loss=1.6, v_num=0, train/loss_step=1.430, train/acc_step=0.625, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510] Epoch 14:  31%|###1      | 1155/3714 [9:24:51<20:51:28, 29.34s/it, loss=1.6, v_num=0, train/loss_step=1.430, train/acc_step=0.625, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  31%|###1      | 1155/3714 [9:24:51<20:51:28, 29.34s/it, loss=1.59, v_num=0, train/loss_step=1.740, train/acc_step=0.375, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  36%|###5      | 1320/3714 [9:26:59<17:08:19, 25.77s/it, loss=1.59, v_num=0, train/loss_step=1.740, train/acc_step=0.375, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  36%|###5      | 1320/3714 [9:26:59<17:08:19, 25.77s/it, loss=1.52, v_num=0, train/loss_step=0.846, train/acc_step=0.750, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  40%|###9      | 1485/3714 [9:29:04<14:14:11, 22.99s/it, loss=1.52, v_num=0, train/loss_step=0.846, train/acc_step=0.750, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  40%|###9      | 1485/3714 [9:29:04<14:14:11, 22.99s/it, loss=1.73, v_num=0, train/loss_step=1.440, train/acc_step=0.500, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  44%|####4     | 1650/3714 [9:31:09<11:54:28, 20.77s/it, loss=1.73, v_num=0, train/loss_step=1.440, train/acc_step=0.500, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  44%|####4     | 1650/3714 [9:31:09<11:54:28, 20.77s/it, loss=1.58, v_num=0, train/loss_step=1.780, train/acc_step=0.625, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  49%|####8     | 1815/3714 [9:33:16<9:59:48, 18.95s/it, loss=1.58, v_num=0, train/loss_step=1.780, train/acc_step=0.625, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510] Epoch 14:  49%|####8     | 1815/3714 [9:33:16<9:59:48, 18.95s/it, loss=1.5, v_num=0, train/loss_step=1.330, train/acc_step=0.625, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510] Epoch 14:  53%|#####3    | 1980/3714 [9:35:22<8:23:53, 17.44s/it, loss=1.5, v_num=0, train/loss_step=1.330, train/acc_step=0.625, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  53%|#####3    | 1980/3714 [9:35:22<8:23:53, 17.44s/it, loss=1.75, v_num=0, train/loss_step=2.630, train/acc_step=0.375, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  58%|#####7    | 2145/3714 [9:37:28<7:02:24, 16.15s/it, loss=1.75, v_num=0, train/loss_step=2.630, train/acc_step=0.375, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  58%|#####7    | 2145/3714 [9:37:28<7:02:24, 16.15s/it, loss=1.55, v_num=0, train/loss_step=1.640, train/acc_step=0.500, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  62%|######2   | 2310/3714 [9:39:34<5:52:15, 15.05s/it, loss=1.55, v_num=0, train/loss_step=1.640, train/acc_step=0.500, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  62%|######2   | 2310/3714 [9:39:34<5:52:15, 15.05s/it, loss=1.52, v_num=0, train/loss_step=1.990, train/acc_step=0.375, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  67%|######6   | 2475/3714 [9:41:39<4:51:10, 14.10s/it, loss=1.52, v_num=0, train/loss_step=1.990, train/acc_step=0.375, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  67%|######6   | 2475/3714 [9:41:39<4:51:10, 14.10s/it, loss=1.73, v_num=0, train/loss_step=1.640, train/acc_step=0.375, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  71%|#######1  | 2640/3714 [9:43:43<3:57:28, 13.27s/it, loss=1.73, v_num=0, train/loss_step=1.640, train/acc_step=0.375, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  71%|#######1  | 2640/3714 [9:43:43<3:57:28, 13.27s/it, loss=1.69, v_num=0, train/loss_step=1.620, train/acc_step=0.625, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  76%|#######5  | 2805/3714 [9:45:49<3:09:50, 12.53s/it, loss=1.69, v_num=0, train/loss_step=1.620, train/acc_step=0.625, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  76%|#######5  | 2805/3714 [9:45:49<3:09:50, 12.53s/it, loss=1.59, v_num=0, train/loss_step=1.870, train/acc_step=0.375, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  80%|#######9  | 2970/3714 [9:47:51<2:27:15, 11.88s/it, loss=1.59, v_num=0, train/loss_step=1.870, train/acc_step=0.375, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  80%|#######9  | 2970/3714 [9:47:51<2:27:15, 11.88s/it, loss=1.69, v_num=0, train/loss_step=1.480, train/acc_step=0.625, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  84%|########4 | 3135/3714 [9:49:54<1:48:57, 11.29s/it, loss=1.69, v_num=0, train/loss_step=1.480, train/acc_step=0.625, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  84%|########4 | 3135/3714 [9:49:54<1:48:57, 11.29s/it, loss=1.64, v_num=0, train/loss_step=1.390, train/acc_step=0.625, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  89%|########8 | 3300/3714 [9:51:59<1:14:16, 10.76s/it, loss=1.64, v_num=0, train/loss_step=1.390, train/acc_step=0.625, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  89%|########8 | 3300/3714 [9:51:59<1:14:16, 10.76s/it, loss=1.78, v_num=0, train/loss_step=1.780, train/acc_step=0.375, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  89%|########8 | 3302/3714 [9:52:01<1:13:52, 10.76s/it, loss=1.78, v_num=0, train/loss_step=1.780, train/acc_step=0.375, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14:  89%|########8 | 3302/3714 [9:52:01<1:13:52, 10.76s/it, loss=1.74, v_num=0, train/loss_step=0.923, train/acc_step=0.875, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:04<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:33<00:49,  5.00it/s][AEpoch 14:  93%|#########3| 3467/3714 [9:52:35<42:13, 10.26s/it, loss=1.74, v_num=0, train/loss_step=0.923, train/acc_step=0.875, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]  
Validation DataLoader 0:  80%|########  | 330/412 [01:05<00:16,  5.03it/s][AEpoch 14:  98%|#########7| 3632/3714 [9:53:08<13:23,  9.80s/it, loss=1.74, v_num=0, train/loss_step=0.923, train/acc_step=0.875, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]
Validation DataLoader 0: 100%|##########| 412/412 [01:20<00:00,  5.09it/s][AEpoch 14: 100%|##########| 3714/3714 [9:53:23<00:00,  9.59s/it, loss=1.74, v_num=0, train/loss_step=0.923, train/acc_step=0.875, val/loss_step=2.330, val/acc_step=0.375, val/haversine_distance_step=1.790, val/loss_epoch=1.870, val/acc_epoch=0.444, val/haversine_distance_epoch=1.760, train/loss_epoch=1.700, train/acc_epoch=0.510]Epoch 14: 100%|##########| 3714/3714 [9:53:23<00:00,  9.59s/it, loss=1.74, v_num=0, train/loss_step=0.923, train/acc_step=0.875, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.700, train/acc_epoch=0.510]
                                                                          [AMetric val/loss improved by 0.032 >= min_delta = 0.0. New best score: 1.843
Epoch 14: 100%|##########| 3714/3714 [9:53:29<00:00,  9.59s/it, loss=1.74, v_num=0, train/loss_step=0.923, train/acc_step=0.875, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15: 100%|##########| 3714/3714 [9:53:31<00:00,  9.59s/it, loss=1.74, v_num=0, train/loss_step=0.923, train/acc_step=0.875, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:   4%|4         | 165/3714 [9:55:40<213:32:16, 216.61s/it, loss=1.74, v_num=0, train/loss_step=0.923, train/acc_step=0.875, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:   4%|4         | 165/3714 [9:55:40<213:32:16, 216.61s/it, loss=1.57, v_num=0, train/loss_step=1.260, train/acc_step=0.625, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:   9%|8         | 330/3714 [9:57:44<102:09:30, 108.68s/it, loss=1.57, v_num=0, train/loss_step=1.260, train/acc_step=0.625, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:   9%|8         | 330/3714 [9:57:44<102:09:30, 108.68s/it, loss=1.48, v_num=0, train/loss_step=1.300, train/acc_step=0.750, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  13%|#3        | 495/3714 [9:59:47<65:00:27, 72.70s/it, loss=1.48, v_num=0, train/loss_step=1.300, train/acc_step=0.750, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]  Epoch 15:  13%|#3        | 495/3714 [9:59:47<65:00:27, 72.70s/it, loss=1.63, v_num=0, train/loss_step=1.120, train/acc_step=0.875, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  18%|#7        | 660/3714 [10:01:51<46:24:57, 54.71s/it, loss=1.63, v_num=0, train/loss_step=1.120, train/acc_step=0.875, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  18%|#7        | 660/3714 [10:01:51<46:24:57, 54.71s/it, loss=1.54, v_num=0, train/loss_step=1.600, train/acc_step=0.625, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  22%|##2       | 825/3714 [10:03:56<35:14:52, 43.92s/it, loss=1.54, v_num=0, train/loss_step=1.600, train/acc_step=0.625, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  22%|##2       | 825/3714 [10:03:56<35:14:52, 43.92s/it, loss=1.64, v_num=0, train/loss_step=2.490, train/acc_step=0.375, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  27%|##6       | 990/3714 [10:06:01<27:47:28, 36.73s/it, loss=1.64, v_num=0, train/loss_step=2.490, train/acc_step=0.375, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  27%|##6       | 990/3714 [10:06:01<27:47:28, 36.73s/it, loss=1.6, v_num=0, train/loss_step=1.700, train/acc_step=0.375, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528] Epoch 15:  31%|###1      | 1155/3714 [10:08:04<22:27:15, 31.59s/it, loss=1.6, v_num=0, train/loss_step=1.700, train/acc_step=0.375, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  31%|###1      | 1155/3714 [10:08:04<22:27:15, 31.59s/it, loss=1.71, v_num=0, train/loss_step=1.520, train/acc_step=0.750, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  36%|###5      | 1320/3714 [10:10:07<18:26:33, 27.73s/it, loss=1.71, v_num=0, train/loss_step=1.520, train/acc_step=0.750, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  36%|###5      | 1320/3714 [10:10:07<18:26:33, 27.73s/it, loss=1.54, v_num=0, train/loss_step=2.180, train/acc_step=0.125, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  40%|###9      | 1485/3714 [10:12:11<15:18:54, 24.74s/it, loss=1.54, v_num=0, train/loss_step=2.180, train/acc_step=0.125, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  40%|###9      | 1485/3714 [10:12:11<15:18:54, 24.74s/it, loss=1.69, v_num=0, train/loss_step=1.640, train/acc_step=0.500, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  44%|####4     | 1650/3714 [10:14:14<12:48:21, 22.34s/it, loss=1.69, v_num=0, train/loss_step=1.640, train/acc_step=0.500, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  44%|####4     | 1650/3714 [10:14:14<12:48:21, 22.34s/it, loss=1.64, v_num=0, train/loss_step=2.000, train/acc_step=0.375, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  49%|####8     | 1815/3714 [10:16:21<10:44:52, 20.38s/it, loss=1.64, v_num=0, train/loss_step=2.000, train/acc_step=0.375, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  49%|####8     | 1815/3714 [10:16:21<10:44:52, 20.38s/it, loss=1.64, v_num=0, train/loss_step=0.952, train/acc_step=0.875, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  53%|#####3    | 1980/3714 [10:18:28<9:01:38, 18.74s/it, loss=1.64, v_num=0, train/loss_step=0.952, train/acc_step=0.875, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528] Epoch 15:  53%|#####3    | 1980/3714 [10:18:28<9:01:38, 18.74s/it, loss=1.74, v_num=0, train/loss_step=1.360, train/acc_step=0.500, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  58%|#####7    | 2145/3714 [10:20:33<7:33:55, 17.36s/it, loss=1.74, v_num=0, train/loss_step=1.360, train/acc_step=0.500, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  58%|#####7    | 2145/3714 [10:20:33<7:33:55, 17.36s/it, loss=1.56, v_num=0, train/loss_step=2.070, train/acc_step=0.375, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  62%|######2   | 2310/3714 [10:22:39<6:18:26, 16.17s/it, loss=1.56, v_num=0, train/loss_step=2.070, train/acc_step=0.375, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  62%|######2   | 2310/3714 [10:22:39<6:18:26, 16.17s/it, loss=1.47, v_num=0, train/loss_step=1.260, train/acc_step=0.625, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  67%|######6   | 2475/3714 [10:24:45<5:12:45, 15.15s/it, loss=1.47, v_num=0, train/loss_step=1.260, train/acc_step=0.625, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  67%|######6   | 2475/3714 [10:24:45<5:12:45, 15.15s/it, loss=1.66, v_num=0, train/loss_step=2.110, train/acc_step=0.250, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  71%|#######1  | 2640/3714 [10:26:50<4:15:00, 14.25s/it, loss=1.66, v_num=0, train/loss_step=2.110, train/acc_step=0.250, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  71%|#######1  | 2640/3714 [10:26:50<4:15:00, 14.25s/it, loss=1.53, v_num=0, train/loss_step=1.800, train/acc_step=0.375, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  76%|#######5  | 2805/3714 [10:28:56<3:23:49, 13.45s/it, loss=1.53, v_num=0, train/loss_step=1.800, train/acc_step=0.375, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  76%|#######5  | 2805/3714 [10:28:56<3:23:49, 13.45s/it, loss=1.45, v_num=0, train/loss_step=2.250, train/acc_step=0.250, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  80%|#######9  | 2970/3714 [10:31:02<2:38:04, 12.75s/it, loss=1.45, v_num=0, train/loss_step=2.250, train/acc_step=0.250, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  80%|#######9  | 2970/3714 [10:31:02<2:38:04, 12.75s/it, loss=1.69, v_num=0, train/loss_step=1.040, train/acc_step=0.750, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  84%|########4 | 3135/3714 [10:33:09<1:56:56, 12.12s/it, loss=1.69, v_num=0, train/loss_step=1.040, train/acc_step=0.750, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]Epoch 15:  84%|########4 | 3135/3714 [10:33:09<1:56:56, 12.12s/it, loss=1.63, v_num=0, train/loss_step=1.430, train/acc_step=0.625, val/loss_step=1.200, val/acc_step=0.750, val/haversine_distance_step=1.840, val/loss_epoch=1.840, val/acc_epoch=0.454, val/haversine_distance_epoch=1.730, train/loss_epoch=1.640, train/acc_epoch=0.528]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py:727: UserWarning: Detected KeyboardInterrupt, attempting graceful shutdown...
  rank_zero_warn("Detected KeyboardInterrupt, attempting graceful shutdown...")
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:486: PossibleUserWarning: Your `test_dataloader`'s sampler has shuffling enabled, it is strongly recommended that you turn shuffling off for val/test/predict dataloaders.
  rank_zero_warn(
Testing: 0it [00:00, ?it/s]Testing DataLoader 0:   0%|          | 0/412 [00:04<?, ?it/s]Standard output piped to file:
/home/fwolf/lumen-geoguesser/reports/train-resnext101_32x8d-22-04-21-05-32-09.txt
[{'batch_size': 8,
  'cached_df': 'data/complete/data__spacing_0.5__num_class_55.csv',
  'dataset_dirs': ['data/external/', 'data/raw/'],
  'dataset_frac': 1,
  'image_size': 112,
  'load_in_ram': False,
  'lr': 1e-05,
  'models': ['resnext101_32x8d'],
  'num_workers': 32,
  'output_report': PosixPath('/home/fwolf/lumen-geoguesser/reports'),
  'pretrained': True,
  'quick': False,
  'shuffle_before_splitting': False,
  'split_ratios': [0.8, 0.1, 0.1],
  'trainer_checkpoint': None,
  'unfreeze_backbone_at_epoch': 5,
  'unfreeze_blocks': 'all',
  'use_single_images': False,
  'weight_decay': 0},
 {'accelerator': 'gpu',
  'accumulate_grad_batches': None,
  'amp_backend': 'native',
  'amp_level': None,
  'auto_lr_find': False,
  'auto_scale_batch_size': False,
  'auto_select_gpus': False,
  'benchmark': None,
  'check_val_every_n_epoch': 1,
  'checkpoint_callback': None,
  'default_root_dir': None,
  'detect_anomaly': False,
  'deterministic': False,
  'devices': '1',
  'enable_checkpointing': True,
  'enable_model_summary': True,
  'enable_progress_bar': True,
  'fast_dev_run': False,
  'flush_logs_every_n_steps': None,
  'gpus': None,
  'gradient_clip_algorithm': None,
  'gradient_clip_val': None,
  'ipus': None,
  'limit_predict_batches': None,
  'limit_test_batches': None,
  'limit_train_batches': None,
  'limit_val_batches': None,
  'log_every_n_steps': 20,
  'log_gpu_memory': None,
  'logger': True,
  'max_epochs': None,
  'max_steps': -1,
  'max_time': None,
  'min_epochs': None,
  'min_steps': None,
  'move_metrics_to_cpu': False,
  'multiple_trainloader_mode': 'max_size_cycle',
  'num_nodes': 1,
  'num_processes': None,
  'num_sanity_val_steps': 2,
  'overfit_batches': 0.0,
  'plugins': None,
  'precision': 32,
  'prepare_data_per_node': None,
  'process_position': 0,
  'profiler': None,
  'progress_bar_refresh_rate': None,
  'reload_dataloaders_every_n_epochs': 0,
  'replace_sampler_ddp': True,
  'resume_from_checkpoint': None,
  'stochastic_weight_avg': False,
  'strategy': None,
  'sync_batchnorm': False,
  'terminate_on_nan': None,
  'tpu_cores': None,
  'track_grad_norm': -1,
  'val_check_interval': None,
  'weights_save_path': None,
  'weights_summary': 'top'}]
GeoguesserDataModule init
GeoguesserDataset init
GeoguesserDataset init
GeoguesserDataset init
Train, val and test size 26417 3302 3303
Using cache found in /home/fwolf/.cache/torch/hub/pytorch_vision_v0.12.0
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py:91: PossibleUserWarning: `max_epochs` was not set. Setting it to 1000 epochs. To train without an epoch limit, set `max_epochs=-1`.
  rank_zero_warn(
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/utilities/parsing.py:107: UserWarning: attribute 'data_module' removed from hparams because it cannot be pickled
  rank_zero_warn(f"attribute '{k}' removed from hparams because it cannot be pickled")
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/torch/cuda/__init__.py:122: UserWarning: 
    Found GPU1 NVIDIA GeForce GTX TITAN Black which is of cuda capability 3.5.
    PyTorch no longer supports this GPU because it is too old.
    The minimum cuda capability supported by this library is 3.7.
    
  warnings.warn(old_gpu_warn % (d, name, major, minor, min_arch // 10, min_arch % 10))
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name     | Type   | Params | In sizes         | Out sizes
-------------------------------------------------------------------
0 | backbone | ResNet | 86.7 M | [8, 3, 112, 112] | [8, 2048]
1 | fc       | Linear | 434 K  | [8, 8192]        | [8, 53]  
-------------------------------------------------------------------
637 K     Trainable params
86.5 M    Non-trainable params
87.2 M    Total params
348.706   Total estimated model params size (MB)
/home/fwolf/lumen-geoguesser/src/model.py:96: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).
  outs_backbone = [self.backbone(image) for image in image_list]
Sanity Checking: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:486: PossibleUserWarning: Your `val_dataloader`'s sampler has shuffling enabled, it is strongly recommended that you turn shuffling off for val/test/predict dataloaders.
  rank_zero_warn(
Sanity Checking DataLoader 0:   0%|          | 0/2 [00:02<?, ?it/s]/home/fwolf/lumen-geoguesser/src/utils_model.py:55: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  preds, indices = torch.topk(F.softmax(y_pred), k = top_k)
Traceback (most recent call last):
  File "/home/fwolf/lumen-geoguesser/src/train.py", line 144, in <module>
    trainer.fit(model, data_module, ckpt_path=trainer_checkpoint)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 771, in fit
    self._call_and_handle_interrupt(
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 724, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 812, in _fit_impl
    results = self._run(model, ckpt_path=self.ckpt_path)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1237, in _run
    results = self._run_stage()
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1324, in _run_stage
    return self._run_train()
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1346, in _run_train
    self._run_sanity_check()
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1414, in _run_sanity_check
    val_loop.run()
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/base.py", line 204, in run
    self.advance(*args, **kwargs)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/dataloader/evaluation_loop.py", line 153, in advance
    dl_outputs = self.epoch_loop.run(self._data_fetcher, dl_max_batches, kwargs)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/base.py", line 204, in run
    self.advance(*args, **kwargs)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 127, in advance
    output = self._evaluation_step(**kwargs)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 222, in _evaluation_step
    output = self.trainer._call_strategy_hook("validation_step", *kwargs.values())
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1766, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/strategies/strategy.py", line 344, in validation_step
    return self.model.validation_step(*args, **kwargs)
  File "/home/fwolf/lumen-geoguesser/src/model.py", line 134, in validation_step
    coord_pred = lat_lng_weighted_mean(y_pred,  self.class_to_centroid_map, top_k=5)
  File "/home/fwolf/lumen-geoguesser/src/utils_model.py", line 62, in lat_lng_weighted_mean
    scaled_coords = picked_coords * preds
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!
Standard output piped to file:
/home/fwolf/lumen-geoguesser/reports/train-resnext101_32x8d-22-04-21-12-24-47.txt
[{'batch_size': 2,
  'cached_df': 'data/complete/data__spacing_0.5__num_class_55.csv',
  'dataset_dirs': ['data/external/', 'data/raw/'],
  'dataset_frac': 1,
  'image_size': 28,
  'load_in_ram': False,
  'lr': 1e-05,
  'models': ['resnext101_32x8d'],
  'num_workers': 32,
  'output_report': PosixPath('/home/fwolf/lumen-geoguesser/reports'),
  'pretrained': True,
  'quick': True,
  'shuffle_before_splitting': False,
  'split_ratios': [0.8, 0.1, 0.1],
  'trainer_checkpoint': None,
  'unfreeze_backbone_at_epoch': 5,
  'unfreeze_blocks': 'all',
  'use_single_images': False,
  'weight_decay': 0},
 {'accelerator': 'gpu',
  'accumulate_grad_batches': None,
  'amp_backend': 'native',
  'amp_level': None,
  'auto_lr_find': False,
  'auto_scale_batch_size': False,
  'auto_select_gpus': False,
  'benchmark': None,
  'check_val_every_n_epoch': 1,
  'checkpoint_callback': None,
  'default_root_dir': None,
  'detect_anomaly': False,
  'deterministic': False,
  'devices': '1',
  'enable_checkpointing': True,
  'enable_model_summary': True,
  'enable_progress_bar': True,
  'fast_dev_run': False,
  'flush_logs_every_n_steps': None,
  'gpus': None,
  'gradient_clip_algorithm': None,
  'gradient_clip_val': None,
  'ipus': None,
  'limit_predict_batches': None,
  'limit_test_batches': 15,
  'limit_train_batches': 15,
  'limit_val_batches': 15,
  'log_every_n_steps': 1,
  'log_gpu_memory': None,
  'logger': True,
  'max_epochs': None,
  'max_steps': -1,
  'max_time': None,
  'min_epochs': None,
  'min_steps': None,
  'move_metrics_to_cpu': False,
  'multiple_trainloader_mode': 'max_size_cycle',
  'num_nodes': 1,
  'num_processes': None,
  'num_sanity_val_steps': 2,
  'overfit_batches': 0.0,
  'plugins': None,
  'precision': 32,
  'prepare_data_per_node': None,
  'process_position': 0,
  'profiler': None,
  'progress_bar_refresh_rate': None,
  'reload_dataloaders_every_n_epochs': 0,
  'replace_sampler_ddp': True,
  'resume_from_checkpoint': None,
  'stochastic_weight_avg': False,
  'strategy': None,
  'sync_batchnorm': False,
  'terminate_on_nan': None,
  'tpu_cores': None,
  'track_grad_norm': -1,
  'val_check_interval': None,
  'weights_save_path': None,
  'weights_summary': 'top'}]
GeoguesserDataModule init
GeoguesserDataset init
GeoguesserDataset init
GeoguesserDataset init
Train, val and test size 26417 3302 3303
Using cache found in /home/fwolf/.cache/torch/hub/pytorch_vision_v0.12.0
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py:91: PossibleUserWarning: `max_epochs` was not set. Setting it to 1000 epochs. To train without an epoch limit, set `max_epochs=-1`.
  rank_zero_warn(
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/utilities/parsing.py:107: UserWarning: attribute 'data_module' removed from hparams because it cannot be pickled
  rank_zero_warn(f"attribute '{k}' removed from hparams because it cannot be pickled")
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/torch/cuda/__init__.py:122: UserWarning: 
    Found GPU1 NVIDIA GeForce GTX TITAN Black which is of cuda capability 3.5.
    PyTorch no longer supports this GPU because it is too old.
    The minimum cuda capability supported by this library is 3.7.
    
  warnings.warn(old_gpu_warn % (d, name, major, minor, min_arch // 10, min_arch % 10))
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name     | Type   | Params | In sizes       | Out sizes
-----------------------------------------------------------------
0 | backbone | ResNet | 86.7 M | [2, 3, 28, 28] | [2, 2048]
1 | fc       | Linear | 434 K  | [2, 8192]      | [2, 53]  
-----------------------------------------------------------------
637 K     Trainable params
86.5 M    Non-trainable params
87.2 M    Total params
348.706   Total estimated model params size (MB)
/home/fwolf/lumen-geoguesser/src/model.py:96: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).
  outs_backbone = [self.backbone(image) for image in image_list]
Sanity Checking: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:486: PossibleUserWarning: Your `val_dataloader`'s sampler has shuffling enabled, it is strongly recommended that you turn shuffling off for val/test/predict dataloaders.
  rank_zero_warn(
Sanity Checking DataLoader 0:   0%|          | 0/2 [00:01<?, ?it/s]/home/fwolf/lumen-geoguesser/src/utils_model.py:55: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  preds, indices = torch.topk(F.softmax(y_pred), k = top_k)
Traceback (most recent call last):
  File "/home/fwolf/lumen-geoguesser/src/train.py", line 144, in <module>
    trainer.fit(model, data_module, ckpt_path=trainer_checkpoint)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 771, in fit
    self._call_and_handle_interrupt(
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 724, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 812, in _fit_impl
    results = self._run(model, ckpt_path=self.ckpt_path)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1237, in _run
    results = self._run_stage()
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1324, in _run_stage
    return self._run_train()
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1346, in _run_train
    self._run_sanity_check()
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1414, in _run_sanity_check
    val_loop.run()
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/base.py", line 204, in run
    self.advance(*args, **kwargs)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/dataloader/evaluation_loop.py", line 153, in advance
    dl_outputs = self.epoch_loop.run(self._data_fetcher, dl_max_batches, kwargs)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/base.py", line 204, in run
    self.advance(*args, **kwargs)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 127, in advance
    output = self._evaluation_step(**kwargs)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 222, in _evaluation_step
    output = self.trainer._call_strategy_hook("validation_step", *kwargs.values())
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1766, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/strategies/strategy.py", line 344, in validation_step
    return self.model.validation_step(*args, **kwargs)
  File "/home/fwolf/lumen-geoguesser/src/model.py", line 134, in validation_step
    coord_pred = lat_lng_weighted_mean(y_pred,  self.class_to_centroid_map, top_k=5)
  File "/home/fwolf/lumen-geoguesser/src/utils_model.py", line 62, in lat_lng_weighted_mean
    scaled_coords = picked_coords * preds
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!
Standard output piped to file:
/home/fwolf/lumen-geoguesser/reports/train-resnext101_32x8d-22-04-21-13-50-35.txt
[{'batch_size': 2,
  'cached_df': 'data/complete/data__spacing_0.5__num_class_55.csv',
  'dataset_dirs': ['data/external/', 'data/raw/'],
  'dataset_frac': 1,
  'image_size': 28,
  'load_in_ram': False,
  'lr': 1e-05,
  'models': ['resnext101_32x8d'],
  'num_workers': 32,
  'output_report': PosixPath('/home/fwolf/lumen-geoguesser/reports'),
  'pretrained': True,
  'quick': True,
  'shuffle_before_splitting': False,
  'split_ratios': [0.8, 0.1, 0.1],
  'trainer_checkpoint': None,
  'unfreeze_backbone_at_epoch': 5,
  'unfreeze_blocks': 'all',
  'use_single_images': False,
  'weight_decay': 0},
 {'accelerator': 'gpu',
  'accumulate_grad_batches': None,
  'amp_backend': 'native',
  'amp_level': None,
  'auto_lr_find': False,
  'auto_scale_batch_size': False,
  'auto_select_gpus': False,
  'benchmark': None,
  'check_val_every_n_epoch': 1,
  'checkpoint_callback': None,
  'default_root_dir': None,
  'detect_anomaly': False,
  'deterministic': False,
  'devices': '1',
  'enable_checkpointing': True,
  'enable_model_summary': True,
  'enable_progress_bar': True,
  'fast_dev_run': False,
  'flush_logs_every_n_steps': None,
  'gpus': None,
  'gradient_clip_algorithm': None,
  'gradient_clip_val': None,
  'ipus': None,
  'limit_predict_batches': None,
  'limit_test_batches': 15,
  'limit_train_batches': 15,
  'limit_val_batches': 15,
  'log_every_n_steps': 1,
  'log_gpu_memory': None,
  'logger': True,
  'max_epochs': None,
  'max_steps': -1,
  'max_time': None,
  'min_epochs': None,
  'min_steps': None,
  'move_metrics_to_cpu': False,
  'multiple_trainloader_mode': 'max_size_cycle',
  'num_nodes': 1,
  'num_processes': None,
  'num_sanity_val_steps': 2,
  'overfit_batches': 0.0,
  'plugins': None,
  'precision': 32,
  'prepare_data_per_node': None,
  'process_position': 0,
  'profiler': None,
  'progress_bar_refresh_rate': None,
  'reload_dataloaders_every_n_epochs': 0,
  'replace_sampler_ddp': True,
  'resume_from_checkpoint': None,
  'stochastic_weight_avg': False,
  'strategy': None,
  'sync_batchnorm': False,
  'terminate_on_nan': None,
  'tpu_cores': None,
  'track_grad_norm': -1,
  'val_check_interval': None,
  'weights_save_path': None,
  'weights_summary': 'top'}]
GeoguesserDataModule init
GeoguesserDataset init
GeoguesserDataset init
GeoguesserDataset init
Train, val and test size 26417 3302 3303
Using cache found in /home/fwolf/.cache/torch/hub/pytorch_vision_v0.12.0
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py:91: PossibleUserWarning: `max_epochs` was not set. Setting it to 1000 epochs. To train without an epoch limit, set `max_epochs=-1`.
  rank_zero_warn(
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/utilities/parsing.py:107: UserWarning: attribute 'data_module' removed from hparams because it cannot be pickled
  rank_zero_warn(f"attribute '{k}' removed from hparams because it cannot be pickled")
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/torch/cuda/__init__.py:122: UserWarning: 
    Found GPU1 NVIDIA GeForce GTX TITAN Black which is of cuda capability 3.5.
    PyTorch no longer supports this GPU because it is too old.
    The minimum cuda capability supported by this library is 3.7.
    
  warnings.warn(old_gpu_warn % (d, name, major, minor, min_arch // 10, min_arch % 10))
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name     | Type   | Params | In sizes       | Out sizes
-----------------------------------------------------------------
0 | backbone | ResNet | 86.7 M | [2, 3, 28, 28] | [2, 2048]
1 | fc       | Linear | 434 K  | [2, 8192]      | [2, 53]  
-----------------------------------------------------------------
637 K     Trainable params
86.5 M    Non-trainable params
87.2 M    Total params
348.706   Total estimated model params size (MB)
/home/fwolf/lumen-geoguesser/src/model.py:98: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).
  outs_backbone = [self.backbone(image) for image in image_list]
Sanity Checking: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:486: PossibleUserWarning: Your `val_dataloader`'s sampler has shuffling enabled, it is strongly recommended that you turn shuffling off for val/test/predict dataloaders.
  rank_zero_warn(
Sanity Checking DataLoader 0:   0%|          | 0/2 [00:01<?, ?it/s]/home/fwolf/lumen-geoguesser/src/utils_model.py:55: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  preds, indices = torch.topk(F.softmax(y_pred), k = top_k)
Sanity Checking DataLoader 0: 100%|##########| 2/2 [00:02<00:00,  1.09s/it]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `validation_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
                                                                           Training: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:   0%|          | 0/30 [00:00<?, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_epoch_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:  50%|#####     | 15/30 [00:11<00:11,  1.35it/s]Epoch 0:  50%|#####     | 15/30 [00:11<00:11,  1.35it/s, loss=4.03, v_num=0, train/loss_step=3.980, train/acc_step=0.000]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/15 [00:02<?, ?it/s][A
Validation DataLoader 0: 100%|##########| 15/15 [00:04<00:00,  3.30it/s][AEpoch 0: 100%|##########| 30/30 [00:16<00:00,  1.86it/s, loss=4.03, v_num=0, train/loss_step=3.980, train/acc_step=0.000]Epoch 0: 100%|##########| 30/30 [00:16<00:00,  1.86it/s, loss=4.03, v_num=0, train/loss_step=3.980, train/acc_step=0.000, val/loss_step=1.11e+4, val/acc_step=0.000, val/haversine_distance_step=1.510, val/loss_epoch=3.39e+3, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.990]
                                                                        [A/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `training_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Metric val/loss improved. New best score: 3390.244
Epoch 0: 100%|##########| 30/30 [00:16<00:00,  1.85it/s, loss=4.03, v_num=0, train/loss_step=3.980, train/acc_step=0.000, val/loss_step=1.11e+4, val/acc_step=0.000, val/haversine_distance_step=1.510, val/loss_epoch=3.39e+3, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.990, train/loss_epoch=4.030, train/acc_epoch=0.0333]Epoch 1: 100%|##########| 30/30 [00:17<00:00,  1.71it/s, loss=4.03, v_num=0, train/loss_step=3.980, train/acc_step=0.000, val/loss_step=1.11e+4, val/acc_step=0.000, val/haversine_distance_step=1.510, val/loss_epoch=3.39e+3, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.990, train/loss_epoch=4.030, train/acc_epoch=0.0333]Epoch 1:  50%|#####     | 15/30 [00:28<00:28,  1.91s/it, loss=4.03, v_num=0, train/loss_step=3.980, train/acc_step=0.000, val/loss_step=1.11e+4, val/acc_step=0.000, val/haversine_distance_step=1.510, val/loss_epoch=3.39e+3, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.990, train/loss_epoch=4.030, train/acc_epoch=0.0333]Epoch 1:  50%|#####     | 15/30 [00:28<00:28,  1.91s/it, loss=3.95, v_num=0, train/loss_step=3.920, train/acc_step=0.000, val/loss_step=1.11e+4, val/acc_step=0.000, val/haversine_distance_step=1.510, val/loss_epoch=3.39e+3, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.990, train/loss_epoch=4.030, train/acc_epoch=0.0333]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/15 [00:01<?, ?it/s][A
Validation DataLoader 0: 100%|##########| 15/15 [00:04<00:00,  3.33it/s][AEpoch 1: 100%|##########| 30/30 [00:33<00:00,  1.12s/it, loss=3.95, v_num=0, train/loss_step=3.920, train/acc_step=0.000, val/loss_step=1.11e+4, val/acc_step=0.000, val/haversine_distance_step=1.510, val/loss_epoch=3.39e+3, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.990, train/loss_epoch=4.030, train/acc_epoch=0.0333]Epoch 1: 100%|##########| 30/30 [00:33<00:00,  1.12s/it, loss=3.95, v_num=0, train/loss_step=3.920, train/acc_step=0.000, val/loss_step=1.39e+3, val/acc_step=0.000, val/haversine_distance_step=2.340, val/loss_epoch=1.09e+4, val/acc_epoch=0.000, val/haversine_distance_epoch=1.890, train/loss_epoch=4.030, train/acc_epoch=0.0333] 
                                                                        [AEpoch 1: 100%|##########| 30/30 [00:33<00:00,  1.12s/it, loss=3.95, v_num=0, train/loss_step=3.920, train/acc_step=0.000, val/loss_step=1.39e+3, val/acc_step=0.000, val/haversine_distance_step=2.340, val/loss_epoch=1.09e+4, val/acc_epoch=0.000, val/haversine_distance_epoch=1.890, train/loss_epoch=3.950, train/acc_epoch=0.0333]Epoch 2: 100%|##########| 30/30 [00:35<00:00,  1.17s/it, loss=3.95, v_num=0, train/loss_step=3.920, train/acc_step=0.000, val/loss_step=1.39e+3, val/acc_step=0.000, val/haversine_distance_step=2.340, val/loss_epoch=1.09e+4, val/acc_epoch=0.000, val/haversine_distance_epoch=1.890, train/loss_epoch=3.950, train/acc_epoch=0.0333]Epoch 2:  50%|#####     | 15/30 [00:46<00:46,  3.08s/it, loss=3.95, v_num=0, train/loss_step=3.920, train/acc_step=0.000, val/loss_step=1.39e+3, val/acc_step=0.000, val/haversine_distance_step=2.340, val/loss_epoch=1.09e+4, val/acc_epoch=0.000, val/haversine_distance_epoch=1.890, train/loss_epoch=3.950, train/acc_epoch=0.0333]Epoch 2:  50%|#####     | 15/30 [00:46<00:46,  3.08s/it, loss=4.02, v_num=0, train/loss_step=3.660, train/acc_step=0.000, val/loss_step=1.39e+3, val/acc_step=0.000, val/haversine_distance_step=2.340, val/loss_epoch=1.09e+4, val/acc_epoch=0.000, val/haversine_distance_epoch=1.890, train/loss_epoch=3.950, train/acc_epoch=0.0333]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/15 [00:01<?, ?it/s][A
Validation DataLoader 0: 100%|##########| 15/15 [00:04<00:00,  3.22it/s][AEpoch 2: 100%|##########| 30/30 [00:51<00:00,  1.71s/it, loss=4.02, v_num=0, train/loss_step=3.660, train/acc_step=0.000, val/loss_step=1.39e+3, val/acc_step=0.000, val/haversine_distance_step=2.340, val/loss_epoch=1.09e+4, val/acc_epoch=0.000, val/haversine_distance_epoch=1.890, train/loss_epoch=3.950, train/acc_epoch=0.0333]Epoch 2: 100%|##########| 30/30 [00:51<00:00,  1.71s/it, loss=4.02, v_num=0, train/loss_step=3.660, train/acc_step=0.000, val/loss_step=1.12e+3, val/acc_step=0.000, val/haversine_distance_step=1.250, val/loss_epoch=1.35e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.850, train/loss_epoch=3.950, train/acc_epoch=0.0333]
                                                                        [AEpoch 2: 100%|##########| 30/30 [00:51<00:00,  1.71s/it, loss=4.02, v_num=0, train/loss_step=3.660, train/acc_step=0.000, val/loss_step=1.12e+3, val/acc_step=0.000, val/haversine_distance_step=1.250, val/loss_epoch=1.35e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.850, train/loss_epoch=4.050, train/acc_epoch=0.000] Epoch 3: 100%|##########| 30/30 [00:52<00:00,  1.76s/it, loss=4.02, v_num=0, train/loss_step=3.660, train/acc_step=0.000, val/loss_step=1.12e+3, val/acc_step=0.000, val/haversine_distance_step=1.250, val/loss_epoch=1.35e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.850, train/loss_epoch=4.050, train/acc_epoch=0.000]Epoch 3:  50%|#####     | 15/30 [01:03<01:03,  4.23s/it, loss=4.02, v_num=0, train/loss_step=3.660, train/acc_step=0.000, val/loss_step=1.12e+3, val/acc_step=0.000, val/haversine_distance_step=1.250, val/loss_epoch=1.35e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.850, train/loss_epoch=4.050, train/acc_epoch=0.000]Epoch 3:  50%|#####     | 15/30 [01:03<01:03,  4.23s/it, loss=4.01, v_num=0, train/loss_step=3.770, train/acc_step=0.000, val/loss_step=1.12e+3, val/acc_step=0.000, val/haversine_distance_step=1.250, val/loss_epoch=1.35e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.850, train/loss_epoch=4.050, train/acc_epoch=0.000]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/15 [00:02<?, ?it/s][A
Validation DataLoader 0: 100%|##########| 15/15 [00:04<00:00,  3.05it/s][AEpoch 3: 100%|##########| 30/30 [01:08<00:00,  2.29s/it, loss=4.01, v_num=0, train/loss_step=3.770, train/acc_step=0.000, val/loss_step=1.12e+3, val/acc_step=0.000, val/haversine_distance_step=1.250, val/loss_epoch=1.35e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.850, train/loss_epoch=4.050, train/acc_epoch=0.000]Epoch 3: 100%|##########| 30/30 [01:08<00:00,  2.29s/it, loss=4.01, v_num=0, train/loss_step=3.770, train/acc_step=0.000, val/loss_step=5.380, val/acc_step=0.000, val/haversine_distance_step=1.850, val/loss_epoch=6.8e+3, val/acc_epoch=0.100, val/haversine_distance_epoch=1.930, train/loss_epoch=4.050, train/acc_epoch=0.000]    
                                                                        [AEpoch 3: 100%|##########| 30/30 [01:08<00:00,  2.30s/it, loss=4.01, v_num=0, train/loss_step=3.770, train/acc_step=0.000, val/loss_step=5.380, val/acc_step=0.000, val/haversine_distance_step=1.850, val/loss_epoch=6.8e+3, val/acc_epoch=0.100, val/haversine_distance_epoch=1.930, train/loss_epoch=4.010, train/acc_epoch=0.000]Epoch 4: 100%|##########| 30/30 [01:08<00:00,  2.30s/it, loss=4.01, v_num=0, train/loss_step=3.770, train/acc_step=0.000, val/loss_step=5.380, val/acc_step=0.000, val/haversine_distance_step=1.850, val/loss_epoch=6.8e+3, val/acc_epoch=0.100, val/haversine_distance_epoch=1.930, train/loss_epoch=4.010, train/acc_epoch=0.000]Epoch 4:  50%|#####     | 15/30 [01:19<01:19,  5.32s/it, loss=4.01, v_num=0, train/loss_step=3.770, train/acc_step=0.000, val/loss_step=5.380, val/acc_step=0.000, val/haversine_distance_step=1.850, val/loss_epoch=6.8e+3, val/acc_epoch=0.100, val/haversine_distance_epoch=1.930, train/loss_epoch=4.010, train/acc_epoch=0.000]Epoch 4:  50%|#####     | 15/30 [01:19<01:19,  5.32s/it, loss=3.86, v_num=0, train/loss_step=3.710, train/acc_step=0.000, val/loss_step=5.380, val/acc_step=0.000, val/haversine_distance_step=1.850, val/loss_epoch=6.8e+3, val/acc_epoch=0.100, val/haversine_distance_epoch=1.930, train/loss_epoch=4.010, train/acc_epoch=0.000]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/15 [00:02<?, ?it/s][A
Validation DataLoader 0: 100%|##########| 15/15 [00:05<00:00,  2.95it/s][AEpoch 4: 100%|##########| 30/30 [01:25<00:00,  2.85s/it, loss=3.86, v_num=0, train/loss_step=3.710, train/acc_step=0.000, val/loss_step=5.380, val/acc_step=0.000, val/haversine_distance_step=1.850, val/loss_epoch=6.8e+3, val/acc_epoch=0.100, val/haversine_distance_epoch=1.930, train/loss_epoch=4.010, train/acc_epoch=0.000]Epoch 4: 100%|##########| 30/30 [01:25<00:00,  2.85s/it, loss=3.86, v_num=0, train/loss_step=3.710, train/acc_step=0.000, val/loss_step=7.280, val/acc_step=0.000, val/haversine_distance_step=1.610, val/loss_epoch=4.76e+4, val/acc_epoch=0.000, val/haversine_distance_epoch=1.780, train/loss_epoch=4.010, train/acc_epoch=0.000]
                                                                        [AEpoch 4: 100%|##########| 30/30 [01:25<00:00,  2.85s/it, loss=3.86, v_num=0, train/loss_step=3.710, train/acc_step=0.000, val/loss_step=7.280, val/acc_step=0.000, val/haversine_distance_step=1.610, val/loss_epoch=4.76e+4, val/acc_epoch=0.000, val/haversine_distance_epoch=1.780, train/loss_epoch=3.880, train/acc_epoch=0.0333]Epoch 5: 100%|##########| 30/30 [01:26<00:00,  2.89s/it, loss=3.86, v_num=0, train/loss_step=3.710, train/acc_step=0.000, val/loss_step=7.280, val/acc_step=0.000, val/haversine_distance_step=1.610, val/loss_epoch=4.76e+4, val/acc_epoch=0.000, val/haversine_distance_epoch=1.780, train/loss_epoch=3.880, train/acc_epoch=0.0333]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/callbacks/finetuning.py:210: UserWarning: The provided params to be frozen already exist within another group of this optimizer. Those parameters will be skipped.
HINT: Did you init your optimizer in `configure_optimizer` as such:
 <class 'torch.optim.adam.Adam'>(filter(lambda p: p.requires_grad, self.parameters()), ...) 
  rank_zero_warn(
Standard output piped to file:
/home/fwolf/lumen-geoguesser/reports/train-resnext101_32x8d-22-04-21-13-55-08.txt
[{'batch_size': 8,
  'cached_df': 'data/complete/data__spacing_0.5__num_class_55.csv',
  'dataset_dirs': ['data/external/', 'data/raw/'],
  'dataset_frac': 1,
  'image_size': 112,
  'load_in_ram': False,
  'lr': 1e-05,
  'models': ['resnext101_32x8d'],
  'num_workers': 32,
  'output_report': PosixPath('/home/fwolf/lumen-geoguesser/reports'),
  'pretrained': True,
  'quick': False,
  'shuffle_before_splitting': False,
  'split_ratios': [0.8, 0.1, 0.1],
  'trainer_checkpoint': None,
  'unfreeze_backbone_at_epoch': 5,
  'unfreeze_blocks': 'all',
  'use_single_images': False,
  'weight_decay': 0},
 {'accelerator': 'gpu',
  'accumulate_grad_batches': None,
  'amp_backend': 'native',
  'amp_level': None,
  'auto_lr_find': False,
  'auto_scale_batch_size': False,
  'auto_select_gpus': False,
  'benchmark': None,
  'check_val_every_n_epoch': 1,
  'checkpoint_callback': None,
  'default_root_dir': None,
  'detect_anomaly': False,
  'deterministic': False,
  'devices': '1',
  'enable_checkpointing': True,
  'enable_model_summary': True,
  'enable_progress_bar': True,
  'fast_dev_run': False,
  'flush_logs_every_n_steps': None,
  'gpus': None,
  'gradient_clip_algorithm': None,
  'gradient_clip_val': None,
  'ipus': None,
  'limit_predict_batches': None,
  'limit_test_batches': None,
  'limit_train_batches': None,
  'limit_val_batches': None,
  'log_every_n_steps': 20,
  'log_gpu_memory': None,
  'logger': True,
  'max_epochs': None,
  'max_steps': -1,
  'max_time': None,
  'min_epochs': None,
  'min_steps': None,
  'move_metrics_to_cpu': False,
  'multiple_trainloader_mode': 'max_size_cycle',
  'num_nodes': 1,
  'num_processes': None,
  'num_sanity_val_steps': 2,
  'overfit_batches': 0.0,
  'plugins': None,
  'precision': 32,
  'prepare_data_per_node': None,
  'process_position': 0,
  'profiler': None,
  'progress_bar_refresh_rate': None,
  'reload_dataloaders_every_n_epochs': 0,
  'replace_sampler_ddp': True,
  'resume_from_checkpoint': None,
  'stochastic_weight_avg': False,
  'strategy': None,
  'sync_batchnorm': False,
  'terminate_on_nan': None,
  'tpu_cores': None,
  'track_grad_norm': -1,
  'val_check_interval': None,
  'weights_save_path': None,
  'weights_summary': 'top'}]
GeoguesserDataModule init
GeoguesserDataset init
GeoguesserDataset init
GeoguesserDataset init
Train, val and test size 26417 3302 3303
Using cache found in /home/fwolf/.cache/torch/hub/pytorch_vision_v0.12.0
Epoch 5:  50%|#####     | 15/30 [01:42<01:42,  6.82s/it, loss=3.86, v_num=0, train/loss_step=3.710, train/acc_step=0.000, val/loss_step=7.280, val/acc_step=0.000, val/haversine_distance_step=1.610, val/loss_epoch=4.76e+4, val/acc_epoch=0.000, val/haversine_distance_epoch=1.780, train/loss_epoch=3.880, train/acc_epoch=0.0333]Epoch 5:  50%|#####     | 15/30 [01:42<01:42,  6.82s/it, loss=3.81, v_num=0, train/loss_step=2.940, train/acc_step=0.500, val/loss_step=7.280, val/acc_step=0.000, val/haversine_distance_step=1.610, val/loss_epoch=4.76e+4, val/acc_epoch=0.000, val/haversine_distance_epoch=1.780, train/loss_epoch=3.880, train/acc_epoch=0.0333]
Validation: 0it [00:00, ?it/s][A/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py:91: PossibleUserWarning: `max_epochs` was not set. Setting it to 1000 epochs. To train without an epoch limit, set `max_epochs=-1`.
  rank_zero_warn(
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs

Validation DataLoader 0:   0%|          | 0/15 [00:02<?, ?it/s][A/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/utilities/parsing.py:107: UserWarning: attribute 'data_module' removed from hparams because it cannot be pickled
  rank_zero_warn(f"attribute '{k}' removed from hparams because it cannot be pickled")
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/torch/cuda/__init__.py:122: UserWarning: 
    Found GPU1 NVIDIA GeForce GTX TITAN Black which is of cuda capability 3.5.
    PyTorch no longer supports this GPU because it is too old.
    The minimum cuda capability supported by this library is 3.7.
    
  warnings.warn(old_gpu_warn % (d, name, major, minor, min_arch // 10, min_arch % 10))
Train, val and test size 26417 3302 3303

Validation DataLoader 0: 100%|##########| 15/15 [00:05<00:00,  2.85it/s][AEpoch 5: 100%|##########| 30/30 [01:48<00:00,  3.60s/it, loss=3.81, v_num=0, train/loss_step=2.940, train/acc_step=0.500, val/loss_step=7.280, val/acc_step=0.000, val/haversine_distance_step=1.610, val/loss_epoch=4.76e+4, val/acc_epoch=0.000, val/haversine_distance_epoch=1.780, train/loss_epoch=3.880, train/acc_epoch=0.0333]Epoch 5: 100%|##########| 30/30 [01:48<00:00,  3.60s/it, loss=3.81, v_num=0, train/loss_step=2.940, train/acc_step=0.500, val/loss_step=2.890, val/acc_step=0.500, val/haversine_distance_step=1.350, val/loss_epoch=2.13e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.790, train/loss_epoch=3.880, train/acc_epoch=0.0333]
                                                                        [AEpoch 5: 100%|##########| 30/30 [01:48<00:00,  3.61s/it, loss=3.81, v_num=0, train/loss_step=2.940, train/acc_step=0.500, val/loss_step=2.890, val/acc_step=0.500, val/haversine_distance_step=1.350, val/loss_epoch=2.13e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.790, train/loss_epoch=3.800, train/acc_epoch=0.0667]Epoch 6: 100%|##########| 30/30 [01:48<00:00,  3.61s/it, loss=3.81, v_num=0, train/loss_step=2.940, train/acc_step=0.500, val/loss_step=2.890, val/acc_step=0.500, val/haversine_distance_step=1.350, val/loss_epoch=2.13e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.790, train/loss_epoch=3.800, train/acc_epoch=0.0667]LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name     | Type   | Params | In sizes         | Out sizes
-------------------------------------------------------------------
0 | backbone | ResNet | 86.7 M | [8, 3, 112, 112] | [8, 2048]
1 | fc       | Linear | 434 K  | [8, 8192]        | [8, 53]  
-------------------------------------------------------------------
637 K     Trainable params
86.5 M    Non-trainable params
87.2 M    Total params
348.706   Total estimated model params size (MB)
Epoch 6:  50%|#####     | 15/30 [02:02<02:02,  8.14s/it, loss=3.81, v_num=0, train/loss_step=2.940, train/acc_step=0.500, val/loss_step=2.890, val/acc_step=0.500, val/haversine_distance_step=1.350, val/loss_epoch=2.13e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.790, train/loss_epoch=3.800, train/acc_epoch=0.0667]Epoch 6:  50%|#####     | 15/30 [02:02<02:02,  8.14s/it, loss=3.79, v_num=0, train/loss_step=3.990, train/acc_step=0.000, val/loss_step=2.890, val/acc_step=0.500, val/haversine_distance_step=1.350, val/loss_epoch=2.13e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.790, train/loss_epoch=3.800, train/acc_epoch=0.0667]
Validation: 0it [00:00, ?it/s][A/home/fwolf/lumen-geoguesser/src/model.py:98: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).
  outs_backbone = [self.backbone(image) for image in image_list]

Validation DataLoader 0:   0%|          | 0/15 [00:02<?, ?it/s][A
Validation DataLoader 0: 100%|##########| 15/15 [00:05<00:00,  2.81it/s][AEpoch 6: 100%|##########| 30/30 [02:07<00:00,  4.26s/it, loss=3.79, v_num=0, train/loss_step=3.990, train/acc_step=0.000, val/loss_step=2.890, val/acc_step=0.500, val/haversine_distance_step=1.350, val/loss_epoch=2.13e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.790, train/loss_epoch=3.800, train/acc_epoch=0.0667]Epoch 6: 100%|##########| 30/30 [02:07<00:00,  4.26s/it, loss=3.79, v_num=0, train/loss_step=3.990, train/acc_step=0.000, val/loss_step=831.0, val/acc_step=0.000, val/haversine_distance_step=1.340, val/loss_epoch=2.67e+3, val/acc_epoch=0.000, val/haversine_distance_epoch=1.760, train/loss_epoch=3.800, train/acc_epoch=0.0667] 
                                                                        [AMetric val/loss improved by 725.127 >= min_delta = 0.0. New best score: 2665.116
Epoch 6: 100%|##########| 30/30 [02:07<00:00,  4.26s/it, loss=3.79, v_num=0, train/loss_step=3.990, train/acc_step=0.000, val/loss_step=831.0, val/acc_step=0.000, val/haversine_distance_step=1.340, val/loss_epoch=2.67e+3, val/acc_epoch=0.000, val/haversine_distance_epoch=1.760, train/loss_epoch=3.800, train/acc_epoch=0.0333]Epoch 7: 100%|##########| 30/30 [02:11<00:00,  4.38s/it, loss=3.79, v_num=0, train/loss_step=3.990, train/acc_step=0.000, val/loss_step=831.0, val/acc_step=0.000, val/haversine_distance_step=1.340, val/loss_epoch=2.67e+3, val/acc_epoch=0.000, val/haversine_distance_epoch=1.760, train/loss_epoch=3.800, train/acc_epoch=0.0333]Epoch 7:  50%|#####     | 15/30 [02:25<02:25,  9.70s/it, loss=3.79, v_num=0, train/loss_step=3.990, train/acc_step=0.000, val/loss_step=831.0, val/acc_step=0.000, val/haversine_distance_step=1.340, val/loss_epoch=2.67e+3, val/acc_epoch=0.000, val/haversine_distance_epoch=1.760, train/loss_epoch=3.800, train/acc_epoch=0.0333]Epoch 7:  50%|#####     | 15/30 [02:25<02:25,  9.70s/it, loss=3.75, v_num=0, train/loss_step=4.000, train/acc_step=0.000, val/loss_step=831.0, val/acc_step=0.000, val/haversine_distance_step=1.340, val/loss_epoch=2.67e+3, val/acc_epoch=0.000, val/haversine_distance_epoch=1.760, train/loss_epoch=3.800, train/acc_epoch=0.0333]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/15 [00:02<?, ?it/s][A
Validation DataLoader 0: 100%|##########| 15/15 [00:05<00:00,  2.89it/s][AEpoch 7: 100%|##########| 30/30 [02:31<00:00,  5.04s/it, loss=3.75, v_num=0, train/loss_step=4.000, train/acc_step=0.000, val/loss_step=831.0, val/acc_step=0.000, val/haversine_distance_step=1.340, val/loss_epoch=2.67e+3, val/acc_epoch=0.000, val/haversine_distance_epoch=1.760, train/loss_epoch=3.800, train/acc_epoch=0.0333]Epoch 7: 100%|##########| 30/30 [02:31<00:00,  5.04s/it, loss=3.75, v_num=0, train/loss_step=4.000, train/acc_step=0.000, val/loss_step=8.94e+4, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=1.56e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.830, train/loss_epoch=3.800, train/acc_epoch=0.0333]
                                                                        [AEpoch 7: 100%|##########| 30/30 [02:31<00:00,  5.04s/it, loss=3.75, v_num=0, train/loss_step=4.000, train/acc_step=0.000, val/loss_step=8.94e+4, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=1.56e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.830, train/loss_epoch=3.710, train/acc_epoch=0.000] Epoch 8: 100%|##########| 30/30 [02:31<00:00,  5.04s/it, loss=3.75, v_num=0, train/loss_step=4.000, train/acc_step=0.000, val/loss_step=8.94e+4, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=1.56e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.830, train/loss_epoch=3.710, train/acc_epoch=0.000]Epoch 8:  50%|#####     | 15/30 [02:45<02:45, 11.04s/it, loss=3.75, v_num=0, train/loss_step=4.000, train/acc_step=0.000, val/loss_step=8.94e+4, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=1.56e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.830, train/loss_epoch=3.710, train/acc_epoch=0.000]Epoch 8:  50%|#####     | 15/30 [02:45<02:45, 11.04s/it, loss=3.79, v_num=0, train/loss_step=4.380, train/acc_step=0.000, val/loss_step=8.94e+4, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=1.56e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.830, train/loss_epoch=3.710, train/acc_epoch=0.000]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/15 [00:02<?, ?it/s][A
Validation DataLoader 0: 100%|##########| 15/15 [00:05<00:00,  2.99it/s][AEpoch 8: 100%|##########| 30/30 [02:51<00:00,  5.70s/it, loss=3.79, v_num=0, train/loss_step=4.380, train/acc_step=0.000, val/loss_step=8.94e+4, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=1.56e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.830, train/loss_epoch=3.710, train/acc_epoch=0.000]Epoch 8: 100%|##########| 30/30 [02:51<00:00,  5.70s/it, loss=3.79, v_num=0, train/loss_step=4.380, train/acc_step=0.000, val/loss_step=372.0, val/acc_step=0.000, val/haversine_distance_step=1.350, val/loss_epoch=6.85e+3, val/acc_epoch=0.000, val/haversine_distance_epoch=1.810, train/loss_epoch=3.710, train/acc_epoch=0.000]   
                                                                        [AEpoch 8: 100%|##########| 30/30 [02:51<00:00,  5.70s/it, loss=3.79, v_num=0, train/loss_step=4.380, train/acc_step=0.000, val/loss_step=372.0, val/acc_step=0.000, val/haversine_distance_step=1.350, val/loss_epoch=6.85e+3, val/acc_epoch=0.000, val/haversine_distance_epoch=1.810, train/loss_epoch=3.800, train/acc_epoch=0.000]Epoch 9: 100%|##########| 30/30 [02:51<00:00,  5.70s/it, loss=3.79, v_num=0, train/loss_step=4.380, train/acc_step=0.000, val/loss_step=372.0, val/acc_step=0.000, val/haversine_distance_step=1.350, val/loss_epoch=6.85e+3, val/acc_epoch=0.000, val/haversine_distance_epoch=1.810, train/loss_epoch=3.800, train/acc_epoch=0.000]Epoch 9:  50%|#####     | 15/30 [03:05<03:05, 12.33s/it, loss=3.79, v_num=0, train/loss_step=4.380, train/acc_step=0.000, val/loss_step=372.0, val/acc_step=0.000, val/haversine_distance_step=1.350, val/loss_epoch=6.85e+3, val/acc_epoch=0.000, val/haversine_distance_epoch=1.810, train/loss_epoch=3.800, train/acc_epoch=0.000]Epoch 9:  50%|#####     | 15/30 [03:05<03:05, 12.33s/it, loss=3.8, v_num=0, train/loss_step=4.000, train/acc_step=0.000, val/loss_step=372.0, val/acc_step=0.000, val/haversine_distance_step=1.350, val/loss_epoch=6.85e+3, val/acc_epoch=0.000, val/haversine_distance_epoch=1.810, train/loss_epoch=3.800, train/acc_epoch=0.000] 
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/15 [00:02<?, ?it/s][A
Validation DataLoader 0: 100%|##########| 15/15 [00:05<00:00,  2.90it/s][AEpoch 9: 100%|##########| 30/30 [03:10<00:00,  6.36s/it, loss=3.8, v_num=0, train/loss_step=4.000, train/acc_step=0.000, val/loss_step=372.0, val/acc_step=0.000, val/haversine_distance_step=1.350, val/loss_epoch=6.85e+3, val/acc_epoch=0.000, val/haversine_distance_epoch=1.810, train/loss_epoch=3.800, train/acc_epoch=0.000]Epoch 9: 100%|##########| 30/30 [03:10<00:00,  6.36s/it, loss=3.8, v_num=0, train/loss_step=4.000, train/acc_step=0.000, val/loss_step=3.45e+4, val/acc_step=0.000, val/haversine_distance_step=2.230, val/loss_epoch=3.45e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.840, train/loss_epoch=3.800, train/acc_epoch=0.000]
                                                                        [AEpoch 9: 100%|##########| 30/30 [03:10<00:00,  6.36s/it, loss=3.8, v_num=0, train/loss_step=4.000, train/acc_step=0.000, val/loss_step=3.45e+4, val/acc_step=0.000, val/haversine_distance_step=2.230, val/loss_epoch=3.45e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.840, train/loss_epoch=3.690, train/acc_epoch=0.0667]Epoch 10: 100%|##########| 30/30 [03:10<00:00,  6.36s/it, loss=3.8, v_num=0, train/loss_step=4.000, train/acc_step=0.000, val/loss_step=3.45e+4, val/acc_step=0.000, val/haversine_distance_step=2.230, val/loss_epoch=3.45e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.840, train/loss_epoch=3.690, train/acc_epoch=0.0667]Epoch 10:  50%|#####     | 15/30 [03:24<03:24, 13.61s/it, loss=3.8, v_num=0, train/loss_step=4.000, train/acc_step=0.000, val/loss_step=3.45e+4, val/acc_step=0.000, val/haversine_distance_step=2.230, val/loss_epoch=3.45e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.840, train/loss_epoch=3.690, train/acc_epoch=0.0667]Epoch 10:  50%|#####     | 15/30 [03:24<03:24, 13.61s/it, loss=3.96, v_num=0, train/loss_step=4.090, train/acc_step=0.000, val/loss_step=3.45e+4, val/acc_step=0.000, val/haversine_distance_step=2.230, val/loss_epoch=3.45e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.840, train/loss_epoch=3.690, train/acc_epoch=0.0667]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/15 [00:01<?, ?it/s][A
Validation DataLoader 0: 100%|##########| 15/15 [00:05<00:00,  2.89it/s][AEpoch 10: 100%|##########| 30/30 [03:29<00:00,  6.99s/it, loss=3.96, v_num=0, train/loss_step=4.090, train/acc_step=0.000, val/loss_step=3.45e+4, val/acc_step=0.000, val/haversine_distance_step=2.230, val/loss_epoch=3.45e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.840, train/loss_epoch=3.690, train/acc_epoch=0.0667]Epoch 10: 100%|##########| 30/30 [03:29<00:00,  6.99s/it, loss=3.96, v_num=0, train/loss_step=4.090, train/acc_step=0.000, val/loss_step=61.00, val/acc_step=0.000, val/haversine_distance_step=2.310, val/loss_epoch=1.2e+4, val/acc_epoch=0.000, val/haversine_distance_epoch=2.020, train/loss_epoch=3.690, train/acc_epoch=0.0667]    
                                                                        [AEpoch 10: 100%|##########| 30/30 [03:29<00:00,  7.00s/it, loss=3.96, v_num=0, train/loss_step=4.090, train/acc_step=0.000, val/loss_step=61.00, val/acc_step=0.000, val/haversine_distance_step=2.310, val/loss_epoch=1.2e+4, val/acc_epoch=0.000, val/haversine_distance_epoch=2.020, train/loss_epoch=3.950, train/acc_epoch=0.0333]Epoch 11: 100%|##########| 30/30 [03:29<00:00,  7.00s/it, loss=3.96, v_num=0, train/loss_step=4.090, train/acc_step=0.000, val/loss_step=61.00, val/acc_step=0.000, val/haversine_distance_step=2.310, val/loss_epoch=1.2e+4, val/acc_epoch=0.000, val/haversine_distance_epoch=2.020, train/loss_epoch=3.950, train/acc_epoch=0.0333]Epoch 11:  50%|#####     | 15/30 [03:44<03:44, 14.94s/it, loss=3.96, v_num=0, train/loss_step=4.090, train/acc_step=0.000, val/loss_step=61.00, val/acc_step=0.000, val/haversine_distance_step=2.310, val/loss_epoch=1.2e+4, val/acc_epoch=0.000, val/haversine_distance_epoch=2.020, train/loss_epoch=3.950, train/acc_epoch=0.0333]Epoch 11:  50%|#####     | 15/30 [03:44<03:44, 14.94s/it, loss=3.78, v_num=0, train/loss_step=3.860, train/acc_step=0.000, val/loss_step=61.00, val/acc_step=0.000, val/haversine_distance_step=2.310, val/loss_epoch=1.2e+4, val/acc_epoch=0.000, val/haversine_distance_epoch=2.020, train/loss_epoch=3.950, train/acc_epoch=0.0333]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/15 [00:02<?, ?it/s][A
Validation DataLoader 0: 100%|##########| 15/15 [00:05<00:00,  2.84it/s][AEpoch 11: 100%|##########| 30/30 [03:49<00:00,  7.66s/it, loss=3.78, v_num=0, train/loss_step=3.860, train/acc_step=0.000, val/loss_step=61.00, val/acc_step=0.000, val/haversine_distance_step=2.310, val/loss_epoch=1.2e+4, val/acc_epoch=0.000, val/haversine_distance_epoch=2.020, train/loss_epoch=3.950, train/acc_epoch=0.0333]Epoch 11: 100%|##########| 30/30 [03:49<00:00,  7.66s/it, loss=3.78, v_num=0, train/loss_step=3.860, train/acc_step=0.000, val/loss_step=2.98e+4, val/acc_step=0.000, val/haversine_distance_step=2.360, val/loss_epoch=5.41e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.900, train/loss_epoch=3.950, train/acc_epoch=0.0333]
                                                                        [AEpoch 11: 100%|##########| 30/30 [03:49<00:00,  7.67s/it, loss=3.78, v_num=0, train/loss_step=3.860, train/acc_step=0.000, val/loss_step=2.98e+4, val/acc_step=0.000, val/haversine_distance_step=2.360, val/loss_epoch=5.41e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.900, train/loss_epoch=3.760, train/acc_epoch=0.0667]Epoch 12: 100%|##########| 30/30 [03:49<00:00,  7.67s/it, loss=3.78, v_num=0, train/loss_step=3.860, train/acc_step=0.000, val/loss_step=2.98e+4, val/acc_step=0.000, val/haversine_distance_step=2.360, val/loss_epoch=5.41e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.900, train/loss_epoch=3.760, train/acc_epoch=0.0667]Epoch 12:  50%|#####     | 15/30 [04:04<04:04, 16.30s/it, loss=3.78, v_num=0, train/loss_step=3.860, train/acc_step=0.000, val/loss_step=2.98e+4, val/acc_step=0.000, val/haversine_distance_step=2.360, val/loss_epoch=5.41e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.900, train/loss_epoch=3.760, train/acc_epoch=0.0667]Epoch 12:  50%|#####     | 15/30 [04:04<04:04, 16.30s/it, loss=3.67, v_num=0, train/loss_step=3.400, train/acc_step=0.000, val/loss_step=2.98e+4, val/acc_step=0.000, val/haversine_distance_step=2.360, val/loss_epoch=5.41e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.900, train/loss_epoch=3.760, train/acc_epoch=0.0667]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/15 [00:02<?, ?it/s][A
Validation DataLoader 0: 100%|##########| 15/15 [00:04<00:00,  3.16it/s][AEpoch 12: 100%|##########| 30/30 [04:09<00:00,  8.33s/it, loss=3.67, v_num=0, train/loss_step=3.400, train/acc_step=0.000, val/loss_step=2.98e+4, val/acc_step=0.000, val/haversine_distance_step=2.360, val/loss_epoch=5.41e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.900, train/loss_epoch=3.760, train/acc_epoch=0.0667]Epoch 12: 100%|##########| 30/30 [04:09<00:00,  8.33s/it, loss=3.67, v_num=0, train/loss_step=3.400, train/acc_step=0.000, val/loss_step=5.83e+4, val/acc_step=0.000, val/haversine_distance_step=1.220, val/loss_epoch=1.52e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.460, train/loss_epoch=3.760, train/acc_epoch=0.0667]
                                                                        [AEpoch 12: 100%|##########| 30/30 [04:09<00:00,  8.33s/it, loss=3.67, v_num=0, train/loss_step=3.400, train/acc_step=0.000, val/loss_step=5.83e+4, val/acc_step=0.000, val/haversine_distance_step=1.220, val/loss_epoch=1.52e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.460, train/loss_epoch=3.640, train/acc_epoch=0.0333]Epoch 13: 100%|##########| 30/30 [04:13<00:00,  8.44s/it, loss=3.67, v_num=0, train/loss_step=3.400, train/acc_step=0.000, val/loss_step=5.83e+4, val/acc_step=0.000, val/haversine_distance_step=1.220, val/loss_epoch=1.52e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.460, train/loss_epoch=3.640, train/acc_epoch=0.0333]Epoch 13:  50%|#####     | 15/30 [04:26<04:26, 17.79s/it, loss=3.67, v_num=0, train/loss_step=3.400, train/acc_step=0.000, val/loss_step=5.83e+4, val/acc_step=0.000, val/haversine_distance_step=1.220, val/loss_epoch=1.52e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.460, train/loss_epoch=3.640, train/acc_epoch=0.0333]Epoch 13:  50%|#####     | 15/30 [04:26<04:26, 17.79s/it, loss=3.78, v_num=0, train/loss_step=3.970, train/acc_step=0.000, val/loss_step=5.83e+4, val/acc_step=0.000, val/haversine_distance_step=1.220, val/loss_epoch=1.52e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.460, train/loss_epoch=3.640, train/acc_epoch=0.0333]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/15 [00:02<?, ?it/s][A
Validation DataLoader 0: 100%|##########| 15/15 [00:04<00:00,  3.15it/s][AEpoch 13: 100%|##########| 30/30 [04:32<00:00,  9.07s/it, loss=3.78, v_num=0, train/loss_step=3.970, train/acc_step=0.000, val/loss_step=5.83e+4, val/acc_step=0.000, val/haversine_distance_step=1.220, val/loss_epoch=1.52e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.460, train/loss_epoch=3.640, train/acc_epoch=0.0333]Epoch 13: 100%|##########| 30/30 [04:32<00:00,  9.07s/it, loss=3.78, v_num=0, train/loss_step=3.970, train/acc_step=0.000, val/loss_step=1.82e+4, val/acc_step=0.000, val/haversine_distance_step=1.080, val/loss_epoch=1.89e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.750, train/loss_epoch=3.640, train/acc_epoch=0.0333]
                                                                        [AEpoch 13: 100%|##########| 30/30 [04:32<00:00,  9.07s/it, loss=3.78, v_num=0, train/loss_step=3.970, train/acc_step=0.000, val/loss_step=1.82e+4, val/acc_step=0.000, val/haversine_distance_step=1.080, val/loss_epoch=1.89e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.750, train/loss_epoch=3.870, train/acc_epoch=0.0333]Epoch 14: 100%|##########| 30/30 [04:32<00:00,  9.07s/it, loss=3.78, v_num=0, train/loss_step=3.970, train/acc_step=0.000, val/loss_step=1.82e+4, val/acc_step=0.000, val/haversine_distance_step=1.080, val/loss_epoch=1.89e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.750, train/loss_epoch=3.870, train/acc_epoch=0.0333]Epoch 14:  50%|#####     | 15/30 [04:46<04:46, 19.07s/it, loss=3.78, v_num=0, train/loss_step=3.970, train/acc_step=0.000, val/loss_step=1.82e+4, val/acc_step=0.000, val/haversine_distance_step=1.080, val/loss_epoch=1.89e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.750, train/loss_epoch=3.870, train/acc_epoch=0.0333]Epoch 14:  50%|#####     | 15/30 [04:46<04:46, 19.07s/it, loss=3.85, v_num=0, train/loss_step=3.480, train/acc_step=0.500, val/loss_step=1.82e+4, val/acc_step=0.000, val/haversine_distance_step=1.080, val/loss_epoch=1.89e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.750, train/loss_epoch=3.870, train/acc_epoch=0.0333]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/15 [00:02<?, ?it/s][ASanity Checking: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:486: PossibleUserWarning: Your `val_dataloader`'s sampler has shuffling enabled, it is strongly recommended that you turn shuffling off for val/test/predict dataloaders.
  rank_zero_warn(

Validation DataLoader 0: 100%|##########| 15/15 [00:04<00:00,  3.04it/s][AEpoch 14: 100%|##########| 30/30 [04:51<00:00,  9.71s/it, loss=3.85, v_num=0, train/loss_step=3.480, train/acc_step=0.500, val/loss_step=1.82e+4, val/acc_step=0.000, val/haversine_distance_step=1.080, val/loss_epoch=1.89e+4, val/acc_epoch=0.0333, val/haversine_distance_epoch=1.750, train/loss_epoch=3.870, train/acc_epoch=0.0333]Epoch 14: 100%|##########| 30/30 [04:51<00:00,  9.72s/it, loss=3.85, v_num=0, train/loss_step=3.480, train/acc_step=0.500, val/loss_step=2.4e+3, val/acc_step=0.000, val/haversine_distance_step=1.570, val/loss_epoch=1.02e+5, val/acc_epoch=0.000, val/haversine_distance_epoch=1.990, train/loss_epoch=3.870, train/acc_epoch=0.0333]  
                                                                        [AEpoch 14: 100%|##########| 30/30 [04:51<00:00,  9.72s/it, loss=3.85, v_num=0, train/loss_step=3.480, train/acc_step=0.500, val/loss_step=2.4e+3, val/acc_step=0.000, val/haversine_distance_step=1.570, val/loss_epoch=1.02e+5, val/acc_epoch=0.000, val/haversine_distance_epoch=1.990, train/loss_epoch=3.830, train/acc_epoch=0.100] Epoch 15: 100%|##########| 30/30 [04:51<00:00,  9.72s/it, loss=3.85, v_num=0, train/loss_step=3.480, train/acc_step=0.500, val/loss_step=2.4e+3, val/acc_step=0.000, val/haversine_distance_step=1.570, val/loss_epoch=1.02e+5, val/acc_epoch=0.000, val/haversine_distance_epoch=1.990, train/loss_epoch=3.830, train/acc_epoch=0.100]Sanity Checking DataLoader 0:   0%|          | 0/2 [00:02<?, ?it/s]/home/fwolf/lumen-geoguesser/src/utils_model.py:55: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  preds, indices = torch.topk(F.softmax(y_pred), k = top_k)
Sanity Checking DataLoader 0: 100%|##########| 2/2 [00:03<00:00,  1.67s/it]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `validation_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
                                                                           Training: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:   0%|          | 0/3714 [00:00<?, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_epoch_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 15:  50%|#####     | 15/30 [05:08<05:08, 20.59s/it, loss=3.85, v_num=0, train/loss_step=3.480, train/acc_step=0.500, val/loss_step=2.4e+3, val/acc_step=0.000, val/haversine_distance_step=1.570, val/loss_epoch=1.02e+5, val/acc_epoch=0.000, val/haversine_distance_epoch=1.990, train/loss_epoch=3.830, train/acc_epoch=0.100]Epoch 15:  50%|#####     | 15/30 [05:08<05:08, 20.59s/it, loss=3.72, v_num=0, train/loss_step=4.640, train/acc_step=0.000, val/loss_step=2.4e+3, val/acc_step=0.000, val/haversine_distance_step=1.570, val/loss_epoch=1.02e+5, val/acc_epoch=0.000, val/haversine_distance_epoch=1.990, train/loss_epoch=3.830, train/acc_epoch=0.100]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/15 [00:02<?, ?it/s][A
Validation DataLoader 0: 100%|##########| 15/15 [00:05<00:00,  2.87it/s][AEpoch 15: 100%|##########| 30/30 [05:14<00:00, 10.49s/it, loss=3.72, v_num=0, train/loss_step=4.640, train/acc_step=0.000, val/loss_step=2.4e+3, val/acc_step=0.000, val/haversine_distance_step=1.570, val/loss_epoch=1.02e+5, val/acc_epoch=0.000, val/haversine_distance_epoch=1.990, train/loss_epoch=3.830, train/acc_epoch=0.100]Epoch 15: 100%|##########| 30/30 [05:14<00:00, 10.49s/it, loss=3.72, v_num=0, train/loss_step=4.640, train/acc_step=0.000, val/loss_step=6.91e+3, val/acc_step=0.000, val/haversine_distance_step=1.910, val/loss_epoch=1.73e+4, val/acc_epoch=0.133, val/haversine_distance_epoch=1.810, train/loss_epoch=3.830, train/acc_epoch=0.100]
                                                                        [AEpoch 15: 100%|##########| 30/30 [05:14<00:00, 10.49s/it, loss=3.72, v_num=0, train/loss_step=4.640, train/acc_step=0.000, val/loss_step=6.91e+3, val/acc_step=0.000, val/haversine_distance_step=1.910, val/loss_epoch=1.73e+4, val/acc_epoch=0.133, val/haversine_distance_epoch=1.810, train/loss_epoch=3.650, train/acc_epoch=0.0667]Epoch 16: 100%|##########| 30/30 [05:14<00:00, 10.49s/it, loss=3.72, v_num=0, train/loss_step=4.640, train/acc_step=0.000, val/loss_step=6.91e+3, val/acc_step=0.000, val/haversine_distance_step=1.910, val/loss_epoch=1.73e+4, val/acc_epoch=0.133, val/haversine_distance_epoch=1.810, train/loss_epoch=3.650, train/acc_epoch=0.0667]Epoch 16:  50%|#####     | 15/30 [05:30<05:30, 22.01s/it, loss=3.72, v_num=0, train/loss_step=4.640, train/acc_step=0.000, val/loss_step=6.91e+3, val/acc_step=0.000, val/haversine_distance_step=1.910, val/loss_epoch=1.73e+4, val/acc_epoch=0.133, val/haversine_distance_epoch=1.810, train/loss_epoch=3.650, train/acc_epoch=0.0667]Epoch 16:  50%|#####     | 15/30 [05:30<05:30, 22.01s/it, loss=3.96, v_num=0, train/loss_step=3.630, train/acc_step=0.000, val/loss_step=6.91e+3, val/acc_step=0.000, val/haversine_distance_step=1.910, val/loss_epoch=1.73e+4, val/acc_epoch=0.133, val/haversine_distance_epoch=1.810, train/loss_epoch=3.650, train/acc_epoch=0.0667]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/15 [00:02<?, ?it/s][A
Validation DataLoader 0: 100%|##########| 15/15 [00:05<00:00,  2.88it/s][AEpoch 16: 100%|##########| 30/30 [05:35<00:00, 11.19s/it, loss=3.96, v_num=0, train/loss_step=3.630, train/acc_step=0.000, val/loss_step=6.91e+3, val/acc_step=0.000, val/haversine_distance_step=1.910, val/loss_epoch=1.73e+4, val/acc_epoch=0.133, val/haversine_distance_epoch=1.810, train/loss_epoch=3.650, train/acc_epoch=0.0667]Epoch 16: 100%|##########| 30/30 [05:35<00:00, 11.19s/it, loss=3.96, v_num=0, train/loss_step=3.630, train/acc_step=0.000, val/loss_step=7.87e+4, val/acc_step=0.000, val/haversine_distance_step=2.040, val/loss_epoch=6.76e+4, val/acc_epoch=0.100, val/haversine_distance_epoch=2.100, train/loss_epoch=3.650, train/acc_epoch=0.0667]
                                                                        [AEpoch 16: 100%|##########| 30/30 [05:35<00:00, 11.19s/it, loss=3.96, v_num=0, train/loss_step=3.630, train/acc_step=0.000, val/loss_step=7.87e+4, val/acc_step=0.000, val/haversine_distance_step=2.040, val/loss_epoch=6.76e+4, val/acc_epoch=0.100, val/haversine_distance_epoch=2.100, train/loss_epoch=4.030, train/acc_epoch=0.000] Epoch 17: 100%|##########| 30/30 [05:35<00:00, 11.20s/it, loss=3.96, v_num=0, train/loss_step=3.630, train/acc_step=0.000, val/loss_step=7.87e+4, val/acc_step=0.000, val/haversine_distance_step=2.040, val/loss_epoch=6.76e+4, val/acc_epoch=0.100, val/haversine_distance_epoch=2.100, train/loss_epoch=4.030, train/acc_epoch=0.000]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py:727: UserWarning: Detected KeyboardInterrupt, attempting graceful shutdown...
  rank_zero_warn("Detected KeyboardInterrupt, attempting graceful shutdown...")
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py:727: UserWarning: Detected KeyboardInterrupt, attempting graceful shutdown...
  rank_zero_warn("Detected KeyboardInterrupt, attempting graceful shutdown...")
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]
Standard output piped to file:
/home/fwolf/lumen-geoguesser/reports/train-resnext101_32x8d-22-04-21-14-01-21.txt
[{'batch_size': 8,
  'cached_df': 'data/complete/data__spacing_0.5__num_class_55.csv',
  'dataset_dirs': ['data/external/', 'data/raw/'],
  'dataset_frac': 1,
  'image_size': 112,
  'load_in_ram': False,
  'lr': 1e-05,
  'models': ['resnext101_32x8d'],
  'num_workers': 32,
  'output_report': PosixPath('/home/fwolf/lumen-geoguesser/reports'),
  'pretrained': True,
  'quick': False,
  'shuffle_before_splitting': False,
  'split_ratios': [0.8, 0.1, 0.1],
  'trainer_checkpoint': None,
  'unfreeze_backbone_at_epoch': 5,
  'unfreeze_blocks': 'all',
  'use_single_images': False,
  'weight_decay': 0},
 {'accelerator': 'gpu',
  'accumulate_grad_batches': None,
  'amp_backend': 'native',
  'amp_level': None,
  'auto_lr_find': False,
  'auto_scale_batch_size': False,
  'auto_select_gpus': False,
  'benchmark': None,
  'check_val_every_n_epoch': 1,
  'checkpoint_callback': None,
  'default_root_dir': None,
  'detect_anomaly': False,
  'deterministic': False,
  'devices': '1',
  'enable_checkpointing': True,
  'enable_model_summary': True,
  'enable_progress_bar': True,
  'fast_dev_run': False,
  'flush_logs_every_n_steps': None,
  'gpus': None,
  'gradient_clip_algorithm': None,
  'gradient_clip_val': None,
  'ipus': None,
  'limit_predict_batches': None,
  'limit_test_batches': None,
  'limit_train_batches': None,
  'limit_val_batches': None,
  'log_every_n_steps': 20,
  'log_gpu_memory': None,
  'logger': True,
  'max_epochs': None,
  'max_steps': -1,
  'max_time': None,
  'min_epochs': None,
  'min_steps': None,
  'move_metrics_to_cpu': False,
  'multiple_trainloader_mode': 'max_size_cycle',
  'num_nodes': 1,
  'num_processes': None,
  'num_sanity_val_steps': 2,
  'overfit_batches': 0.0,
  'plugins': None,
  'precision': 32,
  'prepare_data_per_node': None,
  'process_position': 0,
  'profiler': None,
  'progress_bar_refresh_rate': None,
  'reload_dataloaders_every_n_epochs': 0,
  'replace_sampler_ddp': True,
  'resume_from_checkpoint': None,
  'stochastic_weight_avg': False,
  'strategy': None,
  'sync_batchnorm': False,
  'terminate_on_nan': None,
  'tpu_cores': None,
  'track_grad_norm': -1,
  'val_check_interval': None,
  'weights_save_path': None,
  'weights_summary': 'top'}]
GeoguesserDataModule init
GeoguesserDataset init
GeoguesserDataset init
GeoguesserDataset init
Train, val and test size 26417 3302 3303
Using cache found in /home/fwolf/.cache/torch/hub/pytorch_vision_v0.12.0
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py:91: PossibleUserWarning: `max_epochs` was not set. Setting it to 1000 epochs. To train without an epoch limit, set `max_epochs=-1`.
  rank_zero_warn(
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/utilities/parsing.py:107: UserWarning: attribute 'data_module' removed from hparams because it cannot be pickled
  rank_zero_warn(f"attribute '{k}' removed from hparams because it cannot be pickled")
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/torch/cuda/__init__.py:122: UserWarning: 
    Found GPU1 NVIDIA GeForce GTX TITAN Black which is of cuda capability 3.5.
    PyTorch no longer supports this GPU because it is too old.
    The minimum cuda capability supported by this library is 3.7.
    
  warnings.warn(old_gpu_warn % (d, name, major, minor, min_arch // 10, min_arch % 10))
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name     | Type   | Params | In sizes         | Out sizes
-------------------------------------------------------------------
0 | backbone | ResNet | 86.7 M | [8, 3, 112, 112] | [8, 2048]
1 | fc       | Linear | 434 K  | [8, 8192]        | [8, 53]  
-------------------------------------------------------------------
637 K     Trainable params
86.5 M    Non-trainable params
87.2 M    Total params
348.706   Total estimated model params size (MB)
/home/fwolf/lumen-geoguesser/src/model.py:98: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).
  outs_backbone = [self.backbone(image) for image in image_list]
Sanity Checking: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:486: PossibleUserWarning: Your `val_dataloader`'s sampler has shuffling enabled, it is strongly recommended that you turn shuffling off for val/test/predict dataloaders.
  rank_zero_warn(
Sanity Checking DataLoader 0:   0%|          | 0/2 [00:02<?, ?it/s]/home/fwolf/lumen-geoguesser/src/utils_model.py:55: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  preds, indices = torch.topk(F.softmax(y_pred), k = top_k)
Sanity Checking DataLoader 0: 100%|##########| 2/2 [00:03<00:00,  1.76s/it]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `validation_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
                                                                           Training: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:   0%|          | 0/3714 [00:00<?, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_epoch_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:   4%|4         | 165/3714 [01:31<32:46,  1.80it/s]Epoch 0:   4%|4         | 165/3714 [01:31<32:46,  1.80it/s, loss=3.7, v_num=0, train/loss_step=3.590, train/acc_step=0.000]Epoch 0:   9%|8         | 330/3714 [02:58<30:28,  1.85it/s, loss=3.7, v_num=0, train/loss_step=3.590, train/acc_step=0.000]Epoch 0:   9%|8         | 330/3714 [02:58<30:28,  1.85it/s, loss=3.6, v_num=0, train/loss_step=3.530, train/acc_step=0.125]Epoch 0:  13%|#3        | 495/3714 [04:24<28:38,  1.87it/s, loss=3.6, v_num=0, train/loss_step=3.530, train/acc_step=0.125]Epoch 0:  13%|#3        | 495/3714 [04:24<28:38,  1.87it/s, loss=3.7, v_num=0, train/loss_step=3.780, train/acc_step=0.000]Epoch 0:  18%|#7        | 660/3714 [05:51<27:05,  1.88it/s, loss=3.7, v_num=0, train/loss_step=3.780, train/acc_step=0.000]Epoch 0:  18%|#7        | 660/3714 [05:51<27:05,  1.88it/s, loss=3.67, v_num=0, train/loss_step=3.800, train/acc_step=0.000]Epoch 0:  22%|##2       | 825/3714 [07:17<25:32,  1.89it/s, loss=3.67, v_num=0, train/loss_step=3.800, train/acc_step=0.000]Epoch 0:  22%|##2       | 825/3714 [07:17<25:32,  1.89it/s, loss=3.56, v_num=0, train/loss_step=3.480, train/acc_step=0.250]Epoch 0:  27%|##6       | 990/3714 [08:43<23:59,  1.89it/s, loss=3.56, v_num=0, train/loss_step=3.480, train/acc_step=0.250]Epoch 0:  27%|##6       | 990/3714 [08:43<23:59,  1.89it/s, loss=3.63, v_num=0, train/loss_step=3.490, train/acc_step=0.250]Epoch 0:  31%|###1      | 1155/3714 [10:08<22:28,  1.90it/s, loss=3.63, v_num=0, train/loss_step=3.490, train/acc_step=0.250]Epoch 0:  31%|###1      | 1155/3714 [10:08<22:28,  1.90it/s, loss=3.65, v_num=0, train/loss_step=3.400, train/acc_step=0.000]Epoch 0:  36%|###5      | 1320/3714 [11:36<21:02,  1.90it/s, loss=3.65, v_num=0, train/loss_step=3.400, train/acc_step=0.000]Epoch 0:  36%|###5      | 1320/3714 [11:36<21:02,  1.90it/s, loss=3.67, v_num=0, train/loss_step=3.660, train/acc_step=0.000]Epoch 0:  40%|###9      | 1485/3714 [13:02<19:35,  1.90it/s, loss=3.67, v_num=0, train/loss_step=3.660, train/acc_step=0.000]Epoch 0:  40%|###9      | 1485/3714 [13:02<19:35,  1.90it/s, loss=3.62, v_num=0, train/loss_step=3.940, train/acc_step=0.000]Epoch 0:  44%|####4     | 1650/3714 [14:29<18:07,  1.90it/s, loss=3.62, v_num=0, train/loss_step=3.940, train/acc_step=0.000]Epoch 0:  44%|####4     | 1650/3714 [14:29<18:07,  1.90it/s, loss=3.51, v_num=0, train/loss_step=3.290, train/acc_step=0.000]Epoch 0:  49%|####8     | 1815/3714 [15:53<16:37,  1.90it/s, loss=3.51, v_num=0, train/loss_step=3.290, train/acc_step=0.000]Epoch 0:  49%|####8     | 1815/3714 [15:53<16:37,  1.90it/s, loss=3.62, v_num=0, train/loss_step=3.900, train/acc_step=0.000]Epoch 0:  53%|#####3    | 1980/3714 [17:21<15:11,  1.90it/s, loss=3.62, v_num=0, train/loss_step=3.900, train/acc_step=0.000]Epoch 0:  53%|#####3    | 1980/3714 [17:21<15:11,  1.90it/s, loss=3.53, v_num=0, train/loss_step=3.690, train/acc_step=0.125]Epoch 0:  58%|#####7    | 2145/3714 [18:49<13:46,  1.90it/s, loss=3.53, v_num=0, train/loss_step=3.690, train/acc_step=0.125]Epoch 0:  58%|#####7    | 2145/3714 [18:49<13:46,  1.90it/s, loss=3.54, v_num=0, train/loss_step=3.450, train/acc_step=0.250]Epoch 0:  62%|######2   | 2310/3714 [20:15<12:18,  1.90it/s, loss=3.54, v_num=0, train/loss_step=3.450, train/acc_step=0.250]Epoch 0:  62%|######2   | 2310/3714 [20:15<12:18,  1.90it/s, loss=3.47, v_num=0, train/loss_step=3.090, train/acc_step=0.125]Epoch 0:  67%|######6   | 2475/3714 [21:44<10:53,  1.90it/s, loss=3.47, v_num=0, train/loss_step=3.090, train/acc_step=0.125]Epoch 0:  67%|######6   | 2475/3714 [21:44<10:53,  1.90it/s, loss=3.57, v_num=0, train/loss_step=3.430, train/acc_step=0.000]Epoch 0:  71%|#######1  | 2640/3714 [23:11<09:26,  1.90it/s, loss=3.57, v_num=0, train/loss_step=3.430, train/acc_step=0.000]Epoch 0:  71%|#######1  | 2640/3714 [23:11<09:26,  1.90it/s, loss=3.49, v_num=0, train/loss_step=4.010, train/acc_step=0.000]Epoch 0:  76%|#######5  | 2805/3714 [24:37<07:58,  1.90it/s, loss=3.49, v_num=0, train/loss_step=4.010, train/acc_step=0.000]Epoch 0:  76%|#######5  | 2805/3714 [24:37<07:58,  1.90it/s, loss=3.57, v_num=0, train/loss_step=3.360, train/acc_step=0.000]Epoch 0:  80%|#######9  | 2970/3714 [26:04<06:31,  1.90it/s, loss=3.57, v_num=0, train/loss_step=3.360, train/acc_step=0.000]Epoch 0:  80%|#######9  | 2970/3714 [26:04<06:31,  1.90it/s, loss=3.49, v_num=0, train/loss_step=3.320, train/acc_step=0.125]Epoch 0:  84%|########4 | 3135/3714 [27:31<05:05,  1.90it/s, loss=3.49, v_num=0, train/loss_step=3.320, train/acc_step=0.125]Epoch 0:  84%|########4 | 3135/3714 [27:31<05:05,  1.90it/s, loss=3.51, v_num=0, train/loss_step=3.260, train/acc_step=0.125]Epoch 0:  89%|########8 | 3300/3714 [28:59<03:38,  1.90it/s, loss=3.51, v_num=0, train/loss_step=3.260, train/acc_step=0.125]Epoch 0:  89%|########8 | 3300/3714 [28:59<03:38,  1.90it/s, loss=3.39, v_num=0, train/loss_step=3.510, train/acc_step=0.000]Epoch 0:  89%|########8 | 3302/3714 [29:00<03:37,  1.90it/s, loss=3.39, v_num=0, train/loss_step=3.510, train/acc_step=0.000]Epoch 0:  89%|########8 | 3302/3714 [29:00<03:37,  1.90it/s, loss=3.39, v_num=0, train/loss_step=3.600, train/acc_step=0.125]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:04<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:31<00:47,  5.20it/s][AEpoch 0:  93%|#########3| 3467/3714 [29:33<02:06,  1.96it/s, loss=3.39, v_num=0, train/loss_step=3.600, train/acc_step=0.125]
Validation DataLoader 0:  80%|########  | 330/412 [00:58<00:14,  5.63it/s][AEpoch 0:  98%|#########7| 3632/3714 [30:00<00:40,  2.02it/s, loss=3.39, v_num=0, train/loss_step=3.600, train/acc_step=0.125]
Validation DataLoader 0: 100%|##########| 412/412 [01:11<00:00,  5.74it/s][AEpoch 0: 100%|##########| 3714/3714 [30:13<00:00,  2.05it/s, loss=3.39, v_num=0, train/loss_step=3.600, train/acc_step=0.125]Epoch 0: 100%|##########| 3714/3714 [30:13<00:00,  2.05it/s, loss=3.39, v_num=0, train/loss_step=3.600, train/acc_step=0.125, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960]
                                                                          [A/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `training_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Metric val/loss improved. New best score: 3.469
Epoch 0: 100%|##########| 3714/3714 [30:23<00:00,  2.04it/s, loss=3.39, v_num=0, train/loss_step=3.600, train/acc_step=0.125, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1: 100%|##########| 3714/3714 [30:25<00:00,  2.04it/s, loss=3.39, v_num=0, train/loss_step=3.600, train/acc_step=0.125, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:   4%|4         | 165/3714 [31:59<11:28:03, 11.63s/it, loss=3.39, v_num=0, train/loss_step=3.600, train/acc_step=0.125, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:   4%|4         | 165/3714 [31:59<11:28:03, 11.63s/it, loss=3.38, v_num=0, train/loss_step=3.620, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:   9%|8         | 330/3714 [33:30<5:43:32,  6.09s/it, loss=3.38, v_num=0, train/loss_step=3.620, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622] Epoch 1:   9%|8         | 330/3714 [33:30<5:43:32,  6.09s/it, loss=3.5, v_num=0, train/loss_step=3.540, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622] Epoch 1:  13%|#3        | 495/3714 [35:01<3:47:44,  4.25s/it, loss=3.5, v_num=0, train/loss_step=3.540, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  13%|#3        | 495/3714 [35:01<3:47:44,  4.25s/it, loss=3.48, v_num=0, train/loss_step=3.750, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  18%|#7        | 660/3714 [36:31<2:48:58,  3.32s/it, loss=3.48, v_num=0, train/loss_step=3.750, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  18%|#7        | 660/3714 [36:31<2:48:58,  3.32s/it, loss=3.48, v_num=0, train/loss_step=3.550, train/acc_step=0.125, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  22%|##2       | 825/3714 [38:01<2:13:07,  2.76s/it, loss=3.48, v_num=0, train/loss_step=3.550, train/acc_step=0.125, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  22%|##2       | 825/3714 [38:01<2:13:07,  2.76s/it, loss=3.54, v_num=0, train/loss_step=3.130, train/acc_step=0.250, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  27%|##6       | 990/3714 [39:32<1:48:46,  2.40s/it, loss=3.54, v_num=0, train/loss_step=3.130, train/acc_step=0.250, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  27%|##6       | 990/3714 [39:32<1:48:46,  2.40s/it, loss=3.45, v_num=0, train/loss_step=3.250, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  31%|###1      | 1155/3714 [41:02<1:30:56,  2.13s/it, loss=3.45, v_num=0, train/loss_step=3.250, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  31%|###1      | 1155/3714 [41:02<1:30:56,  2.13s/it, loss=3.34, v_num=0, train/loss_step=3.370, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  36%|###5      | 1320/3714 [42:34<1:17:12,  1.94s/it, loss=3.34, v_num=0, train/loss_step=3.370, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  36%|###5      | 1320/3714 [42:34<1:17:12,  1.94s/it, loss=3.38, v_num=0, train/loss_step=3.250, train/acc_step=0.125, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  40%|###9      | 1485/3714 [44:06<1:06:12,  1.78s/it, loss=3.38, v_num=0, train/loss_step=3.250, train/acc_step=0.125, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  40%|###9      | 1485/3714 [44:06<1:06:12,  1.78s/it, loss=3.37, v_num=0, train/loss_step=3.690, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  44%|####4     | 1650/3714 [45:37<57:04,  1.66s/it, loss=3.37, v_num=0, train/loss_step=3.690, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]  Epoch 1:  44%|####4     | 1650/3714 [45:37<57:04,  1.66s/it, loss=3.35, v_num=0, train/loss_step=3.220, train/acc_step=0.250, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  49%|####8     | 1815/3714 [47:08<49:19,  1.56s/it, loss=3.35, v_num=0, train/loss_step=3.220, train/acc_step=0.250, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  49%|####8     | 1815/3714 [47:08<49:19,  1.56s/it, loss=3.34, v_num=0, train/loss_step=3.350, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  53%|#####3    | 1980/3714 [48:42<42:39,  1.48s/it, loss=3.34, v_num=0, train/loss_step=3.350, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  53%|#####3    | 1980/3714 [48:42<42:39,  1.48s/it, loss=3.39, v_num=0, train/loss_step=3.670, train/acc_step=0.125, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  58%|#####7    | 2145/3714 [50:13<36:44,  1.40s/it, loss=3.39, v_num=0, train/loss_step=3.670, train/acc_step=0.125, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  58%|#####7    | 2145/3714 [50:13<36:44,  1.40s/it, loss=3.3, v_num=0, train/loss_step=3.230, train/acc_step=0.125, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622] Epoch 1:  62%|######2   | 2310/3714 [51:45<31:27,  1.34s/it, loss=3.3, v_num=0, train/loss_step=3.230, train/acc_step=0.125, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  62%|######2   | 2310/3714 [51:45<31:27,  1.34s/it, loss=3.35, v_num=0, train/loss_step=3.090, train/acc_step=0.125, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  67%|######6   | 2475/3714 [53:17<26:40,  1.29s/it, loss=3.35, v_num=0, train/loss_step=3.090, train/acc_step=0.125, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  67%|######6   | 2475/3714 [53:17<26:40,  1.29s/it, loss=3.42, v_num=0, train/loss_step=3.220, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  71%|#######1  | 2640/3714 [54:47<22:17,  1.25s/it, loss=3.42, v_num=0, train/loss_step=3.220, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  71%|#######1  | 2640/3714 [54:47<22:17,  1.25s/it, loss=3.26, v_num=0, train/loss_step=3.260, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  76%|#######5  | 2805/3714 [56:19<18:15,  1.20s/it, loss=3.26, v_num=0, train/loss_step=3.260, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  76%|#######5  | 2805/3714 [56:19<18:15,  1.20s/it, loss=3.3, v_num=0, train/loss_step=3.170, train/acc_step=0.250, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622] Epoch 1:  80%|#######9  | 2970/3714 [57:52<14:29,  1.17s/it, loss=3.3, v_num=0, train/loss_step=3.170, train/acc_step=0.250, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  80%|#######9  | 2970/3714 [57:52<14:29,  1.17s/it, loss=3.34, v_num=0, train/loss_step=3.320, train/acc_step=0.250, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  84%|########4 | 3135/3714 [59:25<10:58,  1.14s/it, loss=3.34, v_num=0, train/loss_step=3.320, train/acc_step=0.250, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  84%|########4 | 3135/3714 [59:25<10:58,  1.14s/it, loss=3.21, v_num=0, train/loss_step=3.300, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  89%|########8 | 3300/3714 [1:01:01<07:39,  1.11s/it, loss=3.21, v_num=0, train/loss_step=3.300, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  89%|########8 | 3300/3714 [1:01:01<07:39,  1.11s/it, loss=3.41, v_num=0, train/loss_step=3.930, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  89%|########8 | 3302/3714 [1:01:03<07:37,  1.11s/it, loss=3.41, v_num=0, train/loss_step=3.930, train/acc_step=0.000, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1:  89%|########8 | 3302/3714 [1:01:03<07:37,  1.11s/it, loss=3.45, v_num=0, train/loss_step=3.340, train/acc_step=0.125, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:04<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:35<00:53,  4.65it/s][AEpoch 1:  93%|#########3| 3467/3714 [1:01:39<04:23,  1.07s/it, loss=3.45, v_num=0, train/loss_step=3.340, train/acc_step=0.125, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]
Validation DataLoader 0:  80%|########  | 330/412 [01:04<00:16,  5.11it/s][AEpoch 1:  98%|#########7| 3632/3714 [1:02:08<01:24,  1.03s/it, loss=3.45, v_num=0, train/loss_step=3.340, train/acc_step=0.125, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]
Validation DataLoader 0: 100%|##########| 412/412 [01:19<00:00,  5.16it/s][AEpoch 1: 100%|##########| 3714/3714 [1:02:24<00:00,  1.01s/it, loss=3.45, v_num=0, train/loss_step=3.340, train/acc_step=0.125, val/loss_step=3.080, val/acc_step=0.000, val/haversine_distance_step=1.930, val/loss_epoch=3.470, val/acc_epoch=0.088, val/haversine_distance_epoch=1.960, train/loss_epoch=3.590, train/acc_epoch=0.0622]Epoch 1: 100%|##########| 3714/3714 [1:02:24<00:00,  1.01s/it, loss=3.45, v_num=0, train/loss_step=3.340, train/acc_step=0.125, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.590, train/acc_epoch=0.0622]
                                                                          [AMetric val/loss improved by 0.201 >= min_delta = 0.0. New best score: 3.267
Epoch 1: 100%|##########| 3714/3714 [1:02:34<00:00,  1.01s/it, loss=3.45, v_num=0, train/loss_step=3.340, train/acc_step=0.125, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106] Epoch 2: 100%|##########| 3714/3714 [1:02:36<00:00,  1.01s/it, loss=3.45, v_num=0, train/loss_step=3.340, train/acc_step=0.125, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:   4%|4         | 165/3714 [1:04:12<23:01:01, 23.35s/it, loss=3.45, v_num=0, train/loss_step=3.340, train/acc_step=0.125, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:   4%|4         | 165/3714 [1:04:12<23:01:01, 23.35s/it, loss=3.2, v_num=0, train/loss_step=2.940, train/acc_step=0.375, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106] Epoch 2:   9%|8         | 330/3714 [1:05:42<11:13:46, 11.95s/it, loss=3.2, v_num=0, train/loss_step=2.940, train/acc_step=0.375, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:   9%|8         | 330/3714 [1:05:42<11:13:46, 11.95s/it, loss=3.27, v_num=0, train/loss_step=3.400, train/acc_step=0.000, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  13%|#3        | 495/3714 [1:07:14<7:17:15,  8.15s/it, loss=3.27, v_num=0, train/loss_step=3.400, train/acc_step=0.000, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106] Epoch 2:  13%|#3        | 495/3714 [1:07:14<7:17:15,  8.15s/it, loss=3.3, v_num=0, train/loss_step=3.580, train/acc_step=0.000, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106] Epoch 2:  18%|#7        | 660/3714 [1:08:43<5:18:02,  6.25s/it, loss=3.3, v_num=0, train/loss_step=3.580, train/acc_step=0.000, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  18%|#7        | 660/3714 [1:08:43<5:18:02,  6.25s/it, loss=3.28, v_num=0, train/loss_step=2.910, train/acc_step=0.250, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  22%|##2       | 825/3714 [1:10:15<4:06:02,  5.11s/it, loss=3.28, v_num=0, train/loss_step=2.910, train/acc_step=0.250, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  22%|##2       | 825/3714 [1:10:15<4:06:02,  5.11s/it, loss=3.28, v_num=0, train/loss_step=2.990, train/acc_step=0.000, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  27%|##6       | 990/3714 [1:11:46<3:17:28,  4.35s/it, loss=3.28, v_num=0, train/loss_step=2.990, train/acc_step=0.000, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  27%|##6       | 990/3714 [1:11:46<3:17:28,  4.35s/it, loss=3.26, v_num=0, train/loss_step=3.340, train/acc_step=0.125, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  31%|###1      | 1155/3714 [1:13:15<2:42:18,  3.81s/it, loss=3.26, v_num=0, train/loss_step=3.340, train/acc_step=0.125, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  31%|###1      | 1155/3714 [1:13:15<2:42:18,  3.81s/it, loss=3.29, v_num=0, train/loss_step=3.310, train/acc_step=0.000, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  36%|###5      | 1320/3714 [1:14:46<2:15:36,  3.40s/it, loss=3.29, v_num=0, train/loss_step=3.310, train/acc_step=0.000, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  36%|###5      | 1320/3714 [1:14:46<2:15:36,  3.40s/it, loss=3.23, v_num=0, train/loss_step=3.410, train/acc_step=0.125, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  40%|###9      | 1485/3714 [1:16:16<1:54:29,  3.08s/it, loss=3.23, v_num=0, train/loss_step=3.410, train/acc_step=0.125, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  40%|###9      | 1485/3714 [1:16:16<1:54:29,  3.08s/it, loss=3.21, v_num=0, train/loss_step=3.020, train/acc_step=0.375, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  44%|####4     | 1650/3714 [1:17:47<1:37:19,  2.83s/it, loss=3.21, v_num=0, train/loss_step=3.020, train/acc_step=0.375, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  44%|####4     | 1650/3714 [1:17:47<1:37:19,  2.83s/it, loss=3.12, v_num=0, train/loss_step=3.510, train/acc_step=0.125, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  49%|####8     | 1815/3714 [1:19:18<1:22:58,  2.62s/it, loss=3.12, v_num=0, train/loss_step=3.510, train/acc_step=0.125, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  49%|####8     | 1815/3714 [1:19:18<1:22:58,  2.62s/it, loss=3.24, v_num=0, train/loss_step=3.340, train/acc_step=0.125, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  53%|#####3    | 1980/3714 [1:20:47<1:10:45,  2.45s/it, loss=3.24, v_num=0, train/loss_step=3.340, train/acc_step=0.125, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  53%|#####3    | 1980/3714 [1:20:47<1:10:45,  2.45s/it, loss=3.16, v_num=0, train/loss_step=2.930, train/acc_step=0.000, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  58%|#####7    | 2145/3714 [1:22:17<1:00:11,  2.30s/it, loss=3.16, v_num=0, train/loss_step=2.930, train/acc_step=0.000, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  58%|#####7    | 2145/3714 [1:22:17<1:00:11,  2.30s/it, loss=3.18, v_num=0, train/loss_step=2.850, train/acc_step=0.125, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  62%|######2   | 2310/3714 [1:23:50<50:57,  2.18s/it, loss=3.18, v_num=0, train/loss_step=2.850, train/acc_step=0.125, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]  Epoch 2:  62%|######2   | 2310/3714 [1:23:50<50:57,  2.18s/it, loss=3.11, v_num=0, train/loss_step=3.340, train/acc_step=0.250, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  67%|######6   | 2475/3714 [1:25:21<42:44,  2.07s/it, loss=3.11, v_num=0, train/loss_step=3.340, train/acc_step=0.250, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  67%|######6   | 2475/3714 [1:25:21<42:44,  2.07s/it, loss=3.1, v_num=0, train/loss_step=2.880, train/acc_step=0.125, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106] Epoch 2:  71%|#######1  | 2640/3714 [1:26:52<35:20,  1.97s/it, loss=3.1, v_num=0, train/loss_step=2.880, train/acc_step=0.125, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  71%|#######1  | 2640/3714 [1:26:52<35:20,  1.97s/it, loss=3.09, v_num=0, train/loss_step=2.830, train/acc_step=0.375, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  76%|#######5  | 2805/3714 [1:28:21<28:37,  1.89s/it, loss=3.09, v_num=0, train/loss_step=2.830, train/acc_step=0.375, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  76%|#######5  | 2805/3714 [1:28:21<28:37,  1.89s/it, loss=3.18, v_num=0, train/loss_step=3.310, train/acc_step=0.000, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  80%|#######9  | 2970/3714 [1:29:51<22:30,  1.82s/it, loss=3.18, v_num=0, train/loss_step=3.310, train/acc_step=0.000, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  80%|#######9  | 2970/3714 [1:29:51<22:30,  1.82s/it, loss=3.06, v_num=0, train/loss_step=2.800, train/acc_step=0.250, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  84%|########4 | 3135/3714 [1:31:22<16:52,  1.75s/it, loss=3.06, v_num=0, train/loss_step=2.800, train/acc_step=0.250, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  84%|########4 | 3135/3714 [1:31:22<16:52,  1.75s/it, loss=3.11, v_num=0, train/loss_step=2.700, train/acc_step=0.375, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  89%|########8 | 3300/3714 [1:32:55<11:39,  1.69s/it, loss=3.11, v_num=0, train/loss_step=2.700, train/acc_step=0.375, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  89%|########8 | 3300/3714 [1:32:55<11:39,  1.69s/it, loss=3.15, v_num=0, train/loss_step=3.360, train/acc_step=0.000, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  89%|########8 | 3302/3714 [1:32:56<11:35,  1.69s/it, loss=3.15, v_num=0, train/loss_step=3.360, train/acc_step=0.000, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2:  89%|########8 | 3302/3714 [1:32:56<11:35,  1.69s/it, loss=3.12, v_num=0, train/loss_step=2.930, train/acc_step=0.250, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:04<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:38<00:57,  4.28it/s][AEpoch 2:  93%|#########3| 3467/3714 [1:33:36<06:40,  1.62s/it, loss=3.12, v_num=0, train/loss_step=2.930, train/acc_step=0.250, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]
Validation DataLoader 0:  80%|########  | 330/412 [01:07<00:16,  4.88it/s][AEpoch 2:  98%|#########7| 3632/3714 [1:34:05<02:07,  1.55s/it, loss=3.12, v_num=0, train/loss_step=2.930, train/acc_step=0.250, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]
Validation DataLoader 0: 100%|##########| 412/412 [01:21<00:00,  5.08it/s][AEpoch 2: 100%|##########| 3714/3714 [1:34:18<00:00,  1.52s/it, loss=3.12, v_num=0, train/loss_step=2.930, train/acc_step=0.250, val/loss_step=3.180, val/acc_step=0.250, val/haversine_distance_step=1.600, val/loss_epoch=3.270, val/acc_epoch=0.115, val/haversine_distance_epoch=1.860, train/loss_epoch=3.390, train/acc_epoch=0.106]Epoch 2: 100%|##########| 3714/3714 [1:34:18<00:00,  1.52s/it, loss=3.12, v_num=0, train/loss_step=2.930, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.390, train/acc_epoch=0.106]
                                                                          [AMetric val/loss improved by 0.166 >= min_delta = 0.0. New best score: 3.101
Epoch 2: 100%|##########| 3714/3714 [1:34:27<00:00,  1.53s/it, loss=3.12, v_num=0, train/loss_step=2.930, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3: 100%|##########| 3714/3714 [1:34:28<00:00,  1.53s/it, loss=3.12, v_num=0, train/loss_step=2.930, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:   4%|4         | 165/3714 [1:36:05<34:26:57, 34.94s/it, loss=3.12, v_num=0, train/loss_step=2.930, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:   4%|4         | 165/3714 [1:36:05<34:26:57, 34.94s/it, loss=3.16, v_num=0, train/loss_step=3.440, train/acc_step=0.125, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:   9%|8         | 330/3714 [1:37:37<16:41:03, 17.75s/it, loss=3.16, v_num=0, train/loss_step=3.440, train/acc_step=0.125, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:   9%|8         | 330/3714 [1:37:37<16:41:03, 17.75s/it, loss=3.11, v_num=0, train/loss_step=3.000, train/acc_step=0.125, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  13%|#3        | 495/3714 [1:39:08<10:44:43, 12.02s/it, loss=3.11, v_num=0, train/loss_step=3.000, train/acc_step=0.125, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  13%|#3        | 495/3714 [1:39:08<10:44:43, 12.02s/it, loss=3.09, v_num=0, train/loss_step=3.810, train/acc_step=0.000, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  18%|#7        | 660/3714 [1:40:41<7:45:56,  9.15s/it, loss=3.09, v_num=0, train/loss_step=3.810, train/acc_step=0.000, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135] Epoch 3:  18%|#7        | 660/3714 [1:40:41<7:45:56,  9.15s/it, loss=3.09, v_num=0, train/loss_step=3.080, train/acc_step=0.125, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  22%|##2       | 825/3714 [1:42:13<5:58:00,  7.44s/it, loss=3.09, v_num=0, train/loss_step=3.080, train/acc_step=0.125, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  22%|##2       | 825/3714 [1:42:13<5:58:00,  7.44s/it, loss=3.17, v_num=0, train/loss_step=3.210, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  27%|##6       | 990/3714 [1:43:47<4:45:34,  6.29s/it, loss=3.17, v_num=0, train/loss_step=3.210, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  27%|##6       | 990/3714 [1:43:47<4:45:34,  6.29s/it, loss=3.12, v_num=0, train/loss_step=3.850, train/acc_step=0.000, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  31%|###1      | 1155/3714 [1:45:18<3:53:20,  5.47s/it, loss=3.12, v_num=0, train/loss_step=3.850, train/acc_step=0.000, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  31%|###1      | 1155/3714 [1:45:18<3:53:20,  5.47s/it, loss=3.09, v_num=0, train/loss_step=3.190, train/acc_step=0.125, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  36%|###5      | 1320/3714 [1:46:50<3:13:47,  4.86s/it, loss=3.09, v_num=0, train/loss_step=3.190, train/acc_step=0.125, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  36%|###5      | 1320/3714 [1:46:50<3:13:47,  4.86s/it, loss=3.06, v_num=0, train/loss_step=3.030, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  40%|###9      | 1485/3714 [1:48:20<2:42:37,  4.38s/it, loss=3.06, v_num=0, train/loss_step=3.030, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  40%|###9      | 1485/3714 [1:48:20<2:42:37,  4.38s/it, loss=2.99, v_num=0, train/loss_step=2.890, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  44%|####4     | 1650/3714 [1:49:52<2:17:27,  4.00s/it, loss=2.99, v_num=0, train/loss_step=2.890, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  44%|####4     | 1650/3714 [1:49:52<2:17:27,  4.00s/it, loss=3.08, v_num=0, train/loss_step=3.020, train/acc_step=0.000, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  49%|####8     | 1815/3714 [1:51:25<1:56:34,  3.68s/it, loss=3.08, v_num=0, train/loss_step=3.020, train/acc_step=0.000, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  49%|####8     | 1815/3714 [1:51:25<1:56:34,  3.68s/it, loss=3.19, v_num=0, train/loss_step=3.010, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  53%|#####3    | 1980/3714 [1:52:58<1:38:56,  3.42s/it, loss=3.19, v_num=0, train/loss_step=3.010, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  53%|#####3    | 1980/3714 [1:52:58<1:38:56,  3.42s/it, loss=3.01, v_num=0, train/loss_step=2.990, train/acc_step=0.125, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  58%|#####7    | 2145/3714 [1:54:29<1:23:44,  3.20s/it, loss=3.01, v_num=0, train/loss_step=2.990, train/acc_step=0.125, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  58%|#####7    | 2145/3714 [1:54:29<1:23:44,  3.20s/it, loss=3.02, v_num=0, train/loss_step=3.540, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  62%|######2   | 2310/3714 [1:56:02<1:10:31,  3.01s/it, loss=3.02, v_num=0, train/loss_step=3.540, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  62%|######2   | 2310/3714 [1:56:02<1:10:31,  3.01s/it, loss=3.21, v_num=0, train/loss_step=3.260, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  67%|######6   | 2475/3714 [1:57:34<58:51,  2.85s/it, loss=3.21, v_num=0, train/loss_step=3.260, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]  Epoch 3:  67%|######6   | 2475/3714 [1:57:34<58:51,  2.85s/it, loss=3.08, v_num=0, train/loss_step=3.640, train/acc_step=0.125, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  71%|#######1  | 2640/3714 [1:59:07<48:27,  2.71s/it, loss=3.08, v_num=0, train/loss_step=3.640, train/acc_step=0.125, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  71%|#######1  | 2640/3714 [1:59:07<48:27,  2.71s/it, loss=2.99, v_num=0, train/loss_step=2.990, train/acc_step=0.375, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  76%|#######5  | 2805/3714 [2:00:40<39:06,  2.58s/it, loss=2.99, v_num=0, train/loss_step=2.990, train/acc_step=0.375, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  76%|#######5  | 2805/3714 [2:00:40<39:06,  2.58s/it, loss=3.09, v_num=0, train/loss_step=3.570, train/acc_step=0.000, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  80%|#######9  | 2970/3714 [2:02:12<30:36,  2.47s/it, loss=3.09, v_num=0, train/loss_step=3.570, train/acc_step=0.000, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  80%|#######9  | 2970/3714 [2:02:12<30:36,  2.47s/it, loss=2.99, v_num=0, train/loss_step=2.750, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  84%|########4 | 3135/3714 [2:03:45<22:51,  2.37s/it, loss=2.99, v_num=0, train/loss_step=2.750, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  84%|########4 | 3135/3714 [2:03:45<22:51,  2.37s/it, loss=3.14, v_num=0, train/loss_step=3.080, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  89%|########8 | 3300/3714 [2:05:18<15:43,  2.28s/it, loss=3.14, v_num=0, train/loss_step=3.080, train/acc_step=0.250, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  89%|########8 | 3300/3714 [2:05:18<15:43,  2.28s/it, loss=3.17, v_num=0, train/loss_step=2.990, train/acc_step=0.125, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  89%|########8 | 3302/3714 [2:05:19<15:38,  2.28s/it, loss=3.17, v_num=0, train/loss_step=2.990, train/acc_step=0.125, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3:  89%|########8 | 3302/3714 [2:05:19<15:38,  2.28s/it, loss=3.11, v_num=0, train/loss_step=2.930, train/acc_step=0.125, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:04<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:33<00:50,  4.91it/s][AEpoch 3:  93%|#########3| 3467/3714 [2:05:54<08:58,  2.18s/it, loss=3.11, v_num=0, train/loss_step=2.930, train/acc_step=0.125, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]
Validation DataLoader 0:  80%|########  | 330/412 [01:06<00:16,  4.96it/s][AEpoch 3:  98%|#########7| 3632/3714 [2:06:26<02:51,  2.09s/it, loss=3.11, v_num=0, train/loss_step=2.930, train/acc_step=0.125, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]
Validation DataLoader 0: 100%|##########| 412/412 [01:23<00:00,  4.95it/s][AEpoch 3: 100%|##########| 3714/3714 [2:06:43<00:00,  2.05s/it, loss=3.11, v_num=0, train/loss_step=2.930, train/acc_step=0.125, val/loss_step=3.130, val/acc_step=0.250, val/haversine_distance_step=1.700, val/loss_epoch=3.100, val/acc_epoch=0.145, val/haversine_distance_epoch=1.690, train/loss_epoch=3.210, train/acc_epoch=0.135]Epoch 3: 100%|##########| 3714/3714 [2:06:43<00:00,  2.05s/it, loss=3.11, v_num=0, train/loss_step=2.930, train/acc_step=0.125, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.210, train/acc_epoch=0.135]
                                                                          [AMetric val/loss improved by 0.138 >= min_delta = 0.0. New best score: 2.963
Epoch 3: 100%|##########| 3714/3714 [2:06:52<00:00,  2.05s/it, loss=3.11, v_num=0, train/loss_step=2.930, train/acc_step=0.125, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4: 100%|##########| 3714/3714 [2:06:52<00:00,  2.05s/it, loss=3.11, v_num=0, train/loss_step=2.930, train/acc_step=0.125, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:   4%|4         | 165/3714 [2:08:28<46:03:13, 46.72s/it, loss=3.11, v_num=0, train/loss_step=2.930, train/acc_step=0.125, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:   4%|4         | 165/3714 [2:08:28<46:03:13, 46.72s/it, loss=3.1, v_num=0, train/loss_step=2.810, train/acc_step=0.125, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160] Epoch 4:   9%|8         | 330/3714 [2:09:57<22:12:40, 23.63s/it, loss=3.1, v_num=0, train/loss_step=2.810, train/acc_step=0.125, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:   9%|8         | 330/3714 [2:09:57<22:12:40, 23.63s/it, loss=2.99, v_num=0, train/loss_step=3.610, train/acc_step=0.125, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  13%|#3        | 495/3714 [2:11:26<14:14:46, 15.93s/it, loss=2.99, v_num=0, train/loss_step=3.610, train/acc_step=0.125, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  13%|#3        | 495/3714 [2:11:26<14:14:46, 15.93s/it, loss=2.99, v_num=0, train/loss_step=3.330, train/acc_step=0.125, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  18%|#7        | 660/3714 [2:12:56<10:15:07, 12.09s/it, loss=2.99, v_num=0, train/loss_step=3.330, train/acc_step=0.125, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  18%|#7        | 660/3714 [2:12:56<10:15:07, 12.09s/it, loss=3.07, v_num=0, train/loss_step=3.550, train/acc_step=0.000, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  22%|##2       | 825/3714 [2:14:29<7:50:56,  9.78s/it, loss=3.07, v_num=0, train/loss_step=3.550, train/acc_step=0.000, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160] Epoch 4:  22%|##2       | 825/3714 [2:14:29<7:50:56,  9.78s/it, loss=3.06, v_num=0, train/loss_step=3.610, train/acc_step=0.125, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  27%|##6       | 990/3714 [2:16:01<6:14:16,  8.24s/it, loss=3.06, v_num=0, train/loss_step=3.610, train/acc_step=0.125, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  27%|##6       | 990/3714 [2:16:01<6:14:16,  8.24s/it, loss=2.93, v_num=0, train/loss_step=2.600, train/acc_step=0.250, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  31%|###1      | 1155/3714 [2:17:34<5:04:48,  7.15s/it, loss=2.93, v_num=0, train/loss_step=2.600, train/acc_step=0.250, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  31%|###1      | 1155/3714 [2:17:34<5:04:48,  7.15s/it, loss=2.98, v_num=0, train/loss_step=3.370, train/acc_step=0.125, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  36%|###5      | 1320/3714 [2:19:07<4:12:19,  6.32s/it, loss=2.98, v_num=0, train/loss_step=3.370, train/acc_step=0.125, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  36%|###5      | 1320/3714 [2:19:07<4:12:19,  6.32s/it, loss=2.98, v_num=0, train/loss_step=2.260, train/acc_step=0.375, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  40%|###9      | 1485/3714 [2:20:39<3:31:07,  5.68s/it, loss=2.98, v_num=0, train/loss_step=2.260, train/acc_step=0.375, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  40%|###9      | 1485/3714 [2:20:39<3:31:07,  5.68s/it, loss=3.07, v_num=0, train/loss_step=2.760, train/acc_step=0.250, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  44%|####4     | 1650/3714 [2:22:13<2:57:54,  5.17s/it, loss=3.07, v_num=0, train/loss_step=2.760, train/acc_step=0.250, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  44%|####4     | 1650/3714 [2:22:13<2:57:54,  5.17s/it, loss=2.95, v_num=0, train/loss_step=2.470, train/acc_step=0.250, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  49%|####8     | 1815/3714 [2:23:47<2:30:26,  4.75s/it, loss=2.95, v_num=0, train/loss_step=2.470, train/acc_step=0.250, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  49%|####8     | 1815/3714 [2:23:47<2:30:26,  4.75s/it, loss=3.03, v_num=0, train/loss_step=2.990, train/acc_step=0.250, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  53%|#####3    | 1980/3714 [2:25:21<2:07:17,  4.40s/it, loss=3.03, v_num=0, train/loss_step=2.990, train/acc_step=0.250, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  53%|#####3    | 1980/3714 [2:25:21<2:07:17,  4.40s/it, loss=2.87, v_num=0, train/loss_step=2.700, train/acc_step=0.375, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  58%|#####7    | 2145/3714 [2:26:54<1:47:27,  4.11s/it, loss=2.87, v_num=0, train/loss_step=2.700, train/acc_step=0.375, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  58%|#####7    | 2145/3714 [2:26:54<1:47:27,  4.11s/it, loss=3.14, v_num=0, train/loss_step=3.320, train/acc_step=0.250, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  62%|######2   | 2310/3714 [2:28:28<1:30:14,  3.86s/it, loss=3.14, v_num=0, train/loss_step=3.320, train/acc_step=0.250, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  62%|######2   | 2310/3714 [2:28:28<1:30:14,  3.86s/it, loss=2.96, v_num=0, train/loss_step=2.860, train/acc_step=0.250, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  67%|######6   | 2475/3714 [2:30:03<1:15:07,  3.64s/it, loss=2.96, v_num=0, train/loss_step=2.860, train/acc_step=0.250, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  67%|######6   | 2475/3714 [2:30:03<1:15:07,  3.64s/it, loss=3.05, v_num=0, train/loss_step=3.420, train/acc_step=0.000, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  71%|#######1  | 2640/3714 [2:31:38<1:01:41,  3.45s/it, loss=3.05, v_num=0, train/loss_step=3.420, train/acc_step=0.000, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  71%|#######1  | 2640/3714 [2:31:38<1:01:41,  3.45s/it, loss=2.91, v_num=0, train/loss_step=3.010, train/acc_step=0.500, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  76%|#######5  | 2805/3714 [2:33:10<49:38,  3.28s/it, loss=2.91, v_num=0, train/loss_step=3.010, train/acc_step=0.500, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]  Epoch 4:  76%|#######5  | 2805/3714 [2:33:10<49:38,  3.28s/it, loss=3.1, v_num=0, train/loss_step=3.500, train/acc_step=0.125, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160] Epoch 4:  80%|#######9  | 2970/3714 [2:34:42<38:45,  3.13s/it, loss=3.1, v_num=0, train/loss_step=3.500, train/acc_step=0.125, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  80%|#######9  | 2970/3714 [2:34:42<38:45,  3.13s/it, loss=3.04, v_num=0, train/loss_step=3.060, train/acc_step=0.250, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  84%|########4 | 3135/3714 [2:36:16<28:51,  2.99s/it, loss=3.04, v_num=0, train/loss_step=3.060, train/acc_step=0.250, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  84%|########4 | 3135/3714 [2:36:16<28:51,  2.99s/it, loss=2.96, v_num=0, train/loss_step=2.690, train/acc_step=0.125, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  89%|########8 | 3300/3714 [2:37:49<19:48,  2.87s/it, loss=2.96, v_num=0, train/loss_step=2.690, train/acc_step=0.125, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  89%|########8 | 3300/3714 [2:37:49<19:48,  2.87s/it, loss=2.91, v_num=0, train/loss_step=2.850, train/acc_step=0.000, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  89%|########8 | 3302/3714 [2:37:50<19:41,  2.87s/it, loss=2.91, v_num=0, train/loss_step=2.850, train/acc_step=0.000, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4:  89%|########8 | 3302/3714 [2:37:50<19:41,  2.87s/it, loss=2.92, v_num=0, train/loss_step=3.350, train/acc_step=0.250, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:04<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:36<00:54,  4.57it/s][AEpoch 4:  93%|#########3| 3467/3714 [2:38:28<11:17,  2.74s/it, loss=2.92, v_num=0, train/loss_step=3.350, train/acc_step=0.250, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]
Validation DataLoader 0:  80%|########  | 330/412 [01:08<00:17,  4.80it/s][AEpoch 4:  98%|#########7| 3632/3714 [2:39:00<03:35,  2.63s/it, loss=2.92, v_num=0, train/loss_step=3.350, train/acc_step=0.250, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]
Validation DataLoader 0: 100%|##########| 412/412 [01:23<00:00,  4.91it/s][AEpoch 4: 100%|##########| 3714/3714 [2:39:15<00:00,  2.57s/it, loss=2.92, v_num=0, train/loss_step=3.350, train/acc_step=0.250, val/loss_step=3.710, val/acc_step=0.000, val/haversine_distance_step=1.360, val/loss_epoch=2.960, val/acc_epoch=0.170, val/haversine_distance_epoch=1.720, train/loss_epoch=3.080, train/acc_epoch=0.160]Epoch 4: 100%|##########| 3714/3714 [2:39:15<00:00,  2.57s/it, loss=2.92, v_num=0, train/loss_step=3.350, train/acc_step=0.250, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=3.080, train/acc_epoch=0.160]
                                                                          [AMetric val/loss improved by 0.061 >= min_delta = 0.0. New best score: 2.901
Epoch 4: 100%|##########| 3714/3714 [2:39:23<00:00,  2.57s/it, loss=2.92, v_num=0, train/loss_step=3.350, train/acc_step=0.250, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5: 100%|##########| 3714/3714 [2:39:23<00:00,  2.57s/it, loss=2.92, v_num=0, train/loss_step=3.350, train/acc_step=0.250, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/callbacks/finetuning.py:210: UserWarning: The provided params to be frozen already exist within another group of this optimizer. Those parameters will be skipped.
HINT: Did you init your optimizer in `configure_optimizer` as such:
 <class 'torch.optim.adam.Adam'>(filter(lambda p: p.requires_grad, self.parameters()), ...) 
  rank_zero_warn(
Epoch 5:   4%|4         | 165/3714 [2:41:36<57:56:08, 58.77s/it, loss=2.92, v_num=0, train/loss_step=3.350, train/acc_step=0.250, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:   4%|4         | 165/3714 [2:41:36<57:56:08, 58.77s/it, loss=2.75, v_num=0, train/loss_step=2.610, train/acc_step=0.375, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:   9%|8         | 330/3714 [2:43:39<27:58:16, 29.76s/it, loss=2.75, v_num=0, train/loss_step=2.610, train/acc_step=0.375, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:   9%|8         | 330/3714 [2:43:39<27:58:16, 29.76s/it, loss=2.95, v_num=0, train/loss_step=3.330, train/acc_step=0.250, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  13%|#3        | 495/3714 [2:45:42<17:57:37, 20.09s/it, loss=2.95, v_num=0, train/loss_step=3.330, train/acc_step=0.250, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  13%|#3        | 495/3714 [2:45:42<17:57:37, 20.09s/it, loss=2.84, v_num=0, train/loss_step=3.110, train/acc_step=0.000, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  18%|#7        | 660/3714 [2:47:48<12:56:30, 15.26s/it, loss=2.84, v_num=0, train/loss_step=3.110, train/acc_step=0.000, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  18%|#7        | 660/3714 [2:47:48<12:56:30, 15.26s/it, loss=2.67, v_num=0, train/loss_step=3.170, train/acc_step=0.125, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  22%|##2       | 825/3714 [2:49:55<9:55:01, 12.36s/it, loss=2.67, v_num=0, train/loss_step=3.170, train/acc_step=0.125, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174] Epoch 5:  22%|##2       | 825/3714 [2:49:55<9:55:01, 12.36s/it, loss=2.74, v_num=0, train/loss_step=2.360, train/acc_step=0.500, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  27%|##6       | 990/3714 [2:51:59<7:53:14, 10.42s/it, loss=2.74, v_num=0, train/loss_step=2.360, train/acc_step=0.500, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  27%|##6       | 990/3714 [2:51:59<7:53:14, 10.42s/it, loss=2.72, v_num=0, train/loss_step=2.980, train/acc_step=0.125, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  31%|###1      | 1155/3714 [2:54:01<6:25:34,  9.04s/it, loss=2.72, v_num=0, train/loss_step=2.980, train/acc_step=0.125, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  31%|###1      | 1155/3714 [2:54:01<6:25:34,  9.04s/it, loss=2.74, v_num=0, train/loss_step=2.840, train/acc_step=0.000, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  36%|###5      | 1320/3714 [2:56:06<5:19:23,  8.00s/it, loss=2.74, v_num=0, train/loss_step=2.840, train/acc_step=0.000, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  36%|###5      | 1320/3714 [2:56:06<5:19:23,  8.00s/it, loss=2.62, v_num=0, train/loss_step=2.880, train/acc_step=0.250, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  40%|###9      | 1485/3714 [2:58:09<4:27:24,  7.20s/it, loss=2.62, v_num=0, train/loss_step=2.880, train/acc_step=0.250, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  40%|###9      | 1485/3714 [2:58:09<4:27:24,  7.20s/it, loss=2.64, v_num=0, train/loss_step=2.790, train/acc_step=0.125, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  44%|####4     | 1650/3714 [3:00:13<3:45:26,  6.55s/it, loss=2.64, v_num=0, train/loss_step=2.790, train/acc_step=0.125, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  44%|####4     | 1650/3714 [3:00:13<3:45:26,  6.55s/it, loss=2.46, v_num=0, train/loss_step=2.610, train/acc_step=0.375, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  49%|####8     | 1815/3714 [3:02:21<3:10:48,  6.03s/it, loss=2.46, v_num=0, train/loss_step=2.610, train/acc_step=0.375, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  49%|####8     | 1815/3714 [3:02:21<3:10:48,  6.03s/it, loss=2.86, v_num=0, train/loss_step=3.230, train/acc_step=0.125, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  53%|#####3    | 1980/3714 [3:04:27<2:41:32,  5.59s/it, loss=2.86, v_num=0, train/loss_step=3.230, train/acc_step=0.125, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  53%|#####3    | 1980/3714 [3:04:27<2:41:32,  5.59s/it, loss=2.54, v_num=0, train/loss_step=3.040, train/acc_step=0.125, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  58%|#####7    | 2145/3714 [3:06:31<2:16:26,  5.22s/it, loss=2.54, v_num=0, train/loss_step=3.040, train/acc_step=0.125, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  58%|#####7    | 2145/3714 [3:06:31<2:16:26,  5.22s/it, loss=2.73, v_num=0, train/loss_step=2.850, train/acc_step=0.125, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  62%|######2   | 2310/3714 [3:08:37<1:54:38,  4.90s/it, loss=2.73, v_num=0, train/loss_step=2.850, train/acc_step=0.125, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  62%|######2   | 2310/3714 [3:08:37<1:54:38,  4.90s/it, loss=2.46, v_num=0, train/loss_step=2.090, train/acc_step=0.625, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  67%|######6   | 2475/3714 [3:10:40<1:35:27,  4.62s/it, loss=2.46, v_num=0, train/loss_step=2.090, train/acc_step=0.625, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  67%|######6   | 2475/3714 [3:10:40<1:35:27,  4.62s/it, loss=2.52, v_num=0, train/loss_step=2.820, train/acc_step=0.125, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  71%|#######1  | 2640/3714 [3:12:47<1:18:25,  4.38s/it, loss=2.52, v_num=0, train/loss_step=2.820, train/acc_step=0.125, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  71%|#######1  | 2640/3714 [3:12:47<1:18:25,  4.38s/it, loss=2.56, v_num=0, train/loss_step=2.070, train/acc_step=0.375, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  76%|#######5  | 2805/3714 [3:14:51<1:03:08,  4.17s/it, loss=2.56, v_num=0, train/loss_step=2.070, train/acc_step=0.375, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  76%|#######5  | 2805/3714 [3:14:51<1:03:08,  4.17s/it, loss=2.58, v_num=0, train/loss_step=2.350, train/acc_step=0.250, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  80%|#######9  | 2970/3714 [3:16:54<49:19,  3.98s/it, loss=2.58, v_num=0, train/loss_step=2.350, train/acc_step=0.250, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]  Epoch 5:  80%|#######9  | 2970/3714 [3:16:54<49:19,  3.98s/it, loss=2.69, v_num=0, train/loss_step=2.630, train/acc_step=0.125, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  84%|########4 | 3135/3714 [3:18:59<36:45,  3.81s/it, loss=2.69, v_num=0, train/loss_step=2.630, train/acc_step=0.125, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  84%|########4 | 3135/3714 [3:18:59<36:45,  3.81s/it, loss=2.43, v_num=0, train/loss_step=2.430, train/acc_step=0.375, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  89%|########8 | 3300/3714 [3:21:02<25:13,  3.66s/it, loss=2.43, v_num=0, train/loss_step=2.430, train/acc_step=0.375, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  89%|########8 | 3300/3714 [3:21:02<25:13,  3.66s/it, loss=2.52, v_num=0, train/loss_step=2.040, train/acc_step=0.375, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  89%|########8 | 3302/3714 [3:21:04<25:05,  3.65s/it, loss=2.52, v_num=0, train/loss_step=2.040, train/acc_step=0.375, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5:  89%|########8 | 3302/3714 [3:21:04<25:05,  3.65s/it, loss=2.53, v_num=0, train/loss_step=2.560, train/acc_step=0.250, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:04<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:36<00:55,  4.48it/s][AEpoch 5:  93%|#########3| 3467/3714 [3:21:42<14:22,  3.49s/it, loss=2.53, v_num=0, train/loss_step=2.560, train/acc_step=0.250, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]
Validation DataLoader 0:  80%|########  | 330/412 [01:11<00:17,  4.64it/s][AEpoch 5:  98%|#########7| 3632/3714 [3:22:16<04:34,  3.34s/it, loss=2.53, v_num=0, train/loss_step=2.560, train/acc_step=0.250, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]
Validation DataLoader 0: 100%|##########| 412/412 [01:25<00:00,  4.82it/s][AEpoch 5: 100%|##########| 3714/3714 [3:22:31<00:00,  3.27s/it, loss=2.53, v_num=0, train/loss_step=2.560, train/acc_step=0.250, val/loss_step=3.070, val/acc_step=0.125, val/haversine_distance_step=2.020, val/loss_epoch=2.900, val/acc_epoch=0.185, val/haversine_distance_epoch=1.900, train/loss_epoch=2.990, train/acc_epoch=0.174]Epoch 5: 100%|##########| 3714/3714 [3:22:31<00:00,  3.27s/it, loss=2.53, v_num=0, train/loss_step=2.560, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.990, train/acc_epoch=0.174]
                                                                          [AMetric val/loss improved by 0.565 >= min_delta = 0.0. New best score: 2.336
Epoch 5: 100%|##########| 3714/3714 [3:22:39<00:00,  3.27s/it, loss=2.53, v_num=0, train/loss_step=2.560, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6: 100%|##########| 3714/3714 [3:22:39<00:00,  3.27s/it, loss=2.53, v_num=0, train/loss_step=2.560, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:   4%|4         | 165/3714 [3:24:50<73:25:48, 74.49s/it, loss=2.53, v_num=0, train/loss_step=2.560, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:   4%|4         | 165/3714 [3:24:50<73:25:48, 74.49s/it, loss=2.14, v_num=0, train/loss_step=2.670, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:   9%|8         | 330/3714 [3:26:51<35:21:13, 37.61s/it, loss=2.14, v_num=0, train/loss_step=2.670, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:   9%|8         | 330/3714 [3:26:51<35:21:13, 37.61s/it, loss=2.31, v_num=0, train/loss_step=2.570, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  13%|#3        | 495/3714 [3:28:51<22:38:15, 25.32s/it, loss=2.31, v_num=0, train/loss_step=2.570, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  13%|#3        | 495/3714 [3:28:51<22:38:15, 25.32s/it, loss=2.39, v_num=0, train/loss_step=2.700, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  18%|#7        | 660/3714 [3:30:53<16:15:52, 19.17s/it, loss=2.39, v_num=0, train/loss_step=2.700, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  18%|#7        | 660/3714 [3:30:53<16:15:52, 19.17s/it, loss=2.29, v_num=0, train/loss_step=2.320, train/acc_step=0.000, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  22%|##2       | 825/3714 [3:32:56<12:25:42, 15.49s/it, loss=2.29, v_num=0, train/loss_step=2.320, train/acc_step=0.000, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  22%|##2       | 825/3714 [3:32:56<12:25:42, 15.49s/it, loss=2.3, v_num=0, train/loss_step=2.500, train/acc_step=0.125, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245] Epoch 6:  27%|##6       | 990/3714 [3:34:59<9:51:32, 13.03s/it, loss=2.3, v_num=0, train/loss_step=2.500, train/acc_step=0.125, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245] Epoch 6:  27%|##6       | 990/3714 [3:34:59<9:51:32, 13.03s/it, loss=2.18, v_num=0, train/loss_step=2.290, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  31%|###1      | 1155/3714 [3:37:01<8:00:50, 11.27s/it, loss=2.18, v_num=0, train/loss_step=2.290, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  31%|###1      | 1155/3714 [3:37:01<8:00:50, 11.27s/it, loss=2.46, v_num=0, train/loss_step=4.070, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  36%|###5      | 1320/3714 [3:39:05<6:37:20,  9.96s/it, loss=2.46, v_num=0, train/loss_step=4.070, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  36%|###5      | 1320/3714 [3:39:05<6:37:20,  9.96s/it, loss=2.25, v_num=0, train/loss_step=2.580, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  40%|###9      | 1485/3714 [3:41:08<5:31:55,  8.93s/it, loss=2.25, v_num=0, train/loss_step=2.580, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  40%|###9      | 1485/3714 [3:41:08<5:31:55,  8.93s/it, loss=2.24, v_num=0, train/loss_step=2.220, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  44%|####4     | 1650/3714 [3:43:09<4:39:09,  8.11s/it, loss=2.24, v_num=0, train/loss_step=2.220, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  44%|####4     | 1650/3714 [3:43:09<4:39:09,  8.11s/it, loss=2.34, v_num=0, train/loss_step=2.440, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  49%|####8     | 1815/3714 [3:45:14<3:55:39,  7.45s/it, loss=2.34, v_num=0, train/loss_step=2.440, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  49%|####8     | 1815/3714 [3:45:14<3:55:39,  7.45s/it, loss=2.19, v_num=0, train/loss_step=2.500, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  53%|#####3    | 1980/3714 [3:47:18<3:19:04,  6.89s/it, loss=2.19, v_num=0, train/loss_step=2.500, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  53%|#####3    | 1980/3714 [3:47:18<3:19:04,  6.89s/it, loss=2.32, v_num=0, train/loss_step=1.980, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  58%|#####7    | 2145/3714 [3:49:23<2:47:47,  6.42s/it, loss=2.32, v_num=0, train/loss_step=1.980, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  58%|#####7    | 2145/3714 [3:49:23<2:47:47,  6.42s/it, loss=2.28, v_num=0, train/loss_step=1.620, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  62%|######2   | 2310/3714 [3:51:29<2:20:42,  6.01s/it, loss=2.28, v_num=0, train/loss_step=1.620, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  62%|######2   | 2310/3714 [3:51:29<2:20:42,  6.01s/it, loss=2.26, v_num=0, train/loss_step=2.480, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  67%|######6   | 2475/3714 [3:53:32<1:56:54,  5.66s/it, loss=2.26, v_num=0, train/loss_step=2.480, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  67%|######6   | 2475/3714 [3:53:32<1:56:54,  5.66s/it, loss=2.47, v_num=0, train/loss_step=1.870, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  71%|#######1  | 2640/3714 [3:55:38<1:35:51,  5.36s/it, loss=2.47, v_num=0, train/loss_step=1.870, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  71%|#######1  | 2640/3714 [3:55:38<1:35:51,  5.36s/it, loss=2.18, v_num=0, train/loss_step=1.870, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  76%|#######5  | 2805/3714 [3:57:42<1:17:01,  5.08s/it, loss=2.18, v_num=0, train/loss_step=1.870, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  76%|#######5  | 2805/3714 [3:57:42<1:17:01,  5.08s/it, loss=2.21, v_num=0, train/loss_step=2.230, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  80%|#######9  | 2970/3714 [3:59:41<1:00:02,  4.84s/it, loss=2.21, v_num=0, train/loss_step=2.230, train/acc_step=0.500, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  80%|#######9  | 2970/3714 [3:59:41<1:00:02,  4.84s/it, loss=2.09, v_num=0, train/loss_step=2.640, train/acc_step=0.000, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  84%|########4 | 3135/3714 [4:01:43<44:38,  4.63s/it, loss=2.09, v_num=0, train/loss_step=2.640, train/acc_step=0.000, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]  Epoch 6:  84%|########4 | 3135/3714 [4:01:43<44:38,  4.63s/it, loss=2.23, v_num=0, train/loss_step=2.350, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Standard output piped to file:
/home/fwolf/lumen-geoguesser/reports/train-resnext101_32x8d-22-04-21-18-06-36.txt
[{'batch_size': 8,
  'cached_df': 'data/complete/data__spacing_0.5__num_class_55.csv',
  'dataset_dirs': ['data/external/', 'data/raw/'],
  'dataset_frac': 1,
  'image_size': 112,
  'load_in_ram': False,
  'lr': 1e-05,
  'models': ['resnext101_32x8d'],
  'num_workers': 32,
  'output_report': PosixPath('/home/fwolf/lumen-geoguesser/reports'),
  'pretrained': True,
  'quick': False,
  'shuffle_before_splitting': False,
  'split_ratios': [0.8, 0.1, 0.1],
  'trainer_checkpoint': None,
  'unfreeze_backbone_at_epoch': 5,
  'unfreeze_blocks': 'all',
  'use_single_images': False,
  'weight_decay': 0},
 {'accelerator': 'gpu',
  'accumulate_grad_batches': None,
  'amp_backend': 'native',
  'amp_level': None,
  'auto_lr_find': False,
  'auto_scale_batch_size': False,
  'auto_select_gpus': False,
  'benchmark': None,
  'check_val_every_n_epoch': 1,
  'checkpoint_callback': None,
  'default_root_dir': None,
  'detect_anomaly': False,
  'deterministic': False,
  'devices': '1',
  'enable_checkpointing': True,
  'enable_model_summary': True,
  'enable_progress_bar': True,
  'fast_dev_run': False,
  'flush_logs_every_n_steps': None,
  'gpus': None,
  'gradient_clip_algorithm': None,
  'gradient_clip_val': None,
  'ipus': None,
  'limit_predict_batches': None,
  'limit_test_batches': None,
  'limit_train_batches': None,
  'limit_val_batches': None,
  'log_every_n_steps': 20,
  'log_gpu_memory': None,
  'logger': True,
  'max_epochs': None,
  'max_steps': -1,
  'max_time': None,
  'min_epochs': None,
  'min_steps': None,
  'move_metrics_to_cpu': False,
  'multiple_trainloader_mode': 'max_size_cycle',
  'num_nodes': 1,
  'num_processes': None,
  'num_sanity_val_steps': 2,
  'overfit_batches': 0.0,
  'plugins': None,
  'precision': 32,
  'prepare_data_per_node': None,
  'process_position': 0,
  'profiler': None,
  'progress_bar_refresh_rate': None,
  'reload_dataloaders_every_n_epochs': 0,
  'replace_sampler_ddp': True,
  'resume_from_checkpoint': None,
  'stochastic_weight_avg': False,
  'strategy': None,
  'sync_batchnorm': False,
  'terminate_on_nan': None,
  'tpu_cores': None,
  'track_grad_norm': -1,
  'val_check_interval': None,
  'weights_save_path': None,
  'weights_summary': 'top'}]
GeoguesserDataModule init
GeoguesserDataset init
GeoguesserDataset init
GeoguesserDataset init
Train, val and test size 26417 3302 3303
Using cache found in /home/fwolf/.cache/torch/hub/pytorch_vision_v0.12.0
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py:91: PossibleUserWarning: `max_epochs` was not set. Setting it to 1000 epochs. To train without an epoch limit, set `max_epochs=-1`.
  rank_zero_warn(
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/torch/cuda/__init__.py:122: UserWarning: 
    Found GPU1 NVIDIA GeForce GTX TITAN Black which is of cuda capability 3.5.
    PyTorch no longer supports this GPU because it is too old.
    The minimum cuda capability supported by this library is 3.7.
    
  warnings.warn(old_gpu_warn % (d, name, major, minor, min_arch // 10, min_arch % 10))
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name     | Type   | Params | In sizes         | Out sizes
-------------------------------------------------------------------
0 | backbone | ResNet | 86.7 M | [8, 3, 112, 112] | [8, 2048]
1 | fc       | Linear | 434 K  | [8, 8192]        | [8, 53]  
-------------------------------------------------------------------
637 K     Trainable params
86.5 M    Non-trainable params
87.2 M    Total params
348.706   Total estimated model params size (MB)
/home/fwolf/lumen-geoguesser/src/model.py:98: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).
  outs_backbone = [self.backbone(image) for image in image_list]
Sanity Checking: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:486: PossibleUserWarning: Your `val_dataloader`'s sampler has shuffling enabled, it is strongly recommended that you turn shuffling off for val/test/predict dataloaders.
  rank_zero_warn(
Sanity Checking DataLoader 0:   0%|          | 0/2 [00:02<?, ?it/s]/home/fwolf/lumen-geoguesser/src/utils_model.py:55: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  preds, indices = torch.topk(F.softmax(y_pred), k = top_k)
tensor([[[45.1467, 18.2464],
         [42.5658, 18.4556],
         [45.1507, 17.2434],
         [44.6467, 15.2464],
         [44.7856, 13.8883]],

        [[42.5658, 18.4556],
         [44.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]],

        [[42.5658, 18.4556],
         [45.6467, 17.7464],
         [45.1955, 16.7530],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[42.5658, 18.4556],
         [42.9020, 17.3889],
         [44.1467, 16.2464],
         [45.1467, 18.2464],
         [45.9341, 17.5891]],

        [[45.6467, 18.7464],
         [42.5658, 18.4556],
         [45.6467, 17.7464],
         [44.7856, 13.8883],
         [45.1467, 18.2464]],

        [[45.6467, 18.7464],
         [42.5658, 18.4556],
         [45.5636, 14.6820],
         [46.1467, 16.7464],
         [43.0639, 17.6431]],

        [[44.1467, 16.2464],
         [45.6467, 18.7464],
         [42.5658, 18.4556],
         [42.9020, 17.3889],
         [46.1467, 16.7464]],

        [[44.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2683, 13.8630],
        [43.7169, 15.9875],
        [42.8499, 17.6910],
        [45.2870, 18.4646],
        [43.7488, 16.2511],
        [46.0443, 16.0841],
        [45.7104, 16.2316],
        [43.7985, 16.1645]], device='cuda:0', dtype=torch.float64)
1.3185404275629176
tensor([[[45.1467, 18.2464],
         [44.1467, 16.2464],
         [45.6467, 18.2464],
         [42.5658, 18.4556],
         [45.6467, 18.7464]],

        [[45.1467, 18.2464],
         [44.6467, 15.2464],
         [42.9020, 17.3889],
         [42.5658, 18.4556],
         [45.6467, 16.7464]],

        [[45.1467, 18.7464],
         [44.7856, 13.8883],
         [45.6467, 18.7464],
         [45.9341, 17.5891],
         [45.6467, 18.2464]],

        [[44.1467, 16.2464],
         [44.6986, 14.8933],
         [45.1507, 17.2434],
         [42.5658, 18.4556],
         [43.1550, 17.2484]],

        [[45.1507, 17.2434],
         [45.6467, 18.7464],
         [44.1467, 16.2464],
         [45.6467, 18.2464],
         [45.5636, 14.6820]],

        [[42.5658, 18.4556],
         [44.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1507, 17.2434],
         [45.6467, 18.7464]],

        [[45.1467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [45.1507, 17.2434]],

        [[42.5658, 18.4556],
         [45.1467, 18.2464],
         [45.1507, 17.2434],
         [45.6467, 17.7464],
         [45.9341, 17.5891]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8765, 16.4209],
        [46.0732, 16.4554],
        [44.0582, 16.1258],
        [46.2605, 16.5536],
        [43.5258, 16.7757],
        [46.0020, 17.2032],
        [45.3202, 17.0379],
        [46.4209, 16.6961]], device='cuda:0', dtype=torch.float64)
1.1986052936640204
Sanity Checking DataLoader 0: 100%|##########| 2/2 [00:03<00:00,  1.73s/it]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `validation_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
                                                                           Training: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:   0%|          | 0/3714 [00:00<?, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_epoch_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 6:  89%|########8 | 3300/3714 [4:03:59<30:36,  4.44s/it, loss=2.23, v_num=0, train/loss_step=2.350, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  89%|########8 | 3300/3714 [4:03:59<30:36,  4.44s/it, loss=2.35, v_num=0, train/loss_step=2.040, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  89%|########8 | 3302/3714 [4:04:01<30:26,  4.43s/it, loss=2.35, v_num=0, train/loss_step=2.040, train/acc_step=0.250, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6:  89%|########8 | 3302/3714 [4:04:01<30:26,  4.43s/it, loss=2.38, v_num=0, train/loss_step=2.150, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:05<?, ?it/s][AEpoch 0:   4%|4         | 165/3714 [01:41<36:25,  1.62it/s]Epoch 0:   4%|4         | 165/3714 [01:41<36:25,  1.62it/s, loss=3.68, v_num=0, train/loss_step=3.410, train/acc_step=0.125]
Validation DataLoader 0:  40%|####      | 165/412 [00:41<01:02,  3.96it/s][AEpoch 6:  93%|#########3| 3467/3714 [4:04:44<17:26,  4.24s/it, loss=2.38, v_num=0, train/loss_step=2.150, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]
Validation DataLoader 0:  80%|########  | 330/412 [01:20<00:20,  4.08it/s][AEpoch 6:  98%|#########7| 3632/3714 [4:05:23<05:32,  4.05s/it, loss=2.38, v_num=0, train/loss_step=2.150, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]
Validation DataLoader 0: 100%|##########| 412/412 [01:38<00:00,  4.20it/s][AEpoch 6: 100%|##########| 3714/3714 [4:05:40<00:00,  3.97s/it, loss=2.38, v_num=0, train/loss_step=2.150, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.375, val/haversine_distance_step=1.940, val/loss_epoch=2.340, val/acc_epoch=0.318, val/haversine_distance_epoch=1.890, train/loss_epoch=2.660, train/acc_epoch=0.245]Epoch 6: 100%|##########| 3714/3714 [4:05:40<00:00,  3.97s/it, loss=2.38, v_num=0, train/loss_step=2.150, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.500, val/haversine_distance_step=1.950, val/loss_epoch=2.210, val/acc_epoch=0.347, val/haversine_distance_epoch=1.840, train/loss_epoch=2.660, train/acc_epoch=0.245]
                                                                          [AMetric val/loss improved by 0.127 >= min_delta = 0.0. New best score: 2.209
Epoch 6: 100%|##########| 3714/3714 [4:05:49<00:00,  3.97s/it, loss=2.38, v_num=0, train/loss_step=2.150, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.500, val/haversine_distance_step=1.950, val/loss_epoch=2.210, val/acc_epoch=0.347, val/haversine_distance_epoch=1.840, train/loss_epoch=2.240, train/acc_epoch=0.355]Epoch 7: 100%|##########| 3714/3714 [4:05:49<00:00,  3.97s/it, loss=2.38, v_num=0, train/loss_step=2.150, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.500, val/haversine_distance_step=1.950, val/loss_epoch=2.210, val/acc_epoch=0.347, val/haversine_distance_epoch=1.840, train/loss_epoch=2.240, train/acc_epoch=0.355]Epoch 0:   9%|8         | 330/3714 [03:13<33:08,  1.70it/s, loss=3.68, v_num=0, train/loss_step=3.410, train/acc_step=0.125]Epoch 0:   9%|8         | 330/3714 [03:13<33:08,  1.70it/s, loss=3.68, v_num=0, train/loss_step=3.460, train/acc_step=0.125]Epoch 0:  13%|#3        | 495/3714 [04:53<31:47,  1.69it/s, loss=3.68, v_num=0, train/loss_step=3.460, train/acc_step=0.125]Epoch 0:  13%|#3        | 495/3714 [04:53<31:47,  1.69it/s, loss=3.66, v_num=0, train/loss_step=3.770, train/acc_step=0.000]Epoch 7:   4%|4         | 165/3714 [4:08:16<89:00:14, 90.28s/it, loss=2.38, v_num=0, train/loss_step=2.150, train/acc_step=0.375, val/loss_step=2.060, val/acc_step=0.500, val/haversine_distance_step=1.950, val/loss_epoch=2.210, val/acc_epoch=0.347, val/haversine_distance_epoch=1.840, train/loss_epoch=2.240, train/acc_epoch=0.355]Epoch 7:   4%|4         | 165/3714 [4:08:16<89:00:14, 90.28s/it, loss=2.1, v_num=0, train/loss_step=1.570, train/acc_step=0.625, val/loss_step=2.060, val/acc_step=0.500, val/haversine_distance_step=1.950, val/loss_epoch=2.210, val/acc_epoch=0.347, val/haversine_distance_epoch=1.840, train/loss_epoch=2.240, train/acc_epoch=0.355] Epoch 0:  18%|#7        | 660/3714 [06:32<30:15,  1.68it/s, loss=3.66, v_num=0, train/loss_step=3.770, train/acc_step=0.000]Epoch 0:  18%|#7        | 660/3714 [06:32<30:15,  1.68it/s, loss=3.62, v_num=0, train/loss_step=3.820, train/acc_step=0.000]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py:727: UserWarning: Detected KeyboardInterrupt, attempting graceful shutdown...
  rank_zero_warn("Detected KeyboardInterrupt, attempting graceful shutdown...")
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]
Epoch 0:  22%|##2       | 825/3714 [08:11<28:42,  1.68it/s, loss=3.62, v_num=0, train/loss_step=3.820, train/acc_step=0.000]Epoch 0:  22%|##2       | 825/3714 [08:11<28:42,  1.68it/s, loss=3.57, v_num=0, train/loss_step=3.410, train/acc_step=0.250]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py:727: UserWarning: Detected KeyboardInterrupt, attempting graceful shutdown...
  rank_zero_warn("Detected KeyboardInterrupt, attempting graceful shutdown...")
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]
Standard output piped to file:
/home/fwolf/lumen-geoguesser/reports/train-resnext101_32x8d-22-04-21-18-15-52.txt
[{'batch_size': 8,
  'cached_df': 'data/complete/data__spacing_0.5__num_class_55.csv',
  'dataset_dirs': ['data/external/', 'data/raw/'],
  'dataset_frac': 1,
  'image_size': 112,
  'load_in_ram': False,
  'lr': 1e-05,
  'models': ['resnext101_32x8d'],
  'num_workers': 32,
  'output_report': PosixPath('/home/fwolf/lumen-geoguesser/reports'),
  'pretrained': True,
  'quick': False,
  'shuffle_before_splitting': False,
  'split_ratios': [0.8, 0.1, 0.1],
  'trainer_checkpoint': None,
  'unfreeze_backbone_at_epoch': 5,
  'unfreeze_blocks': 'all',
  'use_single_images': False,
  'weight_decay': 0},
 {'accelerator': 'gpu',
  'accumulate_grad_batches': None,
  'amp_backend': 'native',
  'amp_level': None,
  'auto_lr_find': False,
  'auto_scale_batch_size': False,
  'auto_select_gpus': False,
  'benchmark': None,
  'check_val_every_n_epoch': 1,
  'checkpoint_callback': None,
  'default_root_dir': None,
  'detect_anomaly': False,
  'deterministic': False,
  'devices': '1',
  'enable_checkpointing': True,
  'enable_model_summary': True,
  'enable_progress_bar': True,
  'fast_dev_run': False,
  'flush_logs_every_n_steps': None,
  'gpus': None,
  'gradient_clip_algorithm': None,
  'gradient_clip_val': None,
  'ipus': None,
  'limit_predict_batches': None,
  'limit_test_batches': None,
  'limit_train_batches': None,
  'limit_val_batches': None,
  'log_every_n_steps': 20,
  'log_gpu_memory': None,
  'logger': True,
  'max_epochs': None,
  'max_steps': -1,
  'max_time': None,
  'min_epochs': None,
  'min_steps': None,
  'move_metrics_to_cpu': False,
  'multiple_trainloader_mode': 'max_size_cycle',
  'num_nodes': 1,
  'num_processes': None,
  'num_sanity_val_steps': 2,
  'overfit_batches': 0.0,
  'plugins': None,
  'precision': 32,
  'prepare_data_per_node': None,
  'process_position': 0,
  'profiler': None,
  'progress_bar_refresh_rate': None,
  'reload_dataloaders_every_n_epochs': 0,
  'replace_sampler_ddp': True,
  'resume_from_checkpoint': None,
  'stochastic_weight_avg': False,
  'strategy': None,
  'sync_batchnorm': False,
  'terminate_on_nan': None,
  'tpu_cores': None,
  'track_grad_norm': -1,
  'val_check_interval': None,
  'weights_save_path': None,
  'weights_summary': 'top'}]
GeoguesserDataModule init
GeoguesserDataset init
GeoguesserDataset init
GeoguesserDataset init
Train, val and test size 26417 3302 3303
Using cache found in /home/fwolf/.cache/torch/hub/pytorch_vision_v0.12.0
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py:91: PossibleUserWarning: `max_epochs` was not set. Setting it to 1000 epochs. To train without an epoch limit, set `max_epochs=-1`.
  rank_zero_warn(
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/torch/cuda/__init__.py:122: UserWarning: 
    Found GPU1 NVIDIA GeForce GTX TITAN Black which is of cuda capability 3.5.
    PyTorch no longer supports this GPU because it is too old.
    The minimum cuda capability supported by this library is 3.7.
    
  warnings.warn(old_gpu_warn % (d, name, major, minor, min_arch // 10, min_arch % 10))
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name     | Type   | Params | In sizes         | Out sizes
-------------------------------------------------------------------
0 | backbone | ResNet | 86.7 M | [8, 3, 112, 112] | [8, 2048]
1 | fc       | Linear | 434 K  | [8, 8192]        | [8, 53]  
-------------------------------------------------------------------
637 K     Trainable params
86.5 M    Non-trainable params
87.2 M    Total params
348.706   Total estimated model params size (MB)
/home/fwolf/lumen-geoguesser/src/model.py:98: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).
  outs_backbone = [self.backbone(image) for image in image_list]
Sanity Checking: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:486: PossibleUserWarning: Your `val_dataloader`'s sampler has shuffling enabled, it is strongly recommended that you turn shuffling off for val/test/predict dataloaders.
  rank_zero_warn(
Sanity Checking DataLoader 0:   0%|          | 0/2 [00:02<?, ?it/s]/home/fwolf/lumen-geoguesser/src/utils_model.py:55: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  preds, indices = torch.topk(F.softmax(y_pred), k = top_k)
tensor([[[42.9020, 17.3889],
         [43.7579, 15.7739],
         [42.5658, 18.4556],
         [45.6467, 18.2464],
         [42.6369, 18.2399]],

        [[42.9020, 17.3889],
         [43.7579, 15.7739],
         [42.5658, 18.4556],
         [45.6923, 15.2861],
         [45.1519, 14.2344]],

        [[45.5219, 19.0959],
         [45.6467, 15.7464],
         [44.8636, 18.8414],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[42.9020, 17.3889],
         [45.1467, 17.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464],
         [43.7579, 15.7739]],

        [[42.7950, 17.7353],
         [45.1467, 17.7464],
         [45.6467, 18.2464],
         [42.9020, 17.3889],
         [45.5219, 19.0959]],

        [[44.8636, 18.8414],
         [45.1467, 17.7464],
         [42.9020, 17.3889],
         [45.1955, 16.7530],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1955, 16.7530],
         [43.6467, 16.7464],
         [46.1190, 17.2123],
         [45.5219, 19.0959]],

        [[43.6467, 16.2464],
         [44.6467, 15.7464],
         [42.9020, 17.3889],
         [46.1190, 17.2123],
         [45.1519, 14.2344]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1452, 14.8042],
        [43.7600, 16.7402],
        [45.2952, 13.5840],
        [44.0682, 15.6968],
        [45.2783, 14.6171],
        [46.0015, 15.8033],
        [45.2670, 16.1841],
        [43.3935, 17.0299]], device='cuda:0', dtype=torch.float64)
1.2625075667357755
tensor([[[42.9020, 17.3889],
         [42.7950, 17.7353],
         [42.5658, 18.4556],
         [44.6467, 15.7464],
         [45.1467, 16.2464]],

        [[46.1190, 17.2123],
         [43.7579, 15.7739],
         [45.4799, 14.2531],
         [45.1519, 14.2344],
         [45.1467, 17.7464]],

        [[43.7579, 15.7739],
         [42.9020, 17.3889],
         [46.1190, 17.2123],
         [45.1955, 16.7530],
         [44.1467, 16.2464]],

        [[43.7579, 15.7739],
         [42.9020, 17.3889],
         [45.1819, 19.2545],
         [45.1467, 18.7464],
         [43.4865, 17.1963]],

        [[42.9020, 17.3889],
         [45.1955, 16.7530],
         [43.7579, 15.7739],
         [45.1519, 14.2344],
         [46.1190, 17.2123]],

        [[44.8636, 18.8414],
         [44.6467, 15.7464],
         [43.7579, 15.7739],
         [45.1955, 16.7530],
         [42.9020, 17.3889]],

        [[42.6369, 18.2399],
         [45.6467, 15.7464],
         [42.9020, 17.3889],
         [46.1190, 17.2123],
         [44.6467, 15.7464]],

        [[45.6467, 18.2464],
         [44.6467, 15.7464],
         [45.6467, 18.7464],
         [43.7579, 15.7739],
         [45.1955, 16.7530]]], device='cuda:0', dtype=torch.float64)
tensor([[45.9744, 16.7345],
        [42.7938, 17.8685],
        [45.0726, 13.6368],
        [45.1747, 18.6541],
        [45.1413, 13.7090],
        [46.1044, 15.8688],
        [43.5720, 15.9271],
        [44.8908, 15.2874]], device='cuda:0', dtype=torch.float64)
1.4829715433746706
Sanity Checking DataLoader 0: 100%|##########| 2/2 [00:03<00:00,  1.91s/it]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `validation_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
                                                                           Training: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:   0%|          | 0/3714 [00:00<?, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_epoch_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:   4%|4         | 165/3714 [01:38<35:23,  1.67it/s]Epoch 0:   4%|4         | 165/3714 [01:38<35:23,  1.67it/s, loss=3.67, v_num=0, train/loss_step=3.570, train/acc_step=0.000]Epoch 0:   9%|8         | 330/3714 [03:15<33:23,  1.69it/s, loss=3.67, v_num=0, train/loss_step=3.570, train/acc_step=0.000]Epoch 0:   9%|8         | 330/3714 [03:15<33:23,  1.69it/s, loss=3.68, v_num=0, train/loss_step=3.770, train/acc_step=0.000]Epoch 0:  13%|#3        | 495/3714 [04:49<31:24,  1.71it/s, loss=3.68, v_num=0, train/loss_step=3.770, train/acc_step=0.000]Epoch 0:  13%|#3        | 495/3714 [04:49<31:24,  1.71it/s, loss=3.63, v_num=0, train/loss_step=3.400, train/acc_step=0.000]Epoch 0:  18%|#7        | 660/3714 [06:24<29:39,  1.72it/s, loss=3.63, v_num=0, train/loss_step=3.400, train/acc_step=0.000]Epoch 0:  18%|#7        | 660/3714 [06:24<29:39,  1.72it/s, loss=3.68, v_num=0, train/loss_step=3.820, train/acc_step=0.125]Epoch 0:  22%|##2       | 825/3714 [08:00<28:01,  1.72it/s, loss=3.68, v_num=0, train/loss_step=3.820, train/acc_step=0.125]Epoch 0:  22%|##2       | 825/3714 [08:00<28:01,  1.72it/s, loss=3.59, v_num=0, train/loss_step=3.420, train/acc_step=0.000]Epoch 0:  27%|##6       | 990/3714 [09:36<26:26,  1.72it/s, loss=3.59, v_num=0, train/loss_step=3.420, train/acc_step=0.000]Epoch 0:  27%|##6       | 990/3714 [09:36<26:26,  1.72it/s, loss=3.62, v_num=0, train/loss_step=3.690, train/acc_step=0.000]Epoch 0:  31%|###1      | 1155/3714 [11:12<24:49,  1.72it/s, loss=3.62, v_num=0, train/loss_step=3.690, train/acc_step=0.000]Epoch 0:  31%|###1      | 1155/3714 [11:12<24:49,  1.72it/s, loss=3.66, v_num=0, train/loss_step=3.280, train/acc_step=0.250]Epoch 0:  36%|###5      | 1320/3714 [12:47<23:11,  1.72it/s, loss=3.66, v_num=0, train/loss_step=3.280, train/acc_step=0.250]Epoch 0:  36%|###5      | 1320/3714 [12:47<23:11,  1.72it/s, loss=3.57, v_num=0, train/loss_step=3.580, train/acc_step=0.000]Epoch 0:  40%|###9      | 1485/3714 [14:23<21:35,  1.72it/s, loss=3.57, v_num=0, train/loss_step=3.580, train/acc_step=0.000]Epoch 0:  40%|###9      | 1485/3714 [14:23<21:35,  1.72it/s, loss=3.65, v_num=0, train/loss_step=3.630, train/acc_step=0.000]Epoch 0:  44%|####4     | 1650/3714 [15:59<20:00,  1.72it/s, loss=3.65, v_num=0, train/loss_step=3.630, train/acc_step=0.000]Epoch 0:  44%|####4     | 1650/3714 [15:59<20:00,  1.72it/s, loss=3.61, v_num=0, train/loss_step=4.400, train/acc_step=0.000]Epoch 0:  49%|####8     | 1815/3714 [17:33<18:21,  1.72it/s, loss=3.61, v_num=0, train/loss_step=4.400, train/acc_step=0.000]Epoch 0:  49%|####8     | 1815/3714 [17:33<18:21,  1.72it/s, loss=3.63, v_num=0, train/loss_step=3.900, train/acc_step=0.000]Epoch 0:  53%|#####3    | 1980/3714 [19:08<16:45,  1.72it/s, loss=3.63, v_num=0, train/loss_step=3.900, train/acc_step=0.000]Epoch 0:  53%|#####3    | 1980/3714 [19:08<16:45,  1.72it/s, loss=3.59, v_num=0, train/loss_step=3.650, train/acc_step=0.250]Epoch 0:  58%|#####7    | 2145/3714 [20:43<15:09,  1.72it/s, loss=3.59, v_num=0, train/loss_step=3.650, train/acc_step=0.250]Epoch 0:  58%|#####7    | 2145/3714 [20:43<15:09,  1.72it/s, loss=3.67, v_num=0, train/loss_step=3.540, train/acc_step=0.000]Epoch 0:  62%|######2   | 2310/3714 [22:18<13:33,  1.73it/s, loss=3.67, v_num=0, train/loss_step=3.540, train/acc_step=0.000]Epoch 0:  62%|######2   | 2310/3714 [22:18<13:33,  1.73it/s, loss=3.55, v_num=0, train/loss_step=3.270, train/acc_step=0.000]Epoch 0:  67%|######6   | 2475/3714 [23:51<11:56,  1.73it/s, loss=3.55, v_num=0, train/loss_step=3.270, train/acc_step=0.000]Epoch 0:  67%|######6   | 2475/3714 [23:51<11:56,  1.73it/s, loss=3.52, v_num=0, train/loss_step=3.420, train/acc_step=0.125]Epoch 0:  71%|#######1  | 2640/3714 [25:26<10:21,  1.73it/s, loss=3.52, v_num=0, train/loss_step=3.420, train/acc_step=0.125]Epoch 0:  71%|#######1  | 2640/3714 [25:26<10:21,  1.73it/s, loss=3.51, v_num=0, train/loss_step=3.310, train/acc_step=0.000]Epoch 0:  76%|#######5  | 2805/3714 [27:02<08:45,  1.73it/s, loss=3.51, v_num=0, train/loss_step=3.310, train/acc_step=0.000]Epoch 0:  76%|#######5  | 2805/3714 [27:02<08:45,  1.73it/s, loss=3.59, v_num=0, train/loss_step=3.430, train/acc_step=0.000]Epoch 0:  80%|#######9  | 2970/3714 [28:38<07:10,  1.73it/s, loss=3.59, v_num=0, train/loss_step=3.430, train/acc_step=0.000]Epoch 0:  80%|#######9  | 2970/3714 [28:38<07:10,  1.73it/s, loss=3.52, v_num=0, train/loss_step=3.600, train/acc_step=0.125]Epoch 0:  84%|########4 | 3135/3714 [30:14<05:35,  1.73it/s, loss=3.52, v_num=0, train/loss_step=3.600, train/acc_step=0.125]Epoch 0:  84%|########4 | 3135/3714 [30:14<05:35,  1.73it/s, loss=3.45, v_num=0, train/loss_step=3.210, train/acc_step=0.125]Epoch 0:  89%|########8 | 3300/3714 [31:52<03:59,  1.73it/s, loss=3.45, v_num=0, train/loss_step=3.210, train/acc_step=0.125]Epoch 0:  89%|########8 | 3300/3714 [31:52<03:59,  1.73it/s, loss=3.41, v_num=0, train/loss_step=3.380, train/acc_step=0.125]Epoch 0:  89%|########8 | 3302/3714 [31:53<03:58,  1.73it/s, loss=3.41, v_num=0, train/loss_step=3.380, train/acc_step=0.125]Epoch 0:  89%|########8 | 3302/3714 [31:53<03:58,  1.73it/s, loss=3.44, v_num=0, train/loss_step=3.750, train/acc_step=0.000]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:05<?, ?it/s][Atensor([[[45.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3483, 14.0500],
        [46.2829, 16.1221],
        [45.3537, 17.2267],
        [45.3112, 17.6693],
        [44.2994, 15.8407],
        [45.3471, 16.1440],
        [45.0652, 15.0065],
        [43.5372, 16.0568]], device='cuda:0', dtype=torch.float64)
0.7206347993310447
tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.1467, 15.7464]],

        [[45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.9421, 15.7270],
        [43.9611, 15.5975],
        [45.4446, 16.8156],
        [46.2570, 16.7950],
        [44.1677, 15.5606],
        [45.8871, 16.3347],
        [46.0625, 15.9077],
        [43.2419, 17.2676]], device='cuda:0', dtype=torch.float64)
1.0866435213599084
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6679, 15.9271],
        [45.5640, 16.0254],
        [43.2085, 17.1923],
        [45.1737, 18.1203],
        [42.9457, 17.5455],
        [43.9595, 15.6002],
        [45.3501, 14.1123],
        [45.2952, 13.5840]], device='cuda:0', dtype=torch.float64)
1.0353503250412035
tensor([[[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [44.1467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4230, 14.3251],
        [44.3325, 15.8512],
        [44.4850, 15.7935],
        [42.9457, 17.5455],
        [45.2917, 16.6445],
        [45.2092, 16.7152],
        [45.2161, 14.2114],
        [43.7731, 16.3310]], device='cuda:0', dtype=torch.float64)
1.0124719138186666
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1519, 14.2344],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.6740, 16.2577],
        [45.9975, 16.8492],
        [45.5450, 16.0574],
        [45.4033, 13.8266],
        [45.2628, 18.4081],
        [45.7368, 15.4718],
        [43.9254, 15.9131],
        [45.4770, 16.8396]], device='cuda:0', dtype=torch.float64)
0.7294831560586943
tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8493, 16.1864],
        [43.9395, 15.8324],
        [45.2481, 17.1405],
        [45.8141, 17.4461],
        [45.1866, 15.5608],
        [45.5376, 15.5362],
        [46.4209, 16.6961],
        [45.1104, 18.6274]], device='cuda:0', dtype=torch.float64)
0.55280241742806
tensor([[[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0092, 14.0975],
        [43.5218, 17.0594],
        [45.4376, 14.8658],
        [46.1018, 16.1690],
        [44.8443, 15.4978],
        [45.9333, 17.4934],
        [45.5383, 15.9125],
        [45.8455, 16.1337]], device='cuda:0', dtype=torch.float64)
0.6024297367419607
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1519, 14.2344]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.1065, 16.1826],
        [43.5908, 16.0943],
        [45.3844, 17.0895],
        [46.2959, 16.3566],
        [45.3301, 18.5992],
        [45.2817, 14.0759],
        [43.5819, 16.9595],
        [45.0738, 17.9030]], device='cuda:0', dtype=torch.float64)
1.0030172945188567
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1519, 14.2344],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.8969, 16.1063],
        [45.2872, 15.1829],
        [45.7173, 15.7795],
        [45.9305, 16.3178],
        [43.6222, 16.1336],
        [46.1712, 15.9990],
        [43.6562, 16.2580],
        [45.9752, 16.0925]], device='cuda:0', dtype=torch.float64)
0.9735292394110837
tensor([[[45.1467, 13.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464]],

        [[45.6467, 17.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5417, 16.4196],
        [46.3154, 16.7805],
        [45.9195, 16.7872],
        [43.3619, 17.2559],
        [45.8288, 16.3477],
        [45.1695, 17.3266],
        [46.1864, 16.3045],
        [45.7205, 18.8335]], device='cuda:0', dtype=torch.float64)
0.6819153318923915
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[44.6467, 15.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5379, 16.5696],
        [45.5657, 15.9666],
        [44.6137, 14.9770],
        [43.1092, 17.3588],
        [45.1394, 17.3865],
        [45.7761, 15.6347],
        [45.3795, 13.6949],
        [44.5741, 15.4159]], device='cuda:0', dtype=torch.float64)
0.7407885929552025
tensor([[[45.6467, 15.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [44.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 18.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7043, 15.3064],
        [46.0346, 16.6402],
        [45.2811, 15.2759],
        [44.7453, 15.3866],
        [45.3013, 17.0511],
        [45.0971, 17.8206],
        [45.4639, 16.4933],
        [45.2585, 18.2205]], device='cuda:0', dtype=torch.float64)
0.4087634286502428
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [45.1519, 14.2344],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.1519, 14.2344],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [43.1550, 17.2484],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.1800, 16.2853],
        [46.0821, 16.3164],
        [45.3858, 18.5762],
        [43.2424, 17.2260],
        [44.4222, 15.5372],
        [42.9590, 17.3198],
        [45.3042, 18.3827],
        [45.1979, 14.8873]], device='cuda:0', dtype=torch.float64)
1.0431495188088844
tensor([[[45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1519, 14.2344]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0842, 14.8895],
        [45.3545, 14.4185],
        [45.2768, 18.8320],
        [45.6837, 15.7526],
        [46.2996, 16.1737],
        [43.1110, 17.4461],
        [45.3419, 15.3465],
        [45.4602, 14.8272]], device='cuda:0', dtype=torch.float64)
0.5923228738293063
tensor([[[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1304, 15.7688],
        [45.9887, 15.8425],
        [45.8928, 16.8074],
        [45.9673, 17.1506],
        [44.9655, 15.0932],
        [45.3265, 15.3873],
        [46.3946, 16.2575],
        [43.6668, 16.4946]], device='cuda:0', dtype=torch.float64)
0.6499553258060039
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 18.7464]],

        [[45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3752, 15.1231],
        [45.4222, 16.1420],
        [45.6704, 15.4738],
        [43.9849, 15.9722],
        [45.5086, 16.0456],
        [46.0231, 16.2949],
        [45.1438, 14.1036],
        [45.6087, 15.6400]], device='cuda:0', dtype=torch.float64)
0.42715323498476165
tensor([[[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 18.2464],
         [45.6467, 15.7464]],

        [[44.1467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2289, 17.9791],
        [44.6860, 15.4336],
        [43.0599, 17.5356],
        [43.8392, 16.1876],
        [42.5598, 18.3612],
        [45.0115, 18.7601],
        [45.7939, 15.8291],
        [45.3776, 15.4132]], device='cuda:0', dtype=torch.float64)
1.2013634643331552
tensor([[[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4434, 14.9364],
        [44.0952, 15.7008],
        [45.3616, 14.5592],
        [45.4752, 16.7756],
        [44.5435, 15.1477],
        [45.4969, 14.9886],
        [45.4498, 13.5693],
        [45.2335, 15.9285]], device='cuda:0', dtype=torch.float64)
0.5108251805566243
tensor([[[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3458, 14.3994],
        [45.7785, 16.8227],
        [45.7549, 15.9868],
        [45.7482, 18.6766],
        [45.4358, 17.3162],
        [45.4925, 17.6528],
        [44.9672, 15.5163],
        [45.5244, 19.0552]], device='cuda:0', dtype=torch.float64)
0.2564806342560525
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1519, 14.2344],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2701, 18.6700],
        [43.4482, 16.7143],
        [45.3863, 18.6955],
        [45.6093, 18.4917],
        [45.2712, 17.2561],
        [43.3913, 17.0515],
        [43.7157, 16.2519],
        [45.9127, 16.6432]], device='cuda:0', dtype=torch.float64)
0.9915615058935606
tensor([[[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464]],

        [[45.1467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1906, 17.8526],
        [45.8076, 15.9918],
        [45.4215, 15.5734],
        [45.1328, 16.3455],
        [44.3191, 15.4916],
        [45.5052, 16.0060],
        [45.0118, 13.9733],
        [45.3253, 18.6890]], device='cuda:0', dtype=torch.float64)
0.42889272024826464
tensor([[[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 18.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1519, 14.2344],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.7760, 15.1469],
        [44.8464, 15.1258],
        [44.9670, 18.9374],
        [45.6095, 17.1015],
        [45.7364, 15.8820],
        [45.4724, 18.0593],
        [42.9146, 17.4158],
        [43.4964, 16.7537]], device='cuda:0', dtype=torch.float64)
0.952126089214913
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [43.1550, 17.2484],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 18.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8970, 16.2417],
        [42.8956, 17.5433],
        [45.6645, 18.1240],
        [45.0953, 18.7331],
        [43.6419, 16.1838],
        [45.8031, 17.6238],
        [45.8177, 16.1374],
        [45.1190, 15.2460]], device='cuda:0', dtype=torch.float64)
0.875153470233959
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7470, 18.4946],
        [45.4659, 15.1100],
        [46.0295, 15.7727],
        [45.7960, 15.7771],
        [43.1916, 17.3721],
        [45.5190, 16.6917],
        [45.5916, 18.1250],
        [43.2212, 17.3583]], device='cuda:0', dtype=torch.float64)
0.8921933287528989
tensor([[[45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2271, 19.3324],
        [45.4764, 15.6059],
        [45.1877, 18.4094],
        [45.5360, 15.9473],
        [43.6980, 16.4562],
        [46.1565, 16.4405],
        [45.1149, 13.7598],
        [45.6521, 17.2934]], device='cuda:0', dtype=torch.float64)
0.5713284885508905
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.0040, 15.8124],
        [45.3743, 15.5179],
        [45.4355, 18.8675],
        [45.5937, 16.0441],
        [45.1128, 15.2345],
        [45.6447, 16.4830],
        [44.2322, 15.3911],
        [45.9133, 16.5941]], device='cuda:0', dtype=torch.float64)
0.5725794501653995
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [44.1467, 15.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4621, 13.5225],
        [45.3482, 14.5916],
        [43.7243, 16.1113],
        [45.3375, 18.5575],
        [45.3777, 14.9567],
        [44.4952, 15.5809],
        [43.5557, 15.9641],
        [45.3741, 15.1045]], device='cuda:0', dtype=torch.float64)
0.7902493944874815
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.1519, 14.2344],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4462, 17.6210],
        [45.1395, 15.0951],
        [45.3647, 14.4893],
        [44.5401, 15.4388],
        [45.3894, 18.1704],
        [45.5280, 16.6874],
        [45.2340, 19.0506],
        [45.3573, 14.7401]], device='cuda:0', dtype=torch.float64)
0.3479533851644865
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 15.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8875, 16.4858],
        [46.2236, 16.4699],
        [43.9458, 15.6538],
        [45.7525, 18.3809],
        [45.1484, 16.1566],
        [45.3113, 15.6377],
        [45.2556, 18.8815],
        [44.5369, 15.4559]], device='cuda:0', dtype=torch.float64)
0.6033239445605635
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.7234, 14.8979],
        [46.2313, 16.2629],
        [43.6341, 16.2178],
        [46.2104, 16.4895],
        [45.3688, 15.3499],
        [45.9658, 16.0540],
        [43.0388, 17.5368],
        [45.1598, 13.7039]], device='cuda:0', dtype=torch.float64)
0.9640422083866347
tensor([[[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [44.1467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.9879, 13.9658],
        [43.9037, 16.4565],
        [45.7531, 17.6169],
        [45.2465, 16.4875],
        [45.7623, 18.6012],
        [44.5123, 15.2141],
        [42.6026, 18.3048],
        [45.2995, 17.2031]], device='cuda:0', dtype=torch.float64)
0.9882291545860795
tensor([[[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3928, 16.6229],
        [45.5547, 15.3620],
        [44.0209, 15.3548],
        [45.5643, 17.7864],
        [45.9173, 17.1431],
        [45.3430, 13.5566],
        [44.9838, 15.4776],
        [45.1031, 14.1510]], device='cuda:0', dtype=torch.float64)
0.4834545144196586
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5173, 16.9097],
        [45.2952, 15.2518],
        [45.2937, 18.6837],
        [43.6183, 16.2521],
        [45.1901, 14.9975],
        [43.9172, 15.6456],
        [45.5513, 18.0236],
        [45.5346, 18.5736]], device='cuda:0', dtype=torch.float64)
0.6410183274043786
tensor([[[45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 18.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1053, 15.2169],
        [44.8688, 13.8428],
        [44.7892, 15.3687],
        [45.2043, 14.8230],
        [45.6841, 15.6844],
        [46.2326, 16.3860],
        [45.1535, 18.7354],
        [45.2683, 13.8630]], device='cuda:0', dtype=torch.float64)
0.4775433537125082
tensor([[[45.6467, 15.7464],
         [46.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5852, 15.4337],
        [44.4817, 15.4438],
        [45.1473, 16.4287],
        [46.0675, 16.8421],
        [45.3576, 13.8097],
        [46.2418, 16.1733],
        [46.0732, 16.4554],
        [44.7741, 14.8988]], device='cuda:0', dtype=torch.float64)
0.512878560820932
tensor([[[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2397, 17.8296],
        [44.0072, 15.7056],
        [45.2250, 13.8146],
        [46.2774, 16.4910],
        [45.4266, 18.6424],
        [45.3740, 15.5194],
        [45.7201, 16.7069],
        [45.2135, 17.3736]], device='cuda:0', dtype=torch.float64)
0.5104243073166222
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [44.1467, 15.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.4751, 17.1351],
        [43.0534, 17.4876],
        [43.9488, 16.0902],
        [45.1804, 13.6870],
        [46.1640, 16.9678],
        [45.3130, 16.1933],
        [42.6278, 18.1795],
        [44.0710, 15.8319]], device='cuda:0', dtype=torch.float64)
1.4281260470685546
tensor([[[45.6467, 17.2464],
         [43.1550, 17.2484],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 18.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.4521, 17.0289],
        [45.3145, 15.2877],
        [45.8824, 17.0003],
        [43.7639, 16.0439],
        [45.5773, 17.7054],
        [45.7176, 17.0130],
        [45.7300, 18.1105],
        [45.3106, 14.2670]], device='cuda:0', dtype=torch.float64)
0.7098156963137587
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1519, 14.2344],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1519, 14.2344],
         [44.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5183, 16.9097],
        [45.1861, 15.4416],
        [43.4812, 16.9146],
        [45.2811, 16.8680],
        [42.4568, 18.4372],
        [46.0624, 16.5608],
        [43.5456, 16.4192],
        [46.4141, 16.7391]], device='cuda:0', dtype=torch.float64)
1.1961062054190077
tensor([[[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464]],

        [[45.6467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1526, 15.7159],
        [46.1273, 17.0555],
        [46.3025, 16.4738],
        [45.2041, 15.4157],
        [45.3689, 13.8804],
        [43.0476, 17.4481],
        [45.0726, 13.6368],
        [45.8077, 15.4883]], device='cuda:0', dtype=torch.float64)
0.7725640607192822
tensor([[[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1519, 14.2344]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.6419, 15.2412],
        [43.4699, 17.2597],
        [45.2969, 14.8905],
        [45.2974, 16.6366],
        [45.3124, 15.7911],
        [45.3003, 18.4265],
        [45.4885, 16.1156],
        [45.1848, 15.4664]], device='cuda:0', dtype=torch.float64)
0.6793693565133625
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4588, 17.1999],
        [43.7813, 16.3388],
        [44.8109, 15.5570],
        [45.6383, 15.5355],
        [45.3399, 18.9392],
        [43.1648, 17.2233],
        [43.7514, 16.2788],
        [43.5923, 16.5906]], device='cuda:0', dtype=torch.float64)
1.2037321505740657
tensor([[[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.1519, 14.2344],
         [45.1467, 15.2464],
         [46.1467, 15.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5843, 18.0628],
        [42.9474, 17.5635],
        [45.4674, 14.6835],
        [44.9338, 19.0082],
        [45.2505, 15.3223],
        [44.5891, 14.9999],
        [45.8177, 16.0706],
        [45.3333, 14.2956]], device='cuda:0', dtype=torch.float64)
0.6765293314467273
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [43.1550, 17.2484],
         [43.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.1971, 16.4819],
        [45.2030, 13.9884],
        [44.3255, 15.8689],
        [44.0988, 15.3822],
        [45.1411, 13.7931],
        [44.7794, 15.1020],
        [45.3743, 13.9106],
        [45.1593, 15.1976]], device='cuda:0', dtype=torch.float64)
0.6696810283427646
tensor([[[44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.0326, 17.6383],
        [45.6792, 15.4423],
        [45.2668, 13.6896],
        [46.0402, 15.8594],
        [43.9977, 16.3164],
        [45.5534, 17.8960],
        [45.0995, 17.8552],
        [45.9482, 16.2386]], device='cuda:0', dtype=torch.float64)
0.7749517480246135
tensor([[[45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0392, 14.9155],
        [45.3945, 18.3171],
        [45.5186, 17.2767],
        [45.9412, 15.8777],
        [45.7719, 15.7160],
        [45.3820, 15.5492],
        [46.2772, 16.0338],
        [45.3878, 15.4530]], device='cuda:0', dtype=torch.float64)
0.3406490085823637
tensor([[[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 18.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5866, 17.9120],
        [45.1835, 18.6736],
        [45.5685, 17.2656],
        [45.5260, 16.9138],
        [45.2966, 14.5183],
        [43.8941, 16.3390],
        [43.4892, 16.9875],
        [44.7416, 15.4058]], device='cuda:0', dtype=torch.float64)
0.8150473580404459
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7791, 17.6029],
        [43.8082, 16.5387],
        [44.5887, 15.2347],
        [44.9587, 15.1099],
        [45.1478, 16.4225],
        [44.1945, 15.2562],
        [45.0498, 13.7378],
        [45.5067, 15.5140]], device='cuda:0', dtype=torch.float64)
0.7567014573477849
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [43.1550, 17.2484]],

        [[45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.7488, 16.2511],
        [44.0815, 16.1997],
        [45.1755, 15.6145],
        [45.7927, 18.8037],
        [45.4082, 18.6828],
        [46.1569, 16.0644],
        [45.2743, 14.2516],
        [45.2509, 13.8022]], device='cuda:0', dtype=torch.float64)
0.7179193646124402
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[45.6467, 17.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[44.1467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6677, 15.3916],
        [44.8968, 13.9589],
        [43.6565, 16.4274],
        [45.3850, 15.7506],
        [44.2075, 15.8317],
        [45.2802, 18.4373],
        [45.7240, 18.5304],
        [43.7197, 16.0034]], device='cuda:0', dtype=torch.float64)
0.8905460702068115
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1519, 14.2344],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4896, 14.0358],
        [46.2079, 15.8599],
        [45.2222, 15.6693],
        [45.4854, 16.7614],
        [44.0071, 15.9894],
        [45.5125, 15.7033],
        [43.7689, 16.3009],
        [45.5067, 13.9743]], device='cuda:0', dtype=torch.float64)
0.6359228256357284
tensor([[[45.6467, 17.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2432, 15.0615],
        [45.7464, 16.9484],
        [43.6345, 16.1013],
        [45.5798, 15.6236],
        [45.1711, 14.0552],
        [45.2070, 17.3119],
        [45.8795, 16.1695],
        [45.6369, 15.8148]], device='cuda:0', dtype=torch.float64)
0.49430745468571297
tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [43.1550, 17.2484],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 18.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6836, 15.6564],
        [45.1513, 13.8192],
        [45.3536, 15.7951],
        [45.4551, 17.4603],
        [45.2214, 19.1813],
        [46.3605, 16.6448],
        [42.5173, 18.3609],
        [45.4789, 15.4170]], device='cuda:0', dtype=torch.float64)
0.7095839828818045
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1729, 18.0466],
        [45.4353, 17.1721],
        [45.4861, 13.5375],
        [45.7170, 16.6883],
        [45.3250, 17.8068],
        [43.4452, 16.6380],
        [45.1802, 13.9305],
        [45.1847, 14.0082]], device='cuda:0', dtype=torch.float64)
0.4995745829043437
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0851, 18.6961],
        [43.5846, 16.8979],
        [45.2458, 19.1703],
        [45.8274, 16.1331],
        [44.1870, 15.3660],
        [45.1451, 18.3221],
        [43.9383, 15.8841],
        [45.5983, 16.3569]], device='cuda:0', dtype=torch.float64)
0.8692549139851966
tensor([[[45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 18.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1519, 14.2344]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1755, 17.3135],
        [45.5456, 18.2518],
        [45.3489, 16.5312],
        [45.1783, 17.8602],
        [45.1337, 14.7678],
        [45.2546, 17.5353],
        [45.2434, 13.6641],
        [45.2108, 15.2601]], device='cuda:0', dtype=torch.float64)
0.41196460960252385
tensor([[[45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8336, 15.8525],
        [43.8803, 15.9173],
        [45.3771, 15.4127],
        [44.6577, 15.0852],
        [45.2547, 18.2326],
        [45.6435, 16.8005],
        [45.1950, 19.1576],
        [44.2334, 15.3024]], device='cuda:0', dtype=torch.float64)
0.6596244094497885
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464],
         [43.1550, 17.2484]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [43.1550, 17.2484],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.0454, 16.9534],
        [45.7499, 17.5705],
        [45.8356, 16.0479],
        [45.2772, 17.7833],
        [45.4493, 18.1680],
        [43.8371, 16.5009],
        [45.3527, 16.4153],
        [45.5724, 15.5582]], device='cuda:0', dtype=torch.float64)
0.5957259795376355
tensor([[[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1519, 14.2344]],

        [[44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1519, 14.2344]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7141, 16.1197],
        [45.5537, 17.5047],
        [44.6172, 15.3619],
        [43.9963, 16.3457],
        [45.1889, 19.0166],
        [45.5792, 18.2397],
        [44.2078, 15.7254],
        [45.4040, 15.1887]], device='cuda:0', dtype=torch.float64)
0.6526828475015554
tensor([[[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464]],

        [[45.1467, 15.2464],
         [45.1519, 14.2344],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.7917, 16.6594],
        [45.4337, 15.4420],
        [45.6443, 18.1474],
        [45.7961, 15.8971],
        [45.4133, 14.5561],
        [45.9240, 15.7174],
        [45.3521, 14.4196],
        [45.4062, 17.2240]], device='cuda:0', dtype=torch.float64)
0.48573940302722984
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.7464]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0251, 15.0125],
        [45.4306, 13.5582],
        [45.6193, 16.1029],
        [43.8527, 15.9382],
        [45.2171, 17.2958],
        [45.8602, 15.6921],
        [43.6436, 16.1917],
        [45.6000, 16.1071]], device='cuda:0', dtype=torch.float64)
0.7116725360679297
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3749, 18.3117],
        [45.1426, 18.3141],
        [46.1034, 16.1850],
        [45.2194, 14.0517],
        [45.7733, 17.0351],
        [45.1299, 13.8658],
        [46.2863, 16.1728],
        [44.8258, 15.0301]], device='cuda:0', dtype=torch.float64)
0.41906768924036064
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 15.7464]],

        [[45.6467, 18.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6792, 16.8608],
        [42.9644, 17.3939],
        [45.5424, 17.9913],
        [45.3922, 16.8109],
        [45.3332, 18.4200],
        [45.3373, 13.8547],
        [45.6136, 18.1451],
        [45.1902, 18.1498]], device='cuda:0', dtype=torch.float64)
0.6113031354095934
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1519, 14.2344],
         [44.6467, 15.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8068, 16.0224],
        [46.3311, 16.7793],
        [43.8630, 15.7449],
        [45.2292, 18.4096],
        [46.1313, 16.1956],
        [45.7982, 16.9478],
        [42.6515, 18.1086],
        [43.1088, 17.3646]], device='cuda:0', dtype=torch.float64)
1.1805464084579007
tensor([[[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.0836, 15.4307],
        [45.7184, 17.2651],
        [45.1741, 18.1068],
        [45.3303, 16.5316],
        [44.7907, 15.5799],
        [45.2780, 16.4882],
        [45.6314, 17.7973],
        [43.8786, 15.7508]], device='cuda:0', dtype=torch.float64)
0.6836816503026594
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 15.7464],
         [45.6467, 18.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1519, 14.2344],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8765, 16.4209],
        [46.1332, 15.9563],
        [46.4414, 16.6152],
        [45.1353, 16.1821],
        [45.2223, 15.2173],
        [45.8611, 17.2225],
        [45.4106, 14.5572],
        [45.3563, 16.7478]], device='cuda:0', dtype=torch.float64)
0.39861703350120625
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1519, 14.2344],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.1467, 15.2464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [43.1550, 17.2484]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [43.1550, 17.2484]]], device='cuda:0', dtype=torch.float64)
tensor([[44.9524, 13.9613],
        [46.3611, 16.2228],
        [45.3402, 16.7838],
        [44.0424, 15.8213],
        [43.9343, 15.8868],
        [45.6066, 17.5742],
        [43.8365, 15.9066],
        [43.2414, 17.3345]], device='cuda:0', dtype=torch.float64)
1.1559638386111075
tensor([[[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [43.1550, 17.2484]]], device='cuda:0', dtype=torch.float64)
tensor([[44.9726, 14.9575],
        [42.7240, 18.0293],
        [44.1787, 15.4291],
        [45.4089, 15.1750],
        [45.5428, 17.3008],
        [45.7399, 15.7714],
        [46.0487, 17.1493],
        [45.6436, 16.8005]], device='cuda:0', dtype=torch.float64)
0.7632802663910809
tensor([[[45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[45.6467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.2105, 15.4464],
        [45.8574, 16.1296],
        [46.1002, 17.1433],
        [46.1541, 16.3723],
        [44.8560, 15.0117],
        [45.2783, 14.6171],
        [46.2868, 16.7089],
        [44.0179, 15.5240]], device='cuda:0', dtype=torch.float64)
0.7586465870997599
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7959, 16.6979],
        [46.3745, 16.4927],
        [46.0311, 16.3696],
        [45.2469, 17.4610],
        [44.6494, 15.5282],
        [43.8794, 16.0978],
        [45.6548, 17.1420],
        [45.0964, 14.9545]], device='cuda:0', dtype=torch.float64)
0.6422644885286304
tensor([[[45.1467, 15.7464],
         [45.6467, 15.7464],
         [43.1550, 17.2484],
         [45.1467, 15.2464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.0997, 16.5133],
        [45.7230, 18.8342],
        [45.7343, 16.6299],
        [45.8193, 18.7134],
        [45.2937, 17.7979],
        [44.3093, 15.7787],
        [46.2209, 16.2867],
        [43.9936, 16.3118]], device='cuda:0', dtype=torch.float64)
0.7131908451005475
tensor([[[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [43.1550, 17.2484]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7220, 18.8648],
        [46.3393, 16.2416],
        [45.5118, 15.4878],
        [45.2757, 15.8918],
        [45.3110, 14.5526],
        [44.0253, 15.6166],
        [45.2015, 17.5206],
        [43.5529, 15.9922]], device='cuda:0', dtype=torch.float64)
0.8059892437415815
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2908, 13.7491],
        [45.6617, 17.0105],
        [45.7244, 17.1436],
        [46.0793, 17.1843],
        [45.8146, 15.9477],
        [46.0260, 15.9989],
        [45.1294, 16.3721],
        [46.2918, 16.6836]], device='cuda:0', dtype=torch.float64)
0.35526802824229115
tensor([[[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3922, 17.1632],
        [45.9156, 17.0794],
        [45.7852, 15.6335],
        [45.7120, 17.7101],
        [45.3696, 14.8909],
        [45.2919, 14.6535],
        [43.9497, 15.4785],
        [45.2908, 17.4694]], device='cuda:0', dtype=torch.float64)
0.4705077742688355
tensor([[[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.1467, 18.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.0045, 17.4774],
        [43.8198, 16.5999],
        [45.1416, 14.2245],
        [45.8341, 15.6905],
        [46.3775, 16.5832],
        [42.8043, 17.8209],
        [44.4821, 16.0101],
        [43.5648, 16.6575]], device='cuda:0', dtype=torch.float64)
1.4358014796459917
tensor([[[44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1519, 14.2344],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.7464],
         [45.6467, 17.7464]],

        [[45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [43.1550, 17.2484],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.4774, 16.6192],
        [43.9143, 15.6433],
        [45.2631, 17.9059],
        [45.1774, 14.2327],
        [46.3984, 16.7949],
        [45.3671, 17.5755],
        [46.4568, 16.2965],
        [46.0542, 15.7452]], device='cuda:0', dtype=torch.float64)
0.9146758477795389
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.5718, 16.0822],
        [45.0698, 13.9035],
        [46.1561, 16.2843],
        [46.1987, 15.8442],
        [46.2233, 16.0771],
        [45.5547, 18.3590],
        [45.0212, 14.0541],
        [44.9700, 18.8825]], device='cuda:0', dtype=torch.float64)
0.7939951537417211
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8568, 17.5789],
        [45.0690, 16.3429],
        [45.7466, 15.6516],
        [45.1561, 15.7390],
        [45.1997, 15.0326],
        [45.9072, 16.2593],
        [43.5189, 16.0625],
        [44.9265, 13.8664]], device='cuda:0', dtype=torch.float64)
0.6240933240280313
tensor([[[45.6467, 18.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 18.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 18.2464],
         [46.1467, 15.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4187, 16.2000],
        [46.2932, 16.5658],
        [44.4572, 15.8200],
        [45.5723, 16.0204],
        [45.4974, 18.7325],
        [45.1926, 18.4095],
        [43.8974, 15.9075],
        [44.9898, 13.7999]], device='cuda:0', dtype=torch.float64)
0.6935560757028338
tensor([[[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [43.1550, 17.2484],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.1467, 16.2464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.2844, 15.2156],
        [46.1044, 15.8688],
        [45.7729, 15.8562],
        [45.4547, 16.9157],
        [46.0178, 17.0430],
        [46.2099, 16.4184],
        [45.1040, 14.9671],
        [44.6152, 15.6475]], device='cuda:0', dtype=torch.float64)
0.6420558632814033
tensor([[[44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 15.7464],
         [43.1550, 17.2484],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3917, 15.7491],
        [45.8186, 18.7495],
        [45.6590, 16.5119],
        [45.5136, 14.6773],
        [46.0583, 15.7538],
        [43.4539, 17.0326],
        [45.1674, 14.0037],
        [45.4581, 16.7445]], device='cuda:0', dtype=torch.float64)
0.5828511191991408
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3707, 15.8586],
        [45.8073, 17.5647],
        [45.5027, 15.8042],
        [45.4084, 18.8333],
        [44.7242, 15.4458],
        [45.2918, 15.9994],
        [45.1831, 13.7275],
        [42.7839, 17.8782]], device='cuda:0', dtype=torch.float64)
0.7207310897607953
tensor([[[46.1467, 16.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [43.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5457, 18.3293],
        [43.7162, 16.2492],
        [45.0728, 14.9510],
        [44.5665, 15.3866],
        [45.5011, 18.3230],
        [44.2127, 15.6928],
        [45.4153, 15.6077],
        [45.8291, 17.0380]], device='cuda:0', dtype=torch.float64)
0.7517865252538829
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [43.1550, 17.2484]],

        [[45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1396, 15.0949],
        [45.0504, 14.9374],
        [45.7863, 18.0471],
        [44.5632, 15.1265],
        [45.9024, 17.4864],
        [44.9274, 18.8169],
        [45.5431, 17.5090],
        [45.7066, 15.7185]], device='cuda:0', dtype=torch.float64)
0.5173629232875385
tensor([[[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3128, 13.9998],
        [45.5294, 18.2929],
        [45.8473, 18.7975],
        [45.5925, 18.4890],
        [44.4753, 15.4037],
        [46.2897, 16.5593],
        [45.1444, 18.1061],
        [45.1812, 15.5599]], device='cuda:0', dtype=torch.float64)
0.47901883799612494
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 16.2464],
         [43.6467, 16.2464],
         [44.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0368, 13.8306],
        [42.5298, 18.4164],
        [44.5398, 15.3775],
        [45.4786, 14.2638],
        [43.9431, 15.5238],
        [46.2627, 16.4936],
        [45.4149, 15.5360],
        [43.5860, 16.7199]], device='cuda:0', dtype=torch.float64)
1.1366639978279052
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.7464],
         [45.1519, 14.2344]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.1550, 17.2484],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1163, 15.2371],
        [45.3726, 18.3432],
        [45.0922, 13.9933],
        [43.5665, 16.5002],
        [45.7595, 15.8818],
        [45.9467, 17.0889],
        [44.5271, 15.2752],
        [45.8915, 15.9514]], device='cuda:0', dtype=torch.float64)
0.6590365213518563
tensor([[[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.1467, 18.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.1550, 17.2484]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2201, 18.9473],
        [43.9890, 15.6045],
        [45.3642, 13.6641],
        [45.0899, 16.2870],
        [45.7594, 15.8071],
        [45.6779, 17.2020],
        [45.1554, 15.5035],
        [43.6451, 16.1384]], device='cuda:0', dtype=torch.float64)
0.7559592917661774
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.9003, 17.4680],
        [45.1945, 17.4194],
        [45.3982, 15.5612],
        [44.6985, 15.7482],
        [45.4608, 18.3005],
        [45.2193, 15.1306],
        [44.6478, 15.0484],
        [45.4422, 17.1019]], device='cuda:0', dtype=torch.float64)
0.44680637139411994
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8792, 15.9411],
        [44.9821, 15.0682],
        [44.9166, 13.8859],
        [46.0879, 15.9640],
        [43.8775, 15.7211],
        [45.2844, 16.8250],
        [45.0843, 13.8254],
        [46.2016, 16.0126]], device='cuda:0', dtype=torch.float64)
0.6457297283534836
tensor([[[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3202, 17.0379],
        [45.8692, 17.2964],
        [45.5181, 18.9141],
        [44.9311, 15.6995],
        [45.6479, 15.6243],
        [45.7872, 16.3458],
        [44.5696, 15.1170],
        [45.4532, 16.5729]], device='cuda:0', dtype=torch.float64)
0.40540212909480466
tensor([[[43.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2333, 17.6575],
        [44.4722, 16.0254],
        [43.7857, 16.6472],
        [45.2443, 13.8579],
        [45.7099, 15.3767],
        [43.6888, 16.7117],
        [45.6675, 15.9389],
        [46.1584, 15.8294]], device='cuda:0', dtype=torch.float64)
0.855858457747672
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464],
         [43.1550, 17.2484]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 18.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.1034, 16.1550],
        [45.7598, 18.6738],
        [43.5868, 16.0446],
        [45.5607, 17.9199],
        [45.3480, 16.1213],
        [45.0470, 19.0237],
        [46.1368, 16.2232],
        [45.4350, 16.1349]], device='cuda:0', dtype=torch.float64)
0.7457762723759999
tensor([[[46.1467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.2275, 15.6165],
        [45.3305, 13.7148],
        [43.8482, 15.9484],
        [44.2551, 15.3297],
        [46.2563, 16.6448],
        [43.6252, 16.7122],
        [44.5015, 15.6734],
        [45.7051, 16.2126]], device='cuda:0', dtype=torch.float64)
1.0479150504613282
tensor([[[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2895, 16.4177],
        [45.8094, 15.6879],
        [45.2235, 17.5211],
        [43.6170, 16.8957],
        [43.5128, 17.0665],
        [46.4198, 16.7041],
        [45.2479, 17.1399],
        [45.7947, 17.5547]], device='cuda:0', dtype=torch.float64)
0.8954405404183556
tensor([[[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [43.1550, 17.2484]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.1519, 14.2344],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3133, 15.8077],
        [45.3060, 18.3446],
        [43.0360, 17.5473],
        [46.3401, 16.1245],
        [44.1669, 15.8727],
        [45.2051, 15.1190],
        [45.4859, 18.1659],
        [44.4247, 16.1095]], device='cuda:0', dtype=torch.float64)
0.8919839785225823
tensor([[[44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1519, 14.2344],
         [45.6467, 15.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8166, 15.5142],
        [43.8101, 15.8545],
        [44.6167, 15.4109],
        [43.7722, 16.1775],
        [45.1467, 13.7938],
        [46.4135, 16.7379],
        [46.0595, 15.9105],
        [45.9428, 15.9082]], device='cuda:0', dtype=torch.float64)
0.8878042536702494
tensor([[[45.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.4973, 17.1259],
        [45.4671, 14.3163],
        [45.4532, 15.7037],
        [45.3348, 14.7931],
        [45.3554, 15.1028],
        [45.8823, 16.6004],
        [42.7935, 17.8705],
        [45.0415, 14.9129]], device='cuda:0', dtype=torch.float64)
0.835073276361845
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.5089, 16.3119],
        [44.5775, 15.3276],
        [45.4584, 16.9458],
        [44.9920, 15.1866],
        [45.3686, 15.3623],
        [45.4051, 18.9123],
        [45.7702, 15.9342],
        [46.0116, 16.8912]], device='cuda:0', dtype=torch.float64)
0.4795928766171777
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 15.7464],
         [45.1467, 18.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.3048, 15.4356],
        [46.0992, 16.6806],
        [44.4893, 15.5431],
        [43.1946, 17.3352],
        [44.1536, 15.5522],
        [46.0459, 17.1175],
        [44.5578, 15.7218],
        [46.0227, 15.9246]], device='cuda:0', dtype=torch.float64)
1.0458048165094544
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 17.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1582, 13.8605],
        [45.8588, 16.2325],
        [46.2196, 16.1866],
        [45.1795, 18.6859],
        [44.1482, 16.1641],
        [45.3628, 17.5755],
        [46.1944, 16.6284],
        [43.7257, 15.9603]], device='cuda:0', dtype=torch.float64)
0.7653538242638291
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.1467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5901, 18.3055],
        [46.2667, 16.8648],
        [44.6177, 15.4385],
        [45.3558, 17.2260],
        [44.1093, 15.4087],
        [45.9249, 16.2724],
        [45.7905, 16.7246],
        [46.1060, 17.2317]], device='cuda:0', dtype=torch.float64)
0.6254331338073447
tensor([[[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [43.1550, 17.2484],
         [45.1467, 15.7464],
         [45.1519, 14.2344]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7683, 17.9480],
        [45.1288, 14.0517],
        [45.2808, 13.7333],
        [45.0754, 13.9911],
        [44.9485, 15.6785],
        [45.3609, 16.2849],
        [45.8108, 16.1227],
        [45.2919, 19.0499]], device='cuda:0', dtype=torch.float64)
0.4515927296898389
tensor([[[45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [43.1550, 17.2484]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5109, 16.2129],
        [45.8501, 16.1689],
        [43.5784, 16.7482],
        [45.5387, 16.7244],
        [45.8574, 18.8593],
        [44.0167, 15.5202],
        [45.0966, 13.8427],
        [45.5106, 16.2909]], device='cuda:0', dtype=torch.float64)
0.6668686929794594
tensor([[[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4678, 15.0813],
        [46.0834, 16.2309],
        [45.5278, 18.5142],
        [45.6268, 16.6256],
        [45.1889, 17.8584],
        [45.5922, 16.1958],
        [45.2029, 18.7778],
        [45.3274, 17.1246]], device='cuda:0', dtype=torch.float64)
0.25609260912236165
tensor([[[45.6467, 18.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464],
         [45.1467, 18.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5664, 18.3080],
        [45.5863, 18.5473],
        [44.6369, 15.3837],
        [45.6451, 17.3256],
        [44.9601, 13.8721],
        [43.8300, 15.6810],
        [46.1821, 15.7950],
        [45.5277, 15.5368]], device='cuda:0', dtype=torch.float64)
0.596290781204699
tensor([[[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [46.1467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.1246, 15.6161],
        [45.9558, 16.6034],
        [43.9328, 15.7123],
        [44.8403, 15.5196],
        [45.6541, 16.2615],
        [45.2308, 15.6693],
        [45.4416, 14.8427],
        [45.2520, 18.8424]], device='cuda:0', dtype=torch.float64)
0.5407937681622481
tensor([[[45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1862, 18.2958],
        [45.1021, 17.9274],
        [46.1845, 16.3287],
        [45.3613, 17.6931],
        [45.3922, 16.8109],
        [45.4149, 17.8602],
        [45.3092, 18.8107],
        [45.9382, 17.3215]], device='cuda:0', dtype=torch.float64)
0.39544075642486387
tensor([[[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4735, 14.3411],
        [43.9283, 15.8485],
        [44.0127, 15.6518],
        [44.9952, 18.8909],
        [45.3814, 14.4397],
        [45.2976, 13.7691],
        [45.2447, 14.0401],
        [45.4001, 15.6133]], device='cuda:0', dtype=torch.float64)
0.606039550093788
tensor([[[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [43.1550, 17.2484],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [43.1550, 17.2484],
         [45.1467, 18.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1519, 14.2344],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4457, 18.2344],
        [44.6816, 15.1011],
        [42.7514, 17.9585],
        [45.8138, 16.7036],
        [46.0148, 15.8583],
        [45.0656, 13.7923],
        [46.2089, 15.9061],
        [42.9347, 17.3902]], device='cuda:0', dtype=torch.float64)
1.1306529948799047
tensor([[[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [43.1550, 17.2484]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4254, 14.4960],
        [43.1354, 17.5130],
        [45.3631, 13.8348],
        [43.0457, 17.5191],
        [44.5414, 15.3751],
        [45.6739, 16.2452],
        [45.9212, 15.9005],
        [44.7102, 15.6278]], device='cuda:0', dtype=torch.float64)
1.027989596733489
tensor([[[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 17.7464],
         [43.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6864, 16.0736],
        [45.6452, 15.3434],
        [45.1290, 13.8080],
        [45.3562, 15.7186],
        [44.5609, 15.7578],
        [46.0015, 15.8033],
        [46.0263, 16.4110],
        [45.5785, 18.2399]], device='cuda:0', dtype=torch.float64)
0.4725216027212349
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4790, 14.2499],
        [45.6436, 17.2323],
        [44.6471, 15.5078],
        [45.4392, 13.9578],
        [45.8909, 16.7317],
        [45.5268, 19.0363],
        [45.7811, 17.4545],
        [43.4416, 16.9227]], device='cuda:0', dtype=torch.float64)
0.6554308473578465
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [43.1550, 17.2484],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3619, 14.3606],
        [43.3600, 17.1053],
        [45.3306, 18.3090],
        [45.4130, 13.8027],
        [45.4797, 16.1751],
        [45.4378, 18.7769],
        [46.1070, 16.2694],
        [45.3591, 16.9548]], device='cuda:0', dtype=torch.float64)
0.5637875409413412
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.7464],
         [45.1467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.9358, 15.5557],
        [45.4493, 18.1680],
        [45.4737, 18.3525],
        [45.7406, 16.6547],
        [43.7604, 15.8641],
        [45.5742, 15.4345],
        [45.4961, 16.8000],
        [45.1649, 13.7603]], device='cuda:0', dtype=torch.float64)
0.6269812948714752
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.1673, 15.8815],
        [43.4878, 16.6265],
        [45.8279, 16.6405],
        [44.8122, 15.1149],
        [43.4374, 16.9587],
        [46.0817, 16.3528],
        [45.3292, 13.8335],
        [44.5683, 15.3164]], device='cuda:0', dtype=torch.float64)
0.947964668889674
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 15.7464],
         [45.1519, 14.2344]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484]]], device='cuda:0', dtype=torch.float64)
tensor([[43.5724, 16.8522],
        [46.2872, 16.5247],
        [45.4054, 17.9701],
        [46.0238, 16.2171],
        [45.4255, 15.6144],
        [44.9272, 13.8907],
        [45.5458, 18.3333],
        [42.8557, 17.6058]], device='cuda:0', dtype=torch.float64)
1.012655737177112
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.5069, 16.7166],
        [45.4949, 18.0137],
        [43.5988, 16.6605],
        [45.9030, 17.5340],
        [43.4028, 17.0451],
        [45.3885, 13.9247],
        [43.6846, 15.9387],
        [45.2937, 16.5506]], device='cuda:0', dtype=torch.float64)
1.157674657629259
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3013, 18.2846],
        [44.0141, 15.5442],
        [45.6544, 15.9130],
        [45.4170, 16.9310],
        [45.7139, 16.3257],
        [45.6115, 16.0030],
        [45.7356, 18.4101],
        [44.5238, 15.3430]], device='cuda:0', dtype=torch.float64)
0.496028919774206
tensor([[[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 18.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3646, 18.9222],
        [46.3315, 16.2094],
        [45.3405, 16.0375],
        [45.3821, 16.4067],
        [45.9643, 15.7368],
        [44.2534, 15.3318],
        [43.6247, 16.5869],
        [44.2304, 15.3859]], device='cuda:0', dtype=torch.float64)
0.8387658123813072
tensor([[[45.1467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[45.1467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.4592, 16.8334],
        [45.6502, 17.3378],
        [45.4508, 18.1679],
        [45.3451, 17.7566],
        [45.7815, 16.7690],
        [46.0915, 16.1790],
        [46.1231, 16.5786],
        [44.4137, 15.6743]], device='cuda:0', dtype=torch.float64)
0.6483460807244439
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1519, 14.2344],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4718, 16.3188],
        [45.3404, 14.0801],
        [45.7419, 15.4687],
        [46.0911, 17.1925],
        [46.3308, 16.1353],
        [45.6264, 18.8134],
        [45.6352, 16.7911],
        [45.7874, 15.7270]], device='cuda:0', dtype=torch.float64)
0.3273085515985422
tensor([[[45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [43.1550, 17.2484],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.9558, 15.1279],
        [46.1879, 16.4094],
        [45.3902, 16.1544],
        [45.1983, 13.7624],
        [43.7230, 16.1147],
        [42.8713, 17.5159],
        [45.4764, 16.2019],
        [45.0970, 15.7619]], device='cuda:0', dtype=torch.float64)
0.9012640762681388
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 17.2464],
         [43.1550, 17.2484]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5363, 17.1480],
        [46.1663, 15.9185],
        [45.3541, 16.0406],
        [45.5018, 15.5087],
        [45.5633, 18.6375],
        [45.1797, 17.5173],
        [46.1431, 16.9632],
        [42.7491, 17.9687]], device='cuda:0', dtype=torch.float64)
0.7268448409749911
tensor([[[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0273, 14.9388],
        [43.8356, 15.9079],
        [45.5015, 15.4318],
        [45.1747, 19.3499],
        [45.4687, 14.1132],
        [45.3718, 14.4755],
        [45.2355, 19.3071],
        [45.4502, 14.6016]], device='cuda:0', dtype=torch.float64)
0.4524662737954927
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [45.6467, 17.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 17.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6497, 15.4148],
        [43.9152, 15.8333],
        [43.6735, 16.0666],
        [45.4722, 18.5328],
        [43.4543, 17.2385],
        [45.5926, 18.2360],
        [45.1531, 18.0056],
        [43.8418, 16.4582]], device='cuda:0', dtype=torch.float64)
1.044587175603937
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [44.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1969, 16.4867],
        [43.3634, 16.9608],
        [45.3067, 16.5168],
        [45.4154, 18.5392],
        [44.5904, 15.3988],
        [45.0773, 15.6742],
        [43.7693, 16.0586],
        [45.3818, 14.0732]], device='cuda:0', dtype=torch.float64)
0.8389804026891585
tensor([[[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.1550, 17.2484],
         [45.1519, 14.2344]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2883, 18.6560],
        [45.8649, 16.0983],
        [45.5892, 18.8533],
        [45.1678, 14.8636],
        [45.0554, 14.1290],
        [44.1600, 15.5694],
        [45.6384, 16.7550],
        [46.3766, 16.4227]], device='cuda:0', dtype=torch.float64)
0.5476373233765146
tensor([[[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2420, 15.1031],
        [45.7766, 18.0033],
        [45.1311, 18.8978],
        [45.9266, 17.2777],
        [44.1790, 15.5336],
        [46.3786, 16.6430],
        [43.2939, 17.2608],
        [45.2415, 18.0874]], device='cuda:0', dtype=torch.float64)
0.8026743950828321
tensor([[[44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.1519, 14.2344],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [43.1550, 17.2484],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.4571, 17.2154],
        [45.1888, 15.4458],
        [45.4854, 16.0008],
        [45.1342, 13.7678],
        [45.6872, 17.7030],
        [44.0501, 16.2044],
        [44.2824, 15.3047],
        [45.0458, 18.8640]], device='cuda:0', dtype=torch.float64)
0.8165276033871236
tensor([[[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7041, 17.5701],
        [45.2090, 17.5208],
        [46.1999, 16.8108],
        [45.2914, 13.6991],
        [45.4753, 18.5604],
        [43.0008, 17.4990],
        [46.2585, 16.0058],
        [45.7932, 17.4790]], device='cuda:0', dtype=torch.float64)
0.6626776673906324
tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6394, 17.0643],
        [44.5954, 15.6622],
        [45.4721, 17.0181],
        [44.5389, 15.4676],
        [46.2250, 16.3097],
        [46.3931, 16.5520],
        [45.9980, 15.8920],
        [43.1961, 17.2961]], device='cuda:0', dtype=torch.float64)
0.8560170585606837
tensor([[[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 18.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.8461, 16.4545],
        [45.4861, 18.7555],
        [43.4526, 17.0758],
        [43.5124, 15.9943],
        [45.5953, 17.5911],
        [45.4985, 17.5380],
        [45.8000, 15.8726],
        [44.0878, 16.3063]], device='cuda:0', dtype=torch.float64)
1.0255400264032422
tensor([[[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8838, 17.5791],
        [45.2446, 19.1704],
        [43.0223, 17.5591],
        [45.1761, 15.7766],
        [45.5100, 16.9662],
        [44.1051, 15.8230],
        [46.1622, 15.6705],
        [44.8498, 15.6853]], device='cuda:0', dtype=torch.float64)
0.8690788353730104
tensor([[[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1868, 14.6833],
        [45.1458, 19.0017],
        [45.3169, 14.0715],
        [43.5190, 17.0635],
        [45.1682, 17.3307],
        [45.1150, 18.7057],
        [46.2969, 16.1769],
        [45.3689, 16.3912]], device='cuda:0', dtype=torch.float64)
0.6472617635719962
tensor([[[45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]],

        [[44.6467, 15.2464],
         [44.1467, 15.2464],
         [45.1519, 14.2344],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.5978, 15.9265],
        [45.4813, 16.3265],
        [45.3501, 14.6495],
        [45.0131, 15.2920],
        [42.9785, 17.1458],
        [45.7175, 17.0083],
        [46.5256, 16.4412],
        [45.0775, 14.9226]], device='cuda:0', dtype=torch.float64)
0.900274514358419
tensor([[[45.6467, 18.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.1467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.4643, 15.8039],
        [46.2486, 16.5468],
        [45.0193, 15.4133],
        [43.6264, 16.2037],
        [45.5126, 18.6766],
        [45.1108, 15.6092],
        [46.0175, 16.4376],
        [43.3539, 17.1113]], device='cuda:0', dtype=torch.float64)
0.9591062391740182
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.2786, 17.0530],
        [45.2950, 16.1654],
        [46.2548, 16.8403],
        [44.2382, 15.4932],
        [45.4253, 17.1549],
        [45.8121, 17.4575],
        [43.9852, 16.0530],
        [43.9708, 16.0605]], device='cuda:0', dtype=torch.float64)
0.9808040236269406
tensor([[[45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.1550, 17.2484],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3563, 18.7359],
        [45.3294, 16.5989],
        [45.4989, 13.9979],
        [43.1851, 17.2169],
        [45.8597, 16.8450],
        [45.3671, 15.0908],
        [45.6598, 17.4185],
        [44.7110, 15.1922]], device='cuda:0', dtype=torch.float64)
0.7184412985622236
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [44.6467, 15.2464],
         [45.1519, 14.2344],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0909, 14.0535],
        [45.2850, 17.4056],
        [46.2020, 16.7754],
        [45.7559, 15.9794],
        [45.7066, 17.0296],
        [46.4468, 16.5090],
        [46.0144, 16.2946],
        [43.5420, 16.9607]], device='cuda:0', dtype=torch.float64)
0.6459316272232138
tensor([[[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2343, 15.2747],
        [45.8575, 16.8129],
        [45.8342, 16.2193],
        [46.1285, 15.9738],
        [45.5068, 17.0057],
        [44.5269, 15.3775],
        [45.3746, 14.9503],
        [45.6646, 18.3602]], device='cuda:0', dtype=torch.float64)
0.40502177139375817
tensor([[[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6295, 16.2856],
        [46.0031, 16.8531],
        [46.1173, 16.5771],
        [45.2317, 19.3707],
        [42.7938, 17.8685],
        [46.3817, 16.6076],
        [46.1582, 16.4523],
        [45.6320, 18.7718]], device='cuda:0', dtype=torch.float64)
0.6631619999957442
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 15.7464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.7917, 15.1629],
        [45.1801, 17.9845],
        [46.0311, 16.2082],
        [45.8882, 16.7596],
        [45.4895, 14.2246],
        [44.8549, 15.4400],
        [44.6913, 15.1139],
        [45.7041, 18.5687]], device='cuda:0', dtype=torch.float64)
0.5148687039223778
tensor([[[45.6467, 18.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 18.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.9541, 18.9645],
        [45.5681, 16.5787],
        [45.4790, 14.2498],
        [46.1472, 16.5729],
        [46.3133, 16.2730],
        [45.9437, 15.9796],
        [45.6395, 16.7596],
        [44.1744, 16.2849]], device='cuda:0', dtype=torch.float64)
0.5100457441119071
tensor([[[43.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[45.1467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3460, 13.7983],
        [46.0510, 16.7738],
        [45.3459, 17.7568],
        [43.7600, 16.7402],
        [43.3109, 17.1779],
        [43.7047, 16.7316],
        [45.3721, 18.1881],
        [45.9345, 16.8735]], device='cuda:0', dtype=torch.float64)
0.986596174631711
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [43.1550, 17.2484]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3521, 17.1833],
        [43.5427, 16.2077],
        [45.6404, 16.0977],
        [43.5885, 16.9277],
        [43.4846, 17.0797],
        [43.9533, 16.4068],
        [44.4904, 15.3101],
        [46.0703, 16.4895]], device='cuda:0', dtype=torch.float64)
1.2066033929767803
tensor([[[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5776, 16.0629],
        [45.1933, 18.3221],
        [45.3969, 16.1967],
        [43.4254, 17.2070],
        [45.5532, 18.5392],
        [45.0987, 18.7237],
        [45.5116, 15.8238],
        [45.7371, 18.1780]], device='cuda:0', dtype=torch.float64)
0.5058810422420077
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 17.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4097, 17.1281],
        [46.1801, 16.5457],
        [46.2889, 15.9974],
        [43.5666, 16.9718],
        [43.0886, 17.4481],
        [45.4592, 18.5740],
        [44.5872, 15.2359],
        [45.3670, 18.3215]], device='cuda:0', dtype=torch.float64)
0.9558870297130838
tensor([[[45.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1519, 14.2344]],

        [[45.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.0047, 15.3802],
        [45.4048, 17.9150],
        [43.7037, 16.0080],
        [43.9758, 15.6425],
        [45.2899, 15.9989],
        [44.6824, 14.9599],
        [45.1413, 13.7090],
        [45.9595, 15.7932]], device='cuda:0', dtype=torch.float64)
0.8826722875597399
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1636, 17.7590],
        [45.3909, 13.9865],
        [43.3313, 16.9814],
        [45.4805, 13.5116],
        [45.3404, 15.7407],
        [46.1319, 17.0449],
        [45.8149, 16.5066],
        [45.2368, 15.0626]], device='cuda:0', dtype=torch.float64)
0.5877119320240498
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5661, 18.3892],
        [45.0857, 16.2603],
        [45.3491, 18.4918],
        [45.3711, 18.3454],
        [46.2795, 16.4194],
        [45.0980, 13.8417],
        [44.0240, 15.6188],
        [45.3697, 18.0935]], device='cuda:0', dtype=torch.float64)
0.6370204419040271
tensor([[[45.6467, 17.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 18.7464]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1519, 14.2344]]], device='cuda:0', dtype=torch.float64)
tensor([[43.7524, 16.2431],
        [45.2356, 16.5975],
        [45.7678, 18.7371],
        [45.5496, 15.8761],
        [45.1950, 15.7261],
        [45.5736, 15.5202],
        [45.1367, 14.1435],
        [43.4378, 16.8603]], device='cuda:0', dtype=torch.float64)
0.7508000554757027
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.6467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1438, 18.1079],
        [46.1376, 15.9366],
        [45.2130, 16.8307],
        [43.0345, 17.6070],
        [44.8714, 15.1952],
        [45.7260, 15.9111],
        [45.3257, 18.3729],
        [44.2967, 15.8696]], device='cuda:0', dtype=torch.float64)
0.874119229978441
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1706, 14.9658],
        [45.9500, 16.6825],
        [45.5852, 15.6266],
        [46.2096, 15.7271],
        [43.9734, 16.0855],
        [45.1936, 19.0364],
        [44.9923, 18.8486],
        [44.9660, 14.9887]], device='cuda:0', dtype=torch.float64)
0.5953410650777747
tensor([[[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 15.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1641, 17.9231],
        [43.7264, 16.2936],
        [45.1341, 18.1459],
        [45.6993, 17.8454],
        [43.4027, 17.0296],
        [45.0144, 14.9961],
        [45.3025, 14.5116],
        [45.4175, 14.3147]], device='cuda:0', dtype=torch.float64)
0.8188986231075872
tensor([[[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [44.1467, 15.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.7839, 16.5619],
        [46.3853, 16.6029],
        [45.2915, 18.3145],
        [43.7251, 16.8149],
        [45.6435, 15.8104],
        [45.2944, 16.0755],
        [45.8880, 16.1292],
        [45.1100, 18.6791]], device='cuda:0', dtype=torch.float64)
0.8228823678302737
tensor([[[43.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [43.1550, 17.2484],
         [45.1519, 14.2344]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.7105, 15.1318],
        [45.4591, 17.0515],
        [45.8662, 15.9826],
        [45.6918, 18.2814],
        [45.2756, 14.0663],
        [44.8942, 18.8346],
        [45.8887, 16.9609],
        [44.9407, 13.8532]], device='cuda:0', dtype=torch.float64)
0.46461656429984904
tensor([[[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 17.7464]],

        [[46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.6467, 17.2464]],

        [[44.1467, 15.7464],
         [43.1550, 17.2484],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1519, 14.2344]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.5617, 16.3571],
        [43.5130, 16.0882],
        [45.2763, 18.6080],
        [45.6172, 16.0093],
        [46.0917, 16.1788],
        [46.1094, 16.2852],
        [44.7096, 15.6800],
        [45.5943, 18.4707]], device='cuda:0', dtype=torch.float64)
0.8808970394153284
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8462, 15.8840],
        [45.4138, 16.4319],
        [44.8908, 15.2874],
        [45.4472, 18.9650],
        [45.7372, 15.6682],
        [45.7977, 15.7534],
        [45.1884, 17.2180],
        [45.3682, 14.0163]], device='cuda:0', dtype=torch.float64)
0.3624477531122782
tensor([[[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1519, 14.2344],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.8772, 18.8658],
        [46.1270, 16.1176],
        [45.3585, 15.6085],
        [45.7340, 17.0395],
        [45.5332, 15.9289],
        [44.8284, 15.5525],
        [45.7036, 17.1692],
        [45.5067, 18.5703]], device='cuda:0', dtype=torch.float64)
0.3601345015387777
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.0414, 15.3180],
        [45.3046, 16.3733],
        [45.7271, 15.4170],
        [45.5326, 18.0601],
        [44.1643, 15.5647],
        [45.6323, 18.4303],
        [45.5855, 17.3129],
        [45.4664, 16.2867]], device='cuda:0', dtype=torch.float64)
0.5767431033387285
tensor([[[45.1467, 13.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0138, 13.8072],
        [45.6065, 15.6268],
        [43.6935, 16.0198],
        [45.7850, 15.9258],
        [45.1992, 18.8437],
        [45.4647, 15.3573],
        [46.0496, 16.6629],
        [45.6049, 17.5326]], device='cuda:0', dtype=torch.float64)
0.5133191294980829
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[44.1467, 15.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.3500, 15.6372],
        [45.7968, 18.8019],
        [45.4344, 18.2543],
        [42.9918, 17.4925],
        [46.1388, 16.9548],
        [43.2785, 17.2940],
        [42.9521, 17.2758],
        [43.8366, 16.5030]], device='cuda:0', dtype=torch.float64)
1.4190305969059116
tensor([[[45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4487, 15.9262],
        [43.2008, 17.3873],
        [45.6586, 16.5717],
        [45.4066, 14.7013],
        [45.4681, 16.4469],
        [45.5070, 15.9519],
        [45.3646, 18.9492],
        [44.2699, 16.0463]], device='cuda:0', dtype=torch.float64)
0.7175951171427999
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.9607, 15.9166],
        [45.2761, 16.1602],
        [43.4992, 16.7739],
        [44.9227, 15.2293],
        [45.5616, 17.7583],
        [44.7863, 15.1660],
        [45.3149, 18.8546],
        [43.6353, 16.4245]], device='cuda:0', dtype=torch.float64)
0.87307690012385

Validation DataLoader 0:  40%|####      | 165/412 [00:38<00:58,  4.24it/s][AEpoch 0:  93%|#########3| 3467/3714 [32:32<02:19,  1.78it/s, loss=3.44, v_num=0, train/loss_step=3.750, train/acc_step=0.000]tensor([[[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.8838, 18.8617],
        [44.4582, 15.1716],
        [45.7798, 15.9077],
        [45.1461, 15.0548],
        [45.2627, 13.7172],
        [46.1612, 15.9368],
        [45.5886, 17.2176],
        [44.7112, 15.1298]], device='cuda:0', dtype=torch.float64)
0.6191941932326467
tensor([[[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1519, 14.2344]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3233, 13.6623],
        [45.7701, 15.7819],
        [44.3804, 16.1201],
        [46.4899, 16.4943],
        [45.2817, 18.6038],
        [45.2749, 13.8905],
        [43.9155, 15.8266],
        [46.3564, 16.6748]], device='cuda:0', dtype=torch.float64)
0.7854941888651117
tensor([[[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3874, 17.4796],
        [45.3098, 18.4482],
        [43.7576, 16.7290],
        [45.0876, 15.6625],
        [46.3146, 16.2586],
        [46.1203, 15.8755],
        [45.3109, 16.6165],
        [44.1398, 15.3117]], device='cuda:0', dtype=torch.float64)
0.779810903202924
tensor([[[45.6467, 17.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1564, 17.6166],
        [45.7288, 18.5147],
        [45.8632, 17.4622],
        [44.9900, 15.6604],
        [45.2604, 15.2750],
        [43.5685, 16.1700],
        [46.5015, 16.2752],
        [43.9214, 15.4986]], device='cuda:0', dtype=torch.float64)
0.8339977282704192
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]],

        [[45.6467, 17.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6057, 18.5320],
        [44.6892, 15.3566],
        [45.1258, 15.2936],
        [46.2763, 16.1399],
        [44.3260, 15.7438],
        [46.4872, 16.3283],
        [43.7699, 15.9811],
        [45.3288, 16.9776]], device='cuda:0', dtype=torch.float64)
0.8284628551021574
tensor([[[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0181, 13.9017],
        [45.1747, 18.6541],
        [43.7704, 16.3037],
        [45.6287, 15.5069],
        [45.2073, 17.6203],
        [46.0221, 16.9007],
        [45.2838, 16.8250],
        [45.1393, 18.1596]], device='cuda:0', dtype=torch.float64)
0.6446655636775254
tensor([[[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.2370, 15.3589],
        [45.1295, 14.1258],
        [45.2537, 15.3619],
        [45.3757, 15.0013],
        [45.2146, 15.6760],
        [45.2434, 15.3583],
        [45.6086, 18.0504],
        [42.7860, 17.8595]], device='cuda:0', dtype=torch.float64)
0.7528273946655917
tensor([[[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.1467, 18.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.6814, 16.3043],
        [45.2750, 15.6283],
        [45.4644, 15.5626],
        [45.6497, 18.3663],
        [45.1324, 18.5152],
        [45.1482, 15.2997],
        [44.1110, 15.2480],
        [44.0061, 16.3282]], device='cuda:0', dtype=torch.float64)
0.8346587605112789
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.1519, 14.2344]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 18.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3710, 17.6434],
        [45.7583, 17.8339],
        [45.3033, 13.8872],
        [44.1173, 15.7468],
        [45.6157, 18.2346],
        [45.6753, 15.4581],
        [44.5107, 15.4292],
        [45.2619, 16.8686]], device='cuda:0', dtype=torch.float64)
0.5598650812641319
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6916, 18.4100],
        [45.4443, 13.9288],
        [45.6430, 18.4203],
        [45.2805, 14.1249],
        [45.7812, 16.2849],
        [45.4615, 18.8955],
        [45.1542, 17.9293],
        [45.4625, 16.3857]], device='cuda:0', dtype=torch.float64)
0.24538203951484053
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 18.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.9408, 15.9613],
        [45.3768, 14.3357],
        [43.7563, 16.1067],
        [43.3838, 17.0699],
        [43.4676, 17.0444],
        [44.2303, 15.1939],
        [44.5498, 15.4334],
        [45.2101, 17.6144]], device='cuda:0', dtype=torch.float64)
1.147716875895727
tensor([[[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0712, 18.7914],
        [45.0922, 18.4828],
        [45.5139, 15.4795],
        [45.4794, 18.0343],
        [45.9057, 17.0260],
        [43.8943, 15.9440],
        [45.3208, 16.0540],
        [44.4110, 15.2299]], device='cuda:0', dtype=torch.float64)
0.6508573293737934
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6652, 16.5830],
        [45.3629, 17.7921],
        [44.6240, 15.6662],
        [42.8726, 17.5252],
        [45.4814, 18.5413],
        [45.4103, 18.3904],
        [44.0059, 16.1574],
        [45.4221, 17.2081]], device='cuda:0', dtype=torch.float64)
0.7902816180522146
tensor([[[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.9182, 15.7177],
        [44.8751, 14.9806],
        [45.0893, 13.7760],
        [46.1710, 16.3881],
        [46.1294, 16.1389],
        [44.9394, 15.0479],
        [45.0680, 15.5993],
        [44.1685, 15.6074]], device='cuda:0', dtype=torch.float64)
0.8037132602435515
tensor([[[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2486, 14.6930],
        [45.7262, 18.7922],
        [45.9036, 15.8570],
        [46.1623, 15.9358],
        [44.8796, 14.9080],
        [45.9188, 16.9692],
        [45.7069, 18.0790],
        [45.7151, 17.6700]], device='cuda:0', dtype=torch.float64)
0.34534151179755185
tensor([[[45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7089, 17.2991],
        [45.8134, 16.6717],
        [45.5869, 18.4560],
        [44.7705, 14.9002],
        [45.7007, 15.7972],
        [45.6211, 15.3216],
        [46.0692, 15.8596],
        [46.2709, 16.0363]], device='cuda:0', dtype=torch.float64)
0.3834396332901966
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 18.7464]],

        [[45.1467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1519, 14.2344]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4935, 16.2981],
        [45.2283, 16.7524],
        [43.5252, 16.0514],
        [44.3138, 15.8008],
        [43.3421, 17.2380],
        [45.1383, 16.3488],
        [45.1837, 15.2376],
        [45.7058, 17.4093]], device='cuda:0', dtype=torch.float64)
0.9497006353321726
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7876, 17.6012],
        [44.3174, 15.4799],
        [45.1772, 18.6945],
        [44.7043, 14.9368],
        [43.0446, 17.4423],
        [46.1291, 16.2892],
        [45.6555, 17.3522],
        [45.6287, 18.2334]], device='cuda:0', dtype=torch.float64)
0.7741068002483578
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4581, 18.5152],
        [45.3532, 16.6984],
        [44.0548, 15.8251],
        [45.7997, 16.7148],
        [44.5632, 15.6884],
        [43.9809, 15.5763],
        [46.0181, 15.9321],
        [45.8897, 15.8542]], device='cuda:0', dtype=torch.float64)
0.7244795936032487
tensor([[[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4847, 17.1027],
        [43.6518, 16.4823],
        [44.9574, 13.8721],
        [44.2283, 15.6009],
        [45.1471, 14.8490],
        [44.1622, 15.2607],
        [45.5376, 16.0788],
        [45.4343, 13.6543]], device='cuda:0', dtype=torch.float64)
0.772630247708936
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.1519, 14.2344]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4301, 14.5607],
        [46.0020, 17.2032],
        [45.4575, 17.0795],
        [46.1507, 15.9545],
        [45.1509, 15.6320],
        [43.8836, 16.0012],
        [46.3036, 16.5035],
        [46.1459, 15.9036]], device='cuda:0', dtype=torch.float64)
0.6442510571720361
tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[45.1467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.9317, 16.1072],
        [44.9273, 15.5822],
        [45.8563, 17.5426],
        [45.2171, 14.6800],
        [43.7985, 16.1645],
        [46.2617, 16.0633],
        [45.5543, 18.1181],
        [45.6956, 18.3335]], device='cuda:0', dtype=torch.float64)
0.7644761958497716
tensor([[[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 16.2464],
         [46.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.1550, 17.2484]],

        [[45.6467, 18.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4660, 16.4563],
        [43.3862, 17.1765],
        [45.3196, 16.0366],
        [45.2789, 15.1843],
        [45.1668, 14.9564],
        [45.4091, 16.8229],
        [45.7518, 18.4631],
        [44.7862, 15.3519]], device='cuda:0', dtype=torch.float64)
0.6240370997443604
tensor([[[45.6467, 16.2464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5739, 17.2613],
        [46.0181, 15.7482],
        [45.2194, 14.1455],
        [45.8691, 16.5627],
        [45.3154, 14.1755],
        [44.1418, 16.0727],
        [45.6962, 17.7089],
        [45.2138, 18.7887]], device='cuda:0', dtype=torch.float64)
0.4977811378775317
tensor([[[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [43.1550, 17.2484]],

        [[45.6467, 17.2464],
         [45.6467, 18.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8834, 16.0863],
        [45.7894, 18.7392],
        [43.6952, 16.6786],
        [45.5309, 18.0205],
        [44.1146, 15.3860],
        [44.5207, 15.8538],
        [45.4679, 13.5787],
        [45.1140, 18.1689]], device='cuda:0', dtype=torch.float64)
0.7870430744862322
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.1550, 17.2484],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.0167, 16.5483],
        [44.4460, 15.6161],
        [43.5164, 16.0755],
        [45.8136, 18.6586],
        [45.5899, 16.8468],
        [44.1872, 15.3658],
        [43.6996, 16.7912],
        [46.3734, 16.6814]], device='cuda:0', dtype=torch.float64)
0.9927433140019198
tensor([[[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [43.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3818, 16.1196],
        [44.5522, 15.7390],
        [45.7613, 18.8024],
        [43.5305, 16.1377],
        [44.0833, 16.1050],
        [45.0891, 14.0401],
        [45.4940, 15.7828],
        [45.5605, 16.3776]], device='cuda:0', dtype=torch.float64)
0.7515775390922268
tensor([[[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8141, 16.2625],
        [43.5958, 16.7030],
        [45.5401, 15.4104],
        [45.1304, 15.3072],
        [45.8577, 17.4827],
        [45.6219, 17.5736],
        [45.5778, 16.8981],
        [45.2166, 14.7710]], device='cuda:0', dtype=torch.float64)
0.5088189457408124
tensor([[[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1543, 15.1735],
        [43.9022, 16.4002],
        [45.2852, 17.9654],
        [45.0079, 14.1481],
        [45.4124, 17.1325],
        [45.2161, 15.3108],
        [45.9343, 15.8170],
        [45.7775, 15.5806]], device='cuda:0', dtype=torch.float64)
0.6437007016900701
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3902, 17.6759],
        [45.5486, 16.6782],
        [45.5110, 15.4398],
        [46.1250, 16.7348],
        [44.6082, 15.4643],
        [46.1133, 16.7126],
        [45.7544, 16.0594],
        [45.4780, 16.8429]], device='cuda:0', dtype=torch.float64)
0.39521181082454315
tensor([[[45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1118, 15.5780],
        [45.1523, 17.5147],
        [43.2962, 17.1786],
        [44.7781, 15.3817],
        [45.8747, 15.8474],
        [45.7877, 16.7731],
        [46.2972, 16.1282],
        [45.5026, 17.1876]], device='cuda:0', dtype=torch.float64)
0.6798919462039903
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [43.1550, 17.2484],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1519, 14.2344]]], device='cuda:0', dtype=torch.float64)
tensor([[45.9027, 16.6287],
        [46.2582, 16.4388],
        [44.7855, 15.3697],
        [45.0614, 15.6118],
        [45.4009, 15.4350],
        [44.2662, 15.9639],
        [45.3197, 16.0342],
        [44.3180, 15.6977]], device='cuda:0', dtype=torch.float64)
0.6728346347294224
tensor([[[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.8243, 15.1460],
        [45.5018, 16.7315],
        [46.1484, 15.7306],
        [45.4107, 17.0714],
        [45.6683, 16.4266],
        [44.1799, 15.5525],
        [45.6951, 16.4141],
        [42.7912, 17.8542]], device='cuda:0', dtype=torch.float64)
0.8052257502490462
tensor([[[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 16.2464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.2895, 15.8838],
        [44.6835, 15.4077],
        [46.2293, 15.8449],
        [45.4382, 15.4605],
        [45.2296, 17.4598],
        [43.8431, 15.7737],
        [43.8598, 16.4874],
        [44.3913, 15.8878]], device='cuda:0', dtype=torch.float64)
0.9696735552432966
tensor([[[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4765, 18.3606],
        [43.7632, 15.8070],
        [42.9536, 17.3268],
        [45.0821, 17.8322],
        [45.1109, 17.9341],
        [45.2330, 17.1679],
        [46.1228, 16.5082],
        [45.7104, 16.2316]], device='cuda:0', dtype=torch.float64)
0.8785164588969951
tensor([[[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [45.1519, 14.2344],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 18.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.1148, 15.4930],
        [45.9939, 16.9103],
        [46.1619, 16.8505],
        [43.9654, 15.6267],
        [42.7920, 17.8931],
        [45.4443, 15.5862],
        [45.3879, 13.7599],
        [45.3796, 14.9507]], device='cuda:0', dtype=torch.float64)
0.9360536364246448
tensor([[[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8852, 16.5757],
        [45.3517, 15.2528],
        [43.9691, 16.2368],
        [44.5296, 15.4042],
        [45.4880, 16.7630],
        [46.3919, 16.3134],
        [45.7130, 16.0138],
        [44.0516, 15.7033]], device='cuda:0', dtype=torch.float64)
0.7520795695250022
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.0151, 15.7698],
        [46.2101, 16.4180],
        [44.2060, 15.2479],
        [45.2338, 19.2697],
        [45.8921, 17.0329],
        [45.7466, 16.9005],
        [44.9925, 15.0611],
        [44.8167, 15.5513]], device='cuda:0', dtype=torch.float64)
0.7209304856392084
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.5438, 15.9387],
        [45.7524, 17.5178],
        [45.6331, 18.4000],
        [43.7511, 16.1228],
        [44.7384, 15.0620],
        [45.4504, 15.5080],
        [45.4454, 14.1863],
        [45.5427, 18.0513]], device='cuda:0', dtype=torch.float64)
0.6593537675567238
tensor([[[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 18.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.6467, 17.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1697, 17.6234],
        [45.4881, 15.3608],
        [46.3045, 16.3124],
        [45.2979, 18.5607],
        [44.8898, 18.8234],
        [45.6076, 16.8723],
        [45.2870, 18.4646],
        [45.0223, 15.4128]], device='cuda:0', dtype=torch.float64)
0.4749436426756903
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464],
         [43.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [44.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.3321, 15.6928],
        [45.0025, 14.9130],
        [43.9156, 16.1148],
        [45.9072, 17.4522],
        [44.7297, 15.2788],
        [45.6664, 17.5304],
        [46.3130, 16.4979],
        [45.3609, 18.9040]], device='cuda:0', dtype=torch.float64)
0.7252138882292366
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.0478, 16.0673],
        [45.5693, 18.5498],
        [45.2514, 18.6311],
        [45.2279, 15.3487],
        [45.1303, 16.4172],
        [45.2952, 18.2352],
        [45.3630, 14.3397],
        [43.6576, 16.5899]], device='cuda:0', dtype=torch.float64)
0.6873082791344887
tensor([[[45.6467, 15.7464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [43.1550, 17.2484],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.3254, 17.1677],
        [45.3024, 17.9561],
        [46.1709, 17.0725],
        [46.2088, 15.7994],
        [46.0540, 16.0847],
        [45.3455, 14.8580],
        [44.8612, 15.1976],
        [43.3935, 17.0299]], device='cuda:0', dtype=torch.float64)
0.9860664439131928
tensor([[[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 16.2464],
         [45.6467, 18.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7646, 17.1607],
        [45.2493, 14.1428],
        [45.4132, 17.2953],
        [45.4812, 17.7562],
        [44.0594, 16.1714],
        [43.8921, 16.3177],
        [46.4399, 16.6134],
        [46.2545, 16.6657]], device='cuda:0', dtype=torch.float64)
0.7917712761408399
tensor([[[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6923, 15.2861]],

        [[45.6467, 18.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.1467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [44.6467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.2140, 16.9959],
        [46.0215, 16.2175],
        [45.5043, 16.1951],
        [45.5137, 18.9256],
        [45.5792, 15.4192],
        [43.7296, 15.8492],
        [46.0479, 16.4062],
        [46.3234, 16.5920]], device='cuda:0', dtype=torch.float64)
0.6949691857632447
tensor([[[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.8686, 15.5776],
        [43.8550, 15.7594],
        [45.6407, 17.0119],
        [45.0458, 13.9085],
        [43.4923, 16.6004],
        [44.8511, 15.1645],
        [45.7194, 15.5987],
        [45.7039, 16.8586]], device='cuda:0', dtype=torch.float64)
0.9429701273643152
tensor([[[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 15.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.2282, 15.6059],
        [46.2337, 16.2734],
        [45.2086, 17.6484],
        [43.9053, 16.3984],
        [42.9711, 17.5181],
        [45.5621, 15.3547],
        [45.2811, 17.4291],
        [43.5210, 16.8933]], device='cuda:0', dtype=torch.float64)
1.1587658932236213
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2490, 15.8611],
        [45.3538, 15.6077],
        [45.0814, 16.3496],
        [44.0582, 16.1258],
        [46.3795, 16.6079],
        [46.0557, 16.5971],
        [45.9488, 16.6592],
        [46.0255, 15.7131]], device='cuda:0', dtype=torch.float64)
0.5930506380014761
tensor([[[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.7464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.1550, 17.2484]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.8770, 15.7225],
        [44.8050, 15.1416],
        [45.5202, 17.8224],
        [45.2488, 14.7670],
        [45.4895, 16.4568],
        [45.8829, 17.2891],
        [45.3586, 17.5458],
        [44.4992, 15.2846]], device='cuda:0', dtype=torch.float64)
0.6183206074829859
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[42.8699, 17.6515],
        [45.8756, 17.5250],
        [43.7088, 16.5879],
        [45.8323, 18.6496],
        [45.5041, 13.9843],
        [45.4525, 15.4886],
        [45.4671, 16.2838],
        [44.9192, 15.2391]], device='cuda:0', dtype=torch.float64)
0.8047074032029152
tensor([[[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4242, 15.6768],
        [45.7122, 16.0011],
        [45.4347, 15.5709],
        [46.0027, 16.3293],
        [46.2128, 16.5054],
        [45.6841, 16.1094],
        [45.6302, 17.1453],
        [45.8072, 16.3275]], device='cuda:0', dtype=torch.float64)
0.24072787477702218
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [43.1550, 17.2484]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.3761, 16.5927],
        [45.3960, 18.2861],
        [43.6085, 16.6237],
        [45.0746, 14.1141],
        [45.9162, 16.3495],
        [44.9890, 14.1636],
        [45.4061, 13.6512],
        [45.6806, 18.0688]], device='cuda:0', dtype=torch.float64)
0.6658439440968708
tensor([[[45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6033, 18.5554],
        [45.5008, 15.7841],
        [45.9369, 17.2206],
        [45.8080, 16.5642],
        [45.9978, 15.8942],
        [44.5462, 15.4069],
        [43.9027, 16.4607],
        [46.2329, 16.4314]], device='cuda:0', dtype=torch.float64)
0.6126850677401475
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6546, 15.6553],
        [43.8316, 16.5690],
        [45.7903, 17.5163],
        [44.4694, 16.0524],
        [45.7747, 17.6228],
        [43.3966, 17.2107],
        [45.6837, 16.3511],
        [45.3599, 13.5697]], device='cuda:0', dtype=torch.float64)
0.8085099709769256
tensor([[[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2394, 17.1920],
        [45.6641, 16.1972],
        [43.7574, 16.5817],
        [43.6750, 16.1477],
        [45.3248, 13.6879],
        [46.0940, 15.6802],
        [43.4349, 16.7661],
        [45.6057, 16.9336]], device='cuda:0', dtype=torch.float64)
0.9362501284125427
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4196, 15.7980],
        [44.0384, 16.2795],
        [46.2637, 16.1879],
        [45.1438, 14.1076],
        [43.9758, 16.1054],
        [45.7684, 18.7992],
        [43.3289, 17.2456],
        [46.2302, 16.1247]], device='cuda:0', dtype=torch.float64)
1.0023912301208364
tensor([[[43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 18.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.5586, 15.7196],
        [44.9955, 18.8274],
        [45.3157, 16.6067],
        [43.7260, 15.9627],
        [45.8164, 17.4056],
        [45.4173, 17.6054],
        [46.3609, 16.3686],
        [45.3578, 17.3776]], device='cuda:0', dtype=torch.float64)
0.7050089997488003
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 18.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.0342, 17.4730],
        [45.9317, 16.9552],
        [45.1351, 15.7659],
        [45.3368, 13.8457],
        [45.5013, 14.6994],
        [45.3205, 17.0491],
        [45.3605, 18.4153],
        [45.3610, 13.6325]], device='cuda:0', dtype=torch.float64)
0.5878101396776929
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [43.1550, 17.2484]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 17.7464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1519, 14.2344],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8600, 16.6187],
        [45.1117, 18.3770],
        [45.3092, 16.9543],
        [44.2758, 15.2121],
        [45.5352, 18.5204],
        [44.1263, 15.2275],
        [45.5067, 18.2401],
        [44.6629, 15.1508]], device='cuda:0', dtype=torch.float64)
0.6557411668306845
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1519, 14.2344],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6174, 15.3235],
        [44.1380, 15.8664],
        [45.1983, 18.8426],
        [45.5951, 15.4853],
        [45.7785, 17.4540],
        [42.9875, 17.5130],
        [45.9294, 16.7319],
        [45.1812, 17.9395]], device='cuda:0', dtype=torch.float64)
0.7145819063584881
tensor([[[45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1519, 14.2344]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 15.7464]],

        [[45.6467, 18.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2124, 17.6922],
        [45.0554, 14.9824],
        [46.1279, 16.4633],
        [43.9453, 15.8343],
        [45.8109, 17.3819],
        [45.5878, 15.8892],
        [43.6141, 16.4294],
        [46.0568, 15.7172]], device='cuda:0', dtype=torch.float64)
0.7738267849515379
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.9108, 15.1383],
        [45.1309, 15.5460],
        [45.2018, 15.2947],
        [45.0814, 15.3619],
        [46.3782, 16.5779],
        [45.3028, 18.7781],
        [44.2133, 15.2292],
        [43.9156, 16.2073]], device='cuda:0', dtype=torch.float64)
0.7763461607923097
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1519, 14.2344],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4222, 17.5028],
        [43.2705, 17.2066],
        [45.5561, 14.6902],
        [45.6832, 17.6300],
        [45.1832, 18.4088],
        [46.0467, 15.9749],
        [45.4016, 17.5327],
        [46.0403, 17.0928]], device='cuda:0', dtype=torch.float64)
0.7003485053797172
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4489, 14.4864],
        [43.7169, 15.9875],
        [46.2556, 16.6584],
        [43.4940, 16.0249],
        [46.2171, 16.8988],
        [45.7756, 17.2546],
        [43.9618, 16.0976],
        [45.9845, 15.7142]], device='cuda:0', dtype=torch.float64)
0.9830431377352715
tensor([[[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 17.7464]],

        [[45.1467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4604, 17.1775],
        [43.4320, 16.8747],
        [46.2085, 15.7707],
        [43.9541, 15.7133],
        [44.0591, 16.1810],
        [45.4365, 16.0055],
        [45.7672, 15.7142],
        [44.8910, 15.2850]], device='cuda:0', dtype=torch.float64)
0.9280884241915845
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.1139, 15.8643],
        [46.1220, 15.6756],
        [44.7743, 15.6910],
        [43.6044, 16.5843],
        [45.3852, 14.8994],
        [45.6154, 15.4659],
        [44.9752, 13.9338],
        [45.5634, 18.6352]], device='cuda:0', dtype=torch.float64)
0.6259633604355488
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 18.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 18.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6900, 16.5920],
        [45.8894, 18.6960],
        [45.5330, 17.2855],
        [45.9842, 16.2561],
        [43.3485, 17.1310],
        [44.2565, 16.0324],
        [44.9859, 15.1361],
        [45.3095, 19.0217]], device='cuda:0', dtype=torch.float64)
0.7111465434032044
tensor([[[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1519, 14.2344],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2889, 15.3199],
        [45.7666, 17.0815],
        [45.5765, 15.9198],
        [42.5178, 18.3634],
        [45.2605, 15.2750],
        [45.3563, 16.7478],
        [46.4403, 16.6138],
        [45.5157, 14.6424]], device='cuda:0', dtype=torch.float64)
0.6949607983438264
tensor([[[45.6467, 17.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3081, 15.9939],
        [45.2583, 18.2453],
        [46.1491, 15.9472],
        [45.7685, 17.3821],
        [45.6866, 17.9007],
        [45.7180, 17.0222],
        [45.4451, 16.2876],
        [43.8682, 15.5786]], device='cuda:0', dtype=torch.float64)
0.4926268907837445
tensor([[[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[43.1550, 17.2484],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 16.2464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0495, 15.4086],
        [45.7862, 16.7264],
        [45.3211, 17.0401],
        [42.8891, 17.6869],
        [44.9835, 18.8078],
        [44.1931, 15.3882],
        [45.6108, 16.6574],
        [45.4539, 15.4364]], device='cuda:0', dtype=torch.float64)
0.7821061744116266
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5127, 15.7979],
        [44.0630, 15.8503],
        [44.2137, 15.7080],
        [43.6019, 16.0527],
        [44.0953, 15.3139],
        [46.4508, 16.3481],
        [45.3584, 15.7780],
        [45.1573, 18.3645]], device='cuda:0', dtype=torch.float64)
0.9965856213465679
tensor([[[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 18.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [43.1550, 17.2484],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4454, 16.1334],
        [44.9631, 15.0205],
        [44.1072, 15.9495],
        [45.5381, 18.1572],
        [45.8598, 17.3876],
        [45.2147, 14.8124],
        [45.7368, 17.2950],
        [45.5243, 17.8781]], device='cuda:0', dtype=torch.float64)
0.46095197315846254
tensor([[[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6826, 18.6571],
        [44.3262, 15.6435],
        [46.2087, 15.8026],
        [45.1104, 13.9521],
        [45.9550, 16.7568],
        [45.5122, 18.5072],
        [43.9875, 16.1316],
        [43.8383, 16.1902]], device='cuda:0', dtype=torch.float64)
0.8031462620955784
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[44.1467, 15.7464],
         [45.6467, 15.7464],
         [43.1550, 17.2484],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4122, 15.8099],
        [45.3463, 18.9693],
        [45.8188, 16.9478],
        [44.0423, 15.7869],
        [45.4651, 14.3031],
        [45.7561, 18.1949],
        [45.7227, 18.8498],
        [45.1046, 15.2382]], device='cuda:0', dtype=torch.float64)
0.4981097048250881
tensor([[[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [43.1550, 17.2484],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [43.1550, 17.2484],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.1027, 15.4384],
        [45.8737, 16.0204],
        [43.8739, 16.1231],
        [45.2098, 14.7037],
        [45.5492, 15.8534],
        [43.0442, 17.5140],
        [43.2788, 17.0535],
        [43.7116, 16.3041]], device='cuda:0', dtype=torch.float64)
1.3103253298260376
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.5985, 15.6574],
        [45.1878, 18.7722],
        [45.1770, 14.7744],
        [44.3347, 15.7469],
        [45.3227, 13.8260],
        [45.7392, 17.6039],
        [46.0791, 16.2084],
        [46.4100, 16.4119]], device='cuda:0', dtype=torch.float64)
0.5794563847874437
tensor([[[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [43.1550, 17.2484],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8092, 15.9632],
        [45.4215, 14.3093],
        [45.2239, 13.8235],
        [45.0794, 14.1466],
        [45.7376, 16.5705],
        [43.6183, 16.7271],
        [45.4773, 18.2642],
        [45.2435, 13.7516]], device='cuda:0', dtype=torch.float64)
0.5385620203215715
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [44.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7495, 18.4611],
        [44.0829, 15.4034],
        [45.7883, 16.0080],
        [45.9038, 15.8125],
        [45.8373, 16.5180],
        [43.9717, 15.8619],
        [44.9993, 14.9524],
        [45.3170, 16.2415]], device='cuda:0', dtype=torch.float64)
0.6482706835622833
tensor([[[43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 15.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.5282, 16.1429],
        [45.9321, 15.9086],
        [45.4876, 14.9580],
        [45.5762, 18.4161],
        [46.3298, 16.2042],
        [43.5995, 16.8929],
        [45.5043, 18.5135],
        [45.2227, 14.7031]], device='cuda:0', dtype=torch.float64)
0.9202501493728412
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1519, 14.2344],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[44.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.1133, 16.2896],
        [45.1831, 15.6087],
        [46.1907, 16.4356],
        [43.0095, 17.5374],
        [45.2520, 17.5323],
        [43.6564, 16.2402],
        [46.1757, 16.8346],
        [45.8372, 16.3080]], device='cuda:0', dtype=torch.float64)
0.9518722523196079
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1519, 14.2344]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1519, 14.2344],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4972, 14.6451],
        [45.2494, 15.0224],
        [45.1745, 14.0756],
        [45.3761, 15.3490],
        [45.5214, 18.5454],
        [45.2516, 17.8814],
        [45.4399, 16.4827],
        [44.8880, 15.3708]], device='cuda:0', dtype=torch.float64)
0.3184157672801236
tensor([[[43.6467, 16.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 18.2464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 15.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.1788, 15.5137],
        [45.7523, 18.8024],
        [45.6773, 18.0678],
        [43.1822, 17.4010],
        [46.0479, 16.4061],
        [45.3613, 16.2868],
        [45.1608, 15.1789],
        [43.5124, 16.0933]], device='cuda:0', dtype=torch.float64)
0.9348399360590579
tensor([[[46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2669, 14.1122],
        [45.8772, 15.8504],
        [44.3944, 15.5907],
        [46.1059, 16.5072],
        [44.1672, 15.7809],
        [45.4779, 18.4887],
        [45.5947, 15.2959],
        [45.6529, 17.2798]], device='cuda:0', dtype=torch.float64)
0.5352851619864911
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.1302, 16.8971],
        [46.0808, 16.0445],
        [46.2650, 16.5750],
        [44.5647, 15.2997],
        [45.4518, 15.6901],
        [45.3644, 15.3015],
        [45.8116, 17.6604],
        [45.3515, 13.7579]], device='cuda:0', dtype=torch.float64)
0.4434709060294467
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3971, 16.6602],
        [45.2759, 17.2070],
        [45.6530, 15.5001],
        [45.5521, 18.3519],
        [45.5454, 16.9819],
        [45.2955, 16.0619],
        [45.4917, 16.4932],
        [45.3766, 16.9146]], device='cuda:0', dtype=torch.float64)
0.28870009256409873
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1519, 14.2344]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.0614, 16.2701],
        [43.7550, 16.5765],
        [45.3206, 16.0503],
        [45.1353, 15.2505],
        [45.0887, 17.8308],
        [44.4275, 15.2135],
        [44.6207, 15.8977],
        [45.4485, 17.3213]], device='cuda:0', dtype=torch.float64)
0.7707352103045313
tensor([[[45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [43.1550, 17.2484],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.8797, 15.9068],
        [44.0473, 15.9005],
        [44.2751, 15.9119],
        [45.3998, 17.6506],
        [45.5900, 18.2366],
        [45.3185, 14.6846],
        [45.1375, 18.3777],
        [46.4459, 16.3696]], device='cuda:0', dtype=torch.float64)
0.8369878032934028
tensor([[[44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.0064, 16.1588],
        [44.5779, 15.0092],
        [45.1783, 17.8594],
        [45.2265, 15.3324],
        [46.1426, 16.1557],
        [45.1248, 16.3629],
        [45.2378, 17.6938],
        [46.1659, 16.7837]], device='cuda:0', dtype=torch.float64)
0.6277677844396705
tensor([[[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6305, 18.2867],
        [46.2046, 16.4119],
        [45.6401, 17.9841],
        [45.1372, 15.2073],
        [43.0070, 17.2269],
        [44.4773, 16.0893],
        [43.7443, 16.3066],
        [45.2941, 18.6499]], device='cuda:0', dtype=torch.float64)
0.9339717076315022
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [43.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1519, 14.2344],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.2589, 15.3171],
        [46.2145, 15.7785],
        [45.5472, 16.4190],
        [46.3170, 16.8533],
        [45.9226, 17.0145],
        [45.2300, 13.9599],
        [45.2379, 18.7524],
        [45.2018, 15.0065]], device='cuda:0', dtype=torch.float64)
0.5339529499475129
tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.5596, 15.3828],
        [45.4078, 16.1597],
        [45.8190, 17.5005],
        [45.6402, 17.9843],
        [44.5520, 15.1230],
        [45.2414, 19.2638],
        [44.8450, 15.4939],
        [46.4463, 16.4114]], device='cuda:0', dtype=torch.float64)
0.5721402241410931
tensor([[[45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0921, 18.6971],
        [46.1876, 16.6740],
        [45.5401, 17.9871],
        [45.3742, 15.7824],
        [45.6791, 17.8371],
        [43.7486, 15.9552],
        [43.8974, 15.8166],
        [44.8760, 13.9611]], device='cuda:0', dtype=torch.float64)
0.7670201176789458
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[45.6467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.0661, 17.5093],
        [45.3661, 16.5902],
        [45.5405, 14.6966],
        [43.4821, 16.9123],
        [44.3037, 15.8546],
        [45.5462, 18.7525],
        [45.5997, 16.9209],
        [46.1498, 16.6219]], device='cuda:0', dtype=torch.float64)
0.9514867070955657
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.1550, 17.2484],
         [45.6467, 17.2464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0718, 16.3329],
        [45.8739, 15.7926],
        [43.0994, 17.3755],
        [44.1628, 15.8196],
        [46.1495, 15.7611],
        [44.0132, 15.5375],
        [45.3158, 15.2817],
        [44.1015, 15.6650]], device='cuda:0', dtype=torch.float64)
1.0853356333433528
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.3432, 15.4787],
        [45.0930, 16.2977],
        [45.2110, 13.9544],
        [45.4068, 17.2223],
        [45.6407, 14.5728],
        [44.7889, 15.3685],
        [45.3564, 16.9067],
        [45.5460, 18.3345]], device='cuda:0', dtype=torch.float64)
0.5234198997389491
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.9528, 15.4532],
        [45.8828, 15.7199],
        [43.7565, 16.6237],
        [45.7954, 17.5056],
        [44.9257, 19.0454],
        [45.1421, 14.9119],
        [45.1537, 15.2541],
        [46.3195, 16.7586]], device='cuda:0', dtype=torch.float64)
0.7606952039122227
tensor([[[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[45.1467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5450, 15.9027],
        [45.1103, 18.5104],
        [45.5122, 18.6768],
        [45.2013, 18.0471],
        [46.2885, 15.9845],
        [45.6229, 17.5809],
        [43.7620, 16.3454],
        [44.3279, 15.4765]], device='cuda:0', dtype=torch.float64)
0.6559978878169
tensor([[[45.6467, 18.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.1519, 14.2344],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.2492, 15.3369],
        [46.2552, 16.0309],
        [42.7317, 17.9430],
        [45.1899, 14.6730],
        [45.7727, 16.0015],
        [43.6364, 16.8632],
        [45.6814, 16.1807],
        [45.3447, 18.0479]], device='cuda:0', dtype=torch.float64)
0.9940746585004109
tensor([[[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3011, 15.2789],
        [45.1876, 17.8623],
        [46.1421, 16.9592],
        [45.2634, 14.7024],
        [42.7172, 18.0697],
        [46.0081, 16.0705],
        [45.2311, 16.5418],
        [46.1015, 16.3533]], device='cuda:0', dtype=torch.float64)
0.776207675390334
tensor([[[45.1467, 13.7464],
         [45.1519, 14.2344],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 18.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.8692, 15.9523],
        [45.4522, 17.2196],
        [44.8571, 13.8951],
        [45.2537, 19.1702],
        [46.2370, 16.6741],
        [45.7829, 17.2366],
        [46.0896, 16.6837],
        [45.4555, 14.3146]], device='cuda:0', dtype=torch.float64)
0.5888675572005255
tensor([[[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3211, 14.6645],
        [44.0989, 16.2273],
        [45.6651, 18.4540],
        [45.2524, 18.8422],
        [44.5327, 15.9848],
        [45.2997, 16.1349],
        [45.4351, 17.2171],
        [43.4754, 17.1419]], device='cuda:0', dtype=torch.float64)
0.6938650597588836
tensor([[[45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7874, 16.5719],
        [44.9103, 13.9558],
        [43.6407, 16.3401],
        [45.6641, 15.7161],
        [46.2473, 16.4606],
        [46.2828, 16.2124],
        [45.3127, 17.8120],
        [45.2361, 17.9912]], device='cuda:0', dtype=torch.float64)
0.6246697294952266
tensor([[[45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 18.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8723, 16.8896],
        [45.4792, 17.8644],
        [45.5928, 17.1855],
        [45.9561, 16.7390],
        [46.2224, 16.8469],
        [45.5842, 16.7047],
        [45.2058, 14.2334],
        [45.7438, 18.5011]], device='cuda:0', dtype=torch.float64)
0.2790438699409857
tensor([[[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [43.6467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [43.1550, 17.2484]]], device='cuda:0', dtype=torch.float64)
tensor([[45.9177, 17.4791],
        [45.6802, 15.7562],
        [45.2126, 17.5394],
        [45.3683, 14.6150],
        [43.5358, 16.2140],
        [45.0406, 15.4153],
        [46.0265, 16.3376],
        [44.7458, 15.2306]], device='cuda:0', dtype=torch.float64)
0.6854790983664155
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8566, 17.5785],
        [45.7781, 16.8932],
        [46.1943, 16.3001],
        [45.4644, 15.6412],
        [45.4468, 18.9580],
        [45.6238, 18.0843],
        [43.5209, 16.6228],
        [46.2291, 16.2562]], device='cuda:0', dtype=torch.float64)
0.6013352250019491
tensor([[[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7793, 16.4907],
        [45.2555, 16.5911],
        [43.8855, 16.4918],
        [45.8314, 16.2244],
        [46.2160, 16.0658],
        [44.3581, 15.4792],
        [45.7189, 17.2669],
        [45.6937, 17.6436]], device='cuda:0', dtype=torch.float64)
0.6712831342530483
tensor([[[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [43.1550, 17.2484]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2230, 16.5145],
        [46.1722, 15.9887],
        [45.1912, 14.9077],
        [45.6032, 18.3497],
        [44.9842, 14.9367],
        [45.3087, 14.2164],
        [45.0973, 17.8216],
        [43.7816, 15.9057]], device='cuda:0', dtype=torch.float64)
0.5910849919775136
tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 15.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8107, 16.1685],
        [44.8455, 15.1730],
        [45.2044, 17.5669],
        [45.4102, 18.4360],
        [46.2871, 16.5249],
        [43.6621, 16.8366],
        [43.4720, 16.1054],
        [44.1970, 15.6540]], device='cuda:0', dtype=torch.float64)
0.9708936569224078
tensor([[[43.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0067, 14.8957],
        [45.1546, 19.0272],
        [44.9296, 15.2879],
        [45.3340, 18.8681],
        [45.9090, 17.2045],
        [43.6041, 15.9965],
        [46.1305, 16.1199],
        [45.8358, 16.2940]], device='cuda:0', dtype=torch.float64)
0.6219707853234461
tensor([[[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2238, 15.0294],
        [45.7934, 17.4795],
        [46.0285, 16.6196],
        [45.7096, 15.3762],
        [46.1636, 17.1303],
        [43.3865, 17.1285],
        [45.6129, 16.5685],
        [45.9613, 16.3548]], device='cuda:0', dtype=torch.float64)
0.5749437548007817
tensor([[[44.6467, 15.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4837, 17.5247],
        [45.4245, 18.2393],
        [46.0846, 15.9686],
        [45.1705, 17.6646],
        [43.8690, 16.1367],
        [45.3001, 13.8923],
        [45.1369, 14.8216],
        [45.5665, 17.7911]], device='cuda:0', dtype=torch.float64)
0.5123316103654164
tensor([[[44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3301, 16.4517],
        [45.5684, 18.5839],
        [45.1027, 13.6915],
        [43.4097, 16.9735],
        [45.7989, 17.3295],
        [45.6184, 18.2862],
        [43.6614, 16.6442],
        [43.6788, 16.6487]], device='cuda:0', dtype=torch.float64)
0.9643692464384327
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 17.7464]],

        [[44.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2732, 15.9611],
        [46.3945, 16.5535],
        [44.0693, 16.2175],
        [45.4823, 15.5887],
        [45.5624, 18.5680],
        [45.0981, 13.9013],
        [45.9686, 16.9080],
        [43.6064, 16.5928]], device='cuda:0', dtype=torch.float64)
0.7260043064398474
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.8621, 15.9341],
        [45.0181, 13.9959],
        [44.5745, 15.3011],
        [46.0704, 16.7383],
        [45.7630, 16.4594],
        [45.6972, 17.4650],
        [43.0054, 17.0168],
        [43.6939, 16.6806]], device='cuda:0', dtype=torch.float64)
1.0910254246514737
tensor([[[46.1467, 16.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1519, 14.2344],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1865, 13.8746],
        [45.4494, 16.1296],
        [46.0438, 15.7585],
        [44.0427, 15.8795],
        [45.3264, 16.1283],
        [45.6050, 17.5330],
        [44.8896, 18.8377],
        [45.2143, 18.9439]], device='cuda:0', dtype=torch.float64)
0.5232448420643323
tensor([[[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.4904, 15.3101],
        [45.7206, 17.2754],
        [45.4332, 18.0934],
        [45.4539, 17.4609],
        [45.7668, 15.6097],
        [44.8315, 13.8705],
        [45.2531, 19.1602],
        [45.8210, 16.3376]], device='cuda:0', dtype=torch.float64)
0.38658693597322136
tensor([[[44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.0431, 15.8005],
        [46.1822, 15.7734],
        [44.7223, 15.4926],
        [43.7374, 15.8877],
        [45.6574, 18.2383],
        [45.8625, 16.2942],
        [46.3345, 16.4233],
        [45.5749, 16.9414]], device='cuda:0', dtype=torch.float64)
0.8283191191122222
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1519, 14.2344]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.1397, 15.3116],
        [44.1971, 16.0481],
        [45.0657, 14.9328],
        [44.0308, 16.0485],
        [45.3568, 17.6397],
        [46.1042, 16.4640],
        [45.5261, 17.6915],
        [43.5128, 16.1809]], device='cuda:0', dtype=torch.float64)
1.018144198651699
tensor([[[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2080, 17.1828],
        [45.9284, 16.1306],
        [45.4640, 18.8479],
        [45.9801, 16.3972],
        [45.2053, 17.3694],
        [43.9622, 15.9903],
        [45.9503, 17.1445],
        [45.7136, 15.7297]], device='cuda:0', dtype=torch.float64)
0.48878889652856083
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.5957, 16.0129],
        [45.7168, 15.8999],
        [43.5528, 16.9275],
        [44.5277, 15.4565],
        [45.0919, 18.7482],
        [45.7362, 17.6172],
        [46.2777, 16.3055],
        [43.8500, 16.1519]], device='cuda:0', dtype=torch.float64)
1.0699763014776706
tensor([[[45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]],

        [[45.6467, 17.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[44.1467, 15.7464],
         [45.6467, 18.7464],
         [43.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 13.7464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.8641, 15.9322],
        [45.1616, 17.9926],
        [45.4599, 14.8310],
        [43.8454, 15.6215],
        [45.4313, 16.9046],
        [45.4524, 18.7235],
        [45.7255, 18.7922],
        [45.9339, 16.3464]], device='cuda:0', dtype=torch.float64)
0.654394878263661
tensor([[[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1519, 14.2344],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3521, 14.6188],
        [44.5783, 15.3913],
        [42.9522, 17.2753],
        [45.2370, 18.3309],
        [45.4188, 15.2252],
        [45.5924, 17.9545],
        [45.1900, 19.3574],
        [46.1322, 15.8868]], device='cuda:0', dtype=torch.float64)
0.6882007599761841
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.7464],
         [43.1550, 17.2484]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5472, 18.6842],
        [45.3499, 13.7745],
        [45.0792, 17.9171],
        [45.5242, 15.5013],
        [45.5409, 15.5870],
        [45.3652, 18.3969],
        [44.2510, 15.8219],
        [45.4830, 18.3818]], device='cuda:0', dtype=torch.float64)
0.4826547871887744
tensor([[[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 18.7464],
         [45.1519, 14.2344],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]],

        [[45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8496, 16.1678],
        [46.0142, 16.2598],
        [45.6052, 16.6984],
        [45.7078, 17.0752],
        [45.5478, 17.9040],
        [45.6025, 18.0283],
        [46.3887, 16.5708],
        [45.7072, 18.8705]], device='cuda:0', dtype=torch.float64)
0.2775602153066381
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]],

        [[45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.2478, 15.4680],
        [45.4293, 18.4109],
        [45.8354, 16.7817],
        [46.1527, 16.0400],
        [45.4701, 14.0364],
        [45.2074, 19.3595],
        [45.7698, 16.2134],
        [45.8867, 16.0100]], device='cuda:0', dtype=torch.float64)
0.4318129799475461
tensor([[[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[45.1467, 18.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.3668, 15.6375],
        [45.3038, 14.7035],
        [45.3015, 18.5110],
        [45.8548, 17.3835],
        [45.3028, 15.4441],
        [45.1487, 18.9118],
        [45.4982, 18.4310],
        [45.1521, 18.3122]], device='cuda:0', dtype=torch.float64)
0.43546145796971103
tensor([[[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1519, 14.2344],
         [45.6467, 18.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484],
         [45.1519, 14.2344]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1157, 17.8847],
        [44.7022, 15.6398],
        [45.5745, 18.5729],
        [43.9408, 16.4032],
        [45.3976, 14.0301],
        [42.5766, 18.3002],
        [45.3601, 13.5536],
        [45.3109, 14.8673]], device='cuda:0', dtype=torch.float64)
0.8958343463569822
tensor([[[45.6467, 18.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.1102, 16.1096],
        [46.1235, 16.0664],
        [44.9670, 15.3849],
        [43.6652, 16.2709],
        [42.7988, 17.8934],
        [44.5731, 15.6302],
        [45.3853, 15.1819],
        [46.1834, 16.7043]], device='cuda:0', dtype=torch.float64)
1.1190473515783057
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1519, 14.2344],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5268, 15.9349],
        [45.7354, 17.2213],
        [44.9960, 18.8117],
        [44.9474, 15.5383],
        [45.0359, 18.9076],
        [45.0133, 15.1221],
        [46.1846, 16.3593],
        [45.0820, 15.5765]], device='cuda:0', dtype=torch.float64)
0.4705503396012316
tensor([[[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4289, 15.4051],
        [45.4087, 17.7283],
        [45.3303, 16.6007],
        [44.9475, 15.5382],
        [43.8739, 15.9505],
        [45.6326, 16.0633],
        [45.2626, 18.2087],
        [46.2288, 16.2433]], device='cuda:0', dtype=torch.float64)
0.5348074194777265
tensor([[[45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6076, 18.2955],
        [45.8103, 15.7433],
        [45.2895, 18.6768],
        [45.4870, 15.4790],
        [45.7852, 17.6257],
        [44.5217, 15.8082],
        [45.6977, 15.9402],
        [43.4276, 16.9951]], device='cuda:0', dtype=torch.float64)
0.6614255770267947
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8259, 17.3337],
        [45.2188, 18.9542],
        [45.2409, 19.2660],
        [45.7127, 16.4117],
        [45.9466, 16.6162],
        [45.4588, 18.9777],
        [45.2140, 14.7734],
        [43.7469, 15.8449]], device='cuda:0', dtype=torch.float64)
0.4727331177397857
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.1550, 17.2484]],

        [[44.1467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 18.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1519, 14.2344],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8901, 15.8527],
        [45.2309, 18.9574],
        [44.4821, 16.0099],
        [45.3507, 17.5957],
        [45.5643, 18.3844],
        [43.5920, 16.0949],
        [44.6140, 15.3717],
        [45.6232, 15.5585]], device='cuda:0', dtype=torch.float64)
0.6980210747482942
tensor([[[45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 15.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.2091, 16.5329],
        [45.9563, 16.2060],
        [44.1234, 15.2875],
        [45.2356, 13.7110],
        [45.9901, 17.2167],
        [43.9933, 15.9807],
        [46.2056, 16.6434],
        [45.1539, 13.9065]], device='cuda:0', dtype=torch.float64)
0.7323420195275587
tensor([[[45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3600, 17.9879],
        [45.5471, 18.2813],
        [46.2605, 16.5536],
        [45.3974, 15.2570],
        [45.0932, 16.3331],
        [45.0308, 13.9667],
        [45.5754, 15.5459],
        [45.2906, 17.2915]], device='cuda:0', dtype=torch.float64)
0.3621581560333699
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3162, 18.8169],
        [46.1140, 16.8772],
        [45.7641, 17.0443],
        [45.3541, 15.8136],
        [46.0181, 16.1831],
        [45.7102, 18.4296],
        [43.4363, 17.0075],
        [46.3349, 16.7784]], device='cuda:0', dtype=torch.float64)
0.6946777776125633
tensor([[[45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 17.7464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2204, 13.9905],
        [45.5700, 15.6120],
        [45.9446, 15.7925],
        [45.1249, 18.4484],
        [46.0338, 16.4825],
        [45.8046, 18.6627],
        [42.6813, 18.0726],
        [45.6896, 16.3581]], device='cuda:0', dtype=torch.float64)
0.6077399142353026
tensor([[[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.0443, 16.0841],
        [45.3388, 15.1117],
        [45.2256, 17.8681],
        [44.6191, 15.1945],
        [45.4319, 17.8490],
        [44.5320, 15.1313],
        [45.6503, 18.3696],
        [43.7541, 16.2371]], device='cuda:0', dtype=torch.float64)
0.6836179241533716
tensor([[[45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0800, 14.1006],
        [46.0221, 16.5342],
        [45.3136, 18.2907],
        [44.6371, 15.9428],
        [45.4018, 14.9094],
        [44.1914, 15.2615],
        [43.3105, 17.2566],
        [46.3281, 16.5811]], device='cuda:0', dtype=torch.float64)
0.8563985745630476
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.9222, 15.1429],
        [46.1624, 17.0598],
        [45.4097, 15.5308],
        [46.0545, 17.0579],
        [43.8797, 15.9067],
        [45.6568, 18.1955],
        [45.0966, 13.7686],
        [45.1972, 15.2648]], device='cuda:0', dtype=torch.float64)
0.5923322906001453
tensor([[[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3563, 15.3250],
        [46.2421, 16.7645],
        [45.7830, 18.5569],
        [45.6376, 16.0061],
        [45.1389, 18.4085],
        [45.8785, 16.8265],
        [45.5021, 16.2415],
        [45.8435, 18.8474]], device='cuda:0', dtype=torch.float64)
0.328036067054713
tensor([[[45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3073, 13.7275],
        [45.1638, 18.4838],
        [43.5258, 16.7757],
        [45.4656, 15.6385],
        [44.0876, 15.6452],
        [45.5092, 15.5354],
        [44.0412, 15.6671],
        [45.3163, 14.0755]], device='cuda:0', dtype=torch.float64)
0.8280660736487258
tensor([[[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8042, 16.1190],
        [43.7776, 16.4012],
        [45.0634, 14.0347],
        [44.1103, 15.5470],
        [45.7046, 16.3775],
        [45.5313, 18.6226],
        [43.2349, 17.1036],
        [43.6442, 16.6718]], device='cuda:0', dtype=torch.float64)
1.0876341223798371
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1519, 14.2344],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.1519, 14.2344],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.0738, 16.5267],
        [45.7748, 17.4982],
        [45.4980, 15.8931],
        [42.9809, 17.5326],
        [45.7590, 16.1472],
        [45.4933, 17.2248],
        [45.6531, 15.5176],
        [45.3189, 13.8898]], device='cuda:0', dtype=torch.float64)
0.588519858151618
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [43.1550, 17.2484],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.5385, 15.3782],
        [45.4980, 17.0576],
        [44.9120, 14.9274],
        [44.1073, 15.2612],
        [44.4921, 15.6907],
        [42.8678, 17.7791],
        [46.4499, 16.4321],
        [45.5166, 16.6508]], device='cuda:0', dtype=torch.float64)
1.024842057956763
tensor([[[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [44.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.0114, 16.6098],
        [46.3834, 16.4035],
        [44.2650, 15.3557],
        [46.4549, 16.2707],
        [43.2404, 17.3081],
        [45.8241, 18.6540],
        [45.3922, 14.4752],
        [45.5435, 18.5284]], device='cuda:0', dtype=torch.float64)
0.8099380826615157
tensor([[[45.6467, 18.7464],
         [45.1467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.1583, 17.9958],
        [43.6738, 16.2521],
        [45.3910, 18.4534],
        [44.8968, 13.8340],
        [46.1789, 16.5525],
        [45.3967, 17.5287],
        [45.5961, 17.8636],
        [45.7506, 15.8498]], device='cuda:0', dtype=torch.float64)
0.6632677438847219
tensor([[[43.6467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[43.6467, 16.2464],
         [45.6467, 18.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.8847, 15.9477],
        [44.6357, 15.6572],
        [43.3152, 17.0037],
        [44.0856, 15.3022],
        [45.4981, 16.3799],
        [46.2571, 16.4781],
        [45.7073, 17.6732],
        [43.9471, 15.5001]], device='cuda:0', dtype=torch.float64)
1.0970210259445907
tensor([[[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2326, 18.6511],
        [45.1752, 18.0899],
        [45.8872, 16.5006],
        [45.4472, 14.0324],
        [45.2911, 15.2957],
        [44.7827, 15.1801],
        [44.5042, 15.5597],
        [45.4953, 16.3806]], device='cuda:0', dtype=torch.float64)
0.43783528958259416
tensor([[[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1519, 14.2344]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3890, 16.4829],
        [44.9120, 14.9274],
        [43.9458, 15.8865],
        [42.6368, 18.1963],
        [43.3460, 17.1346],
        [45.5111, 17.3493],
        [45.2653, 13.6123],
        [45.9042, 16.0323]], device='cuda:0', dtype=torch.float64)
1.0613033846219615
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3088, 16.3057],
        [46.1496, 16.3627],
        [43.4490, 16.7096],
        [45.1698, 17.9611],
        [45.3652, 18.4303],
        [44.6567, 14.9523],
        [45.3112, 13.7196],
        [45.2949, 17.9683]], device='cuda:0', dtype=torch.float64)
0.6542771157622764
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2329, 15.3338],
        [44.9089, 15.1762],
        [45.0821, 14.8852],
        [45.3631, 16.4328],
        [45.5803, 17.9463],
        [45.9942, 16.5169],
        [45.2178, 14.7712],
        [45.4445, 16.1869]], device='cuda:0', dtype=torch.float64)
0.40384275881046616
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [43.6467, 16.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2170, 18.6125],
        [45.4771, 18.3626],
        [44.0900, 15.8145],
        [45.8074, 16.9539],
        [45.2558, 15.3494],
        [45.6549, 17.3637],
        [45.2894, 16.4450],
        [44.5029, 15.4486]], device='cuda:0', dtype=torch.float64)
0.5791681080140711
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7908, 15.5960],
        [42.7641, 17.9045],
        [43.5720, 15.9271],
        [45.2993, 18.2144],
        [45.6919, 16.4733],
        [44.0262, 15.4034],
        [44.0228, 15.4282],
        [44.5576, 15.1136]], device='cuda:0', dtype=torch.float64)
1.1781088376266073
tensor([[[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.9611, 17.1126],
        [45.6740, 17.4277],
        [45.4235, 18.6843],
        [45.3368, 13.9741],
        [45.0797, 15.2148],
        [45.3318, 13.5847],
        [45.7440, 15.6150],
        [45.5179, 17.9274]], device='cuda:0', dtype=torch.float64)
0.2675500700432081
tensor([[[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [44.6467, 15.2464],
         [45.1519, 14.2344]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3258, 17.7582],
        [45.8400, 15.7013],
        [46.3250, 16.6002],
        [45.0947, 15.6285],
        [44.5955, 14.9903],
        [45.7103, 16.1874],
        [45.8057, 16.0831],
        [45.7699, 15.7374]], device='cuda:0', dtype=torch.float64)
0.47088585770816027
tensor([[[45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1519, 14.2344]]], device='cuda:0', dtype=torch.float64)
tensor([[44.3031, 15.2872],
        [45.3783, 18.1883],
        [45.8431, 16.5804],
        [45.7917, 16.3441],
        [45.7345, 18.7285],
        [45.4248, 15.3837],
        [45.1462, 14.0622],
        [45.1147, 13.7594]], device='cuda:0', dtype=torch.float64)
0.3876408511655278
tensor([[[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[43.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6612, 18.4297],
        [43.7422, 16.1905],
        [46.2973, 16.1122],
        [45.3993, 13.6742],
        [45.2670, 16.1841],
        [45.4721, 18.3485],
        [45.1438, 19.0356],
        [45.9265, 16.0232]], device='cuda:0', dtype=torch.float64)
0.5690546294256247
tensor([[[45.6467, 17.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464],
         [43.1550, 17.2484]],

        [[45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.6467, 18.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2011, 17.6709],
        [45.5141, 18.7269],
        [42.7837, 17.9104],
        [44.3442, 15.8408],
        [46.1132, 16.4658],
        [45.6830, 18.1938],
        [45.0117, 13.9238],
        [43.4768, 17.2192]], device='cuda:0', dtype=torch.float64)
1.0883966468193869
tensor([[[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [43.1550, 17.2484]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2202, 18.3319],
        [43.8215, 16.5940],
        [45.3816, 14.5715],
        [46.1722, 15.8312],
        [45.8202, 17.3750],
        [43.6814, 16.5169],
        [45.1759, 14.7032],
        [45.9498, 15.7328]], device='cuda:0', dtype=torch.float64)
0.8505752460112878
tensor([[[45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.1550, 17.2484],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.1467, 15.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [43.1550, 17.2484],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3498, 15.7867],
        [43.5487, 16.4950],
        [44.4265, 15.2819],
        [45.3883, 15.6146],
        [45.2920, 18.2654],
        [43.7568, 16.6197],
        [44.4186, 15.6617],
        [44.5598, 15.0721]], device='cuda:0', dtype=torch.float64)
0.9633109747800459
tensor([[[45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464]],

        [[45.6467, 17.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3513, 17.5720],
        [45.2225, 15.8044],
        [45.8493, 16.3131],
        [45.3522, 17.1831],
        [44.9898, 15.1683],
        [46.0657, 16.1989],
        [45.4343, 18.0929],
        [44.1037, 15.3821]], device='cuda:0', dtype=torch.float64)
0.4950183983891162
tensor([[[45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 16.2464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7014, 17.9448],
        [45.4512, 13.9714],
        [43.5893, 16.4062],
        [45.2883, 18.4996],
        [45.4739, 16.0260],
        [45.7730, 17.1900],
        [45.7654, 15.7928],
        [44.5179, 15.3602]], device='cuda:0', dtype=torch.float64)
0.5271429303669011
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8221, 16.3414],
        [45.3451, 16.7438],
        [43.9304, 15.8227],
        [45.1635, 17.8552],
        [45.5610, 18.5656],
        [45.5238, 15.3899],
        [44.9073, 13.9628],
        [45.6501, 18.1550]], device='cuda:0', dtype=torch.float64)
0.5026062405882821
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.9744, 16.7345],
        [45.4115, 15.4518],
        [45.7430, 16.0193],
        [45.7018, 17.5976],
        [45.5250, 17.1813],
        [44.6025, 15.4503],
        [45.2012, 17.8435],
        [45.6651, 15.9714]], device='cuda:0', dtype=torch.float64)
0.4127403253983509

Validation DataLoader 0:  80%|########  | 330/412 [01:18<00:19,  4.20it/s][AEpoch 0:  98%|#########7| 3632/3714 [33:12<00:44,  1.82it/s, loss=3.44, v_num=0, train/loss_step=3.750, train/acc_step=0.000]tensor([[[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [43.6467, 16.2464]],

        [[45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3536, 17.6783],
        [45.5580, 15.8602],
        [45.5020, 15.9557],
        [45.4832, 17.8469],
        [46.0889, 16.5651],
        [44.4733, 15.4862],
        [43.6073, 16.2449],
        [45.8922, 16.1706]], device='cuda:0', dtype=torch.float64)
0.6269415132929893
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.1745, 15.5457],
        [45.2036, 18.6486],
        [45.8066, 17.7251],
        [44.1105, 15.3707],
        [45.4248, 15.5655],
        [42.9547, 17.3518],
        [45.1270, 15.5526],
        [45.2301, 15.4008]], device='cuda:0', dtype=torch.float64)
0.910555158254801
tensor([[[44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1519, 14.2344],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6551, 17.5003],
        [45.4396, 16.2043],
        [45.4679, 14.2999],
        [45.7048, 15.4509],
        [45.9550, 16.4497],
        [45.4476, 14.9595],
        [43.5525, 16.3174],
        [45.3388, 17.6893]], device='cuda:0', dtype=torch.float64)
0.5335620332895585
tensor([[[44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4503, 14.0573],
        [44.6604, 15.3530],
        [44.4792, 15.5665],
        [45.3441, 18.3317],
        [45.2994, 16.1397],
        [45.4159, 14.2372],
        [46.2259, 16.2048],
        [45.4946, 18.4165]], device='cuda:0', dtype=torch.float64)
0.45027947755435394
tensor([[[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4360, 13.9682],
        [44.3582, 15.4234],
        [44.6550, 15.5388],
        [45.6475, 17.8946],
        [45.3528, 15.4092],
        [44.9592, 13.9509],
        [45.1750, 19.1288],
        [45.6213, 17.6410]], device='cuda:0', dtype=torch.float64)
0.5079553509553547
tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]],

        [[45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6872, 17.7030],
        [45.9877, 17.2157],
        [45.5263, 18.9395],
        [46.1279, 16.4985],
        [43.4806, 16.8864],
        [42.9822, 17.2824],
        [45.4656, 16.9097],
        [45.3569, 16.9589]], device='cuda:0', dtype=torch.float64)
0.8085228902483222
tensor([[[45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8552, 16.6100],
        [45.6432, 16.9338],
        [45.3263, 17.6925],
        [45.2110, 17.6120],
        [45.0420, 15.2386],
        [44.0303, 15.6404],
        [45.1834, 15.2705],
        [43.5211, 16.8932]], device='cuda:0', dtype=torch.float64)
0.7253172162390241
tensor([[[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.1467, 15.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.6020, 16.6177],
        [46.0596, 16.5258],
        [45.5899, 16.0662],
        [43.5203, 16.1046],
        [45.7472, 18.7302],
        [44.8379, 13.9806],
        [43.4244, 17.1869],
        [46.3151, 16.2528]], device='cuda:0', dtype=torch.float64)
1.1113373644684104
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4968, 15.8912],
        [45.5259, 15.8754],
        [43.8757, 16.0603],
        [45.1173, 16.3621],
        [44.6837, 15.3763],
        [44.9818, 18.9277],
        [44.1206, 15.4673],
        [45.5015, 15.8480]], device='cuda:0', dtype=torch.float64)
0.7498645277794624
tensor([[[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2119, 13.8760],
        [46.3003, 16.3906],
        [45.3401, 13.8550],
        [45.2338, 19.2809],
        [43.4210, 17.1510],
        [45.4795, 16.3773],
        [45.1908, 13.9015],
        [45.2125, 13.7543]], device='cuda:0', dtype=torch.float64)
0.5902471398775464
tensor([[[45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[44.6467, 15.2464],
         [43.1550, 17.2484],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8609, 18.7482],
        [43.3523, 17.2608],
        [43.5106, 16.5545],
        [45.9300, 16.0889],
        [43.5923, 16.4075],
        [45.2382, 16.8591],
        [45.6159, 16.6674],
        [43.5938, 16.4809]], device='cuda:0', dtype=torch.float64)
1.1660983221055619
tensor([[[45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [43.1550, 17.2484]],

        [[45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.1467, 15.7464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7423, 16.9548],
        [45.8435, 17.0227],
        [44.2497, 15.6042],
        [45.6640, 15.7805],
        [45.4081, 14.2540],
        [45.3398, 14.2756],
        [46.2980, 16.0367],
        [43.5460, 16.9632]], device='cuda:0', dtype=torch.float64)
0.6986173025841833
tensor([[[45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1519, 14.2344],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [44.6467, 15.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.0784, 15.3873],
        [43.7541, 15.8886],
        [45.1452, 14.8042],
        [45.1800, 17.2235],
        [44.6938, 15.6456],
        [43.8135, 16.6926],
        [45.9208, 16.3417],
        [45.8446, 16.0864]], device='cuda:0', dtype=torch.float64)
0.9243553806193279
tensor([[[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1519, 14.2344],
         [44.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [45.1467, 18.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0692, 18.7173],
        [43.4279, 16.9514],
        [45.0618, 15.1927],
        [45.3166, 16.5559],
        [45.0452, 18.7640],
        [45.2912, 16.1374],
        [43.3837, 17.1331],
        [45.2512, 15.0216]], device='cuda:0', dtype=torch.float64)
0.9007649964739031
tensor([[[45.1467, 13.7464],
         [45.6467, 16.2464],
         [43.1550, 17.2484],
         [43.6467, 16.2464],
         [45.1519, 14.2344]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0486, 15.6285],
        [45.1763, 13.5998],
        [45.4647, 17.2409],
        [44.8578, 13.8293],
        [45.2196, 13.8689],
        [46.2901, 16.8287],
        [45.5915, 17.1460],
        [45.4524, 14.0181]], device='cuda:0', dtype=torch.float64)
0.4568892589247189
tensor([[[45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.1519, 14.2344],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.0926, 15.8867],
        [45.1911, 17.4190],
        [45.9640, 15.8777],
        [45.4896, 18.6978],
        [44.5358, 15.4738],
        [45.2869, 18.5890],
        [44.8210, 15.2153],
        [43.9502, 15.4814]], device='cuda:0', dtype=torch.float64)
0.7774075862656931
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [43.1550, 17.2484],
         [44.6467, 15.2464],
         [44.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [43.1550, 17.2484],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.1509, 15.2200],
        [45.6563, 15.4727],
        [45.6503, 17.3384],
        [45.6020, 17.8299],
        [45.4791, 17.5202],
        [46.1045, 16.5633],
        [44.8123, 15.0775],
        [45.1198, 13.7591]], device='cuda:0', dtype=torch.float64)
0.5655457137050751
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [43.1550, 17.2484],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.0218, 17.5598],
        [46.0320, 16.6989],
        [42.9535, 17.4035],
        [43.5158, 16.4902],
        [45.1370, 13.8451],
        [45.4954, 16.1814],
        [43.2518, 17.2241],
        [45.7879, 17.5593]], device='cuda:0', dtype=torch.float64)
1.3944151555640178
tensor([[[45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 18.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6691, 16.1828],
        [43.7843, 16.1394],
        [45.7364, 18.4079],
        [45.2903, 19.1203],
        [45.3672, 18.2519],
        [46.1396, 16.7908],
        [43.8780, 15.7444],
        [44.6880, 15.6507]], device='cuda:0', dtype=torch.float64)
0.7811456677557447
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 15.7464]],

        [[45.6467, 18.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.1467, 18.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.5113, 16.3139],
        [43.4320, 16.7042],
        [44.2154, 15.7088],
        [45.6824, 16.4539],
        [46.1887, 15.7153],
        [45.9763, 15.8715],
        [43.6829, 16.7897],
        [45.1459, 19.0013]], device='cuda:0', dtype=torch.float64)
1.0375573966675657
tensor([[[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.1519, 14.2344]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.6110, 15.9274],
        [45.2171, 19.1539],
        [45.7798, 15.5806],
        [46.2856, 16.6397],
        [44.7096, 15.2148],
        [45.3461, 15.2763],
        [43.7890, 15.8105],
        [45.4108, 17.1298]], device='cuda:0', dtype=torch.float64)
0.7927252281852772
tensor([[[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 17.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7684, 17.2594],
        [45.8493, 15.8245],
        [44.6556, 15.3898],
        [46.2986, 16.4992],
        [45.2865, 16.2640],
        [45.7459, 16.6527],
        [45.5171, 14.6448],
        [46.4815, 16.4328]], device='cuda:0', dtype=torch.float64)
0.504463099866638
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.0396, 18.7715],
        [45.2987, 15.8986],
        [46.0103, 16.5094],
        [45.5020, 18.1246],
        [43.9719, 15.5809],
        [45.5337, 18.1960],
        [45.6504, 16.0537],
        [45.3650, 15.1226]], device='cuda:0', dtype=torch.float64)
0.4629569192474173
tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.1519, 14.2344]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5066, 16.4193],
        [45.2281, 14.6701],
        [45.2470, 13.8798],
        [46.1748, 16.6905],
        [44.2712, 15.8396],
        [45.1065, 13.7273],
        [46.1063, 16.2863],
        [45.4618, 17.3219]], device='cuda:0', dtype=torch.float64)
0.5997032499876067
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484],
         [44.1467, 15.2464],
         [45.6467, 18.7464]],

        [[45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[42.9262, 17.3986],
        [45.2910, 15.1705],
        [42.4691, 18.4226],
        [43.7679, 16.1898],
        [46.1713, 15.9929],
        [45.3310, 13.9194],
        [43.1106, 17.3547],
        [45.1102, 13.7943]], device='cuda:0', dtype=torch.float64)
1.4353019853074063
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1519, 14.2344]],

        [[45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2437, 18.0880],
        [45.3681, 14.0176],
        [46.3112, 16.3268],
        [46.3586, 16.6515],
        [44.9929, 14.1097],
        [46.0380, 16.2895],
        [45.5854, 17.0149],
        [45.4790, 17.0389]], device='cuda:0', dtype=torch.float64)
0.39168586082556145
tensor([[[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3652, 18.3210],
        [45.6869, 18.6251],
        [45.9297, 16.5177],
        [45.3617, 14.1907],
        [45.8114, 15.9421],
        [42.8163, 17.7773],
        [44.9720, 14.9584],
        [45.4617, 14.7230]], device='cuda:0', dtype=torch.float64)
0.7704345198805743
tensor([[[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6660, 17.6642],
        [44.5383, 15.4642],
        [43.2093, 17.4074],
        [44.1233, 15.3565],
        [45.1705, 14.9656],
        [43.6728, 16.0331],
        [43.2448, 17.2875],
        [46.4125, 16.6454]], device='cuda:0', dtype=torch.float64)
1.252765340766981
tensor([[[45.6467, 16.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1519, 14.2344],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6364, 16.5958],
        [45.6828, 16.2357],
        [43.4032, 16.8390],
        [45.8799, 16.0885],
        [45.2632, 16.5249],
        [44.7435, 15.3801],
        [43.5056, 16.8053],
        [45.6109, 16.5453]], device='cuda:0', dtype=torch.float64)
0.8604292105169047
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 15.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 15.7464],
         [43.1550, 17.2484]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3593, 15.2977],
        [45.1020, 14.9066],
        [45.2965, 15.9949],
        [44.1003, 15.4757],
        [46.3488, 16.4118],
        [44.3552, 15.4356],
        [43.5536, 16.7563],
        [45.4512, 18.2166]], device='cuda:0', dtype=torch.float64)
0.8215792743580199
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6713, 16.7875],
        [44.9213, 15.1664],
        [45.7706, 15.8081],
        [45.9926, 15.8614],
        [45.3332, 18.8644],
        [45.9968, 17.2298],
        [45.7461, 17.4735],
        [43.0000, 17.6288]], device='cuda:0', dtype=torch.float64)
0.6307574405549425
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.9748, 16.2736],
        [45.0655, 13.9217],
        [44.0682, 15.6968],
        [44.5772, 15.6862],
        [43.4470, 16.6458],
        [45.4683, 15.3588],
        [45.4736, 15.9493],
        [44.7978, 13.9134]], device='cuda:0', dtype=torch.float64)
0.8549121543279689
tensor([[[45.1467, 13.7464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [45.1519, 14.2344],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3221, 16.5767],
        [45.8796, 17.5985],
        [45.6317, 15.9418],
        [43.1789, 17.4237],
        [43.8764, 16.0946],
        [44.4301, 15.6616],
        [45.8237, 16.1289],
        [45.3918, 14.8141]], device='cuda:0', dtype=torch.float64)
0.8220515938605577
tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8764, 17.2778],
        [44.0559, 15.7629],
        [45.2471, 18.3334],
        [45.2070, 14.0805],
        [45.1873, 16.4072],
        [45.3669, 16.9980],
        [45.3904, 16.5487],
        [45.1838, 15.2815]], device='cuda:0', dtype=torch.float64)
0.5596205332924008
tensor([[[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4773, 17.1314],
        [45.9878, 15.8921],
        [44.0622, 15.4067],
        [45.6656, 17.1214],
        [43.1150, 17.4843],
        [45.5974, 18.7426],
        [45.9239, 16.6655],
        [45.8407, 16.9676]], device='cuda:0', dtype=torch.float64)
0.7528223536541139
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.2758, 16.8615],
        [45.5574, 17.7116],
        [45.7530, 16.8266],
        [45.3456, 16.7140],
        [45.3782, 18.3349],
        [43.5699, 16.6964],
        [43.6843, 16.3027],
        [45.4895, 17.4076]], device='cuda:0', dtype=torch.float64)
0.7115930039543734
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 18.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[42.7335, 17.9586],
        [45.5405, 18.7066],
        [44.0291, 16.1793],
        [45.6718, 15.4077],
        [45.2302, 15.2999],
        [43.9362, 15.8645],
        [43.7486, 16.6528],
        [45.4004, 13.8992]], device='cuda:0', dtype=torch.float64)
1.0892939243128368
tensor([[[45.6467, 17.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6646, 17.6638],
        [45.1143, 15.1214],
        [46.0941, 15.8346],
        [45.0771, 18.7143],
        [45.9501, 16.2387],
        [45.7856, 16.7867],
        [45.3231, 16.5912],
        [45.5459, 18.6140]], device='cuda:0', dtype=torch.float64)
0.3711934083981928
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [44.1467, 15.7464],
         [45.1467, 18.7464]],

        [[45.6467, 18.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 18.2464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4053, 17.5358],
        [45.8014, 15.9244],
        [43.9962, 15.9827],
        [43.8927, 16.3560],
        [43.6625, 16.8408],
        [45.3913, 13.9147],
        [45.2839, 15.5777],
        [43.5658, 16.1844]], device='cuda:0', dtype=torch.float64)
1.0404440354334181
tensor([[[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1519, 14.2344],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.1550, 17.2484]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2100, 18.8560],
        [43.4742, 16.9865],
        [45.2246, 13.8166],
        [45.6491, 15.6853],
        [45.2367, 17.6836],
        [42.7308, 17.9634],
        [45.0238, 14.0867],
        [44.3677, 16.1244]], device='cuda:0', dtype=torch.float64)
1.0662418371835598
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1519, 14.2344],
         [43.1550, 17.2484]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4352, 15.3872],
        [44.5103, 15.1230],
        [46.2694, 16.6085],
        [45.7272, 16.8331],
        [44.7322, 15.2590],
        [45.4077, 14.7970],
        [45.6921, 15.6242],
        [43.8815, 16.0030]], device='cuda:0', dtype=torch.float64)
0.6685127706753621
tensor([[[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1519, 14.2344],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5521, 16.7275],
        [45.7619, 17.6492],
        [45.8395, 16.0010],
        [45.8149, 15.7899],
        [45.3158, 16.6891],
        [45.9125, 16.1540],
        [45.2439, 15.1749],
        [45.1546, 16.1510]], device='cuda:0', dtype=torch.float64)
0.30805437086796994
tensor([[[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.1467, 18.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.5363, 16.6820],
        [45.3792, 13.6227],
        [44.6100, 15.7385],
        [46.3347, 16.4158],
        [45.2026, 15.5510],
        [46.1387, 16.6467],
        [45.7350, 15.9136],
        [45.5014, 17.9617]], device='cuda:0', dtype=torch.float64)
0.428554284536105
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1519, 14.2344]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3246, 14.6463],
        [44.8546, 14.8941],
        [45.8577, 16.6153],
        [45.3194, 18.4095],
        [45.6197, 18.3771],
        [45.5093, 19.0643],
        [45.1790, 16.3458],
        [45.5428, 18.5277]], device='cuda:0', dtype=torch.float64)
0.3699501875253627
tensor([[[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1519, 14.2344]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 17.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.9180, 16.0876],
        [44.1459, 15.8835],
        [45.4990, 18.0882],
        [45.2913, 13.9626],
        [46.3696, 16.1038],
        [43.9090, 16.1716],
        [45.3780, 16.4726],
        [45.0562, 18.7656]], device='cuda:0', dtype=torch.float64)
0.9048594194592151
tensor([[[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.1467, 18.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 18.2464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.8292, 18.6346],
        [45.1034, 13.6943],
        [44.8903, 15.2767],
        [45.2446, 13.8727],
        [45.8060, 16.0949],
        [45.4728, 14.0452],
        [43.9757, 15.6213],
        [43.9584, 15.8628]], device='cuda:0', dtype=torch.float64)
0.6729445863991874
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.1069, 15.8191],
        [45.4653, 14.9909],
        [45.5133, 14.7483],
        [45.5403, 16.5728],
        [46.3666, 16.4165],
        [45.1197, 18.5315],
        [45.5627, 15.8623],
        [45.3945, 14.1164]], device='cuda:0', dtype=torch.float64)
0.4542981408515757
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2174, 18.7282],
        [45.3919, 14.0753],
        [45.3471, 16.9868],
        [44.8137, 15.3174],
        [45.5374, 16.4212],
        [45.8798, 17.4685],
        [44.3793, 15.6313],
        [45.8271, 15.5849]], device='cuda:0', dtype=torch.float64)
0.47710665296149646
tensor([[[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.0650, 16.1875],
        [43.8182, 16.5199],
        [43.3740, 17.0823],
        [45.4218, 18.5240],
        [45.2669, 15.5757],
        [45.1154, 18.1049],
        [43.8492, 16.1694],
        [45.1301, 13.8669]], device='cuda:0', dtype=torch.float64)
0.9764184586928794
tensor([[[45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.1550, 17.2484],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.1519, 14.2344]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.1964, 16.8970],
        [45.1289, 14.7920],
        [46.1913, 16.5354],
        [45.2728, 14.2202],
        [43.2477, 17.2625],
        [45.5019, 16.3338],
        [45.7115, 15.5876],
        [44.4787, 15.5685]], device='cuda:0', dtype=torch.float64)
0.7226508646234784
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.6492, 16.6109],
        [45.8788, 16.2154],
        [45.8791, 17.1913],
        [45.4878, 15.4749],
        [45.2538, 17.1493],
        [45.8078, 16.9532],
        [45.7064, 16.8578],
        [45.7616, 16.2345]], device='cuda:0', dtype=torch.float64)
0.46275272355123087
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.1467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.7445, 18.2285],
        [45.0055, 13.8131],
        [45.6358, 16.9826],
        [45.7661, 17.3827],
        [45.1408, 18.1165],
        [45.4714, 16.4584],
        [44.0256, 15.7275],
        [46.0507, 17.1366]], device='cuda:0', dtype=torch.float64)
0.4861109080639594
tensor([[[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.1550, 17.2484],
         [45.6467, 15.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.2457, 17.2675],
        [45.7700, 16.5770],
        [45.2002, 18.3899],
        [44.3054, 15.8133],
        [46.1878, 15.8026],
        [43.7923, 16.6235],
        [45.7936, 16.1211],
        [44.6205, 15.9532]], device='cuda:0', dtype=torch.float64)
1.0052237267292337
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 15.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.1467, 18.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.8978, 13.8326],
        [43.4289, 16.9884],
        [46.2416, 16.8038],
        [45.0088, 14.0976],
        [44.1368, 15.6308],
        [45.5203, 16.2423],
        [44.8485, 15.4284],
        [44.4812, 15.7788]], device='cuda:0', dtype=torch.float64)
0.9149424054977016
tensor([[[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.3467, 16.4706],
        [46.2584, 16.0040],
        [45.3627, 16.0772],
        [45.9488, 17.4608],
        [45.6495, 18.8135],
        [45.1016, 13.6842],
        [44.2799, 15.5594],
        [45.7747, 18.7881]], device='cuda:0', dtype=torch.float64)
0.5584660705185449
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.1519, 14.2344],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.5039, 15.4159],
        [46.0153, 16.1295],
        [43.4546, 16.8339],
        [46.2162, 16.0576],
        [45.6652, 18.4617],
        [45.0876, 14.1529],
        [45.1120, 15.2022],
        [44.0689, 16.2215]], device='cuda:0', dtype=torch.float64)
0.8566808903129228
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.2464]],

        [[45.6467, 17.2464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.5983, 16.0006],
        [43.7096, 16.4692],
        [45.3726, 15.0856],
        [44.8579, 15.3204],
        [45.9005, 16.2102],
        [44.1224, 15.2494],
        [45.6228, 17.5477],
        [43.8642, 15.5884]], device='cuda:0', dtype=torch.float64)
1.0510948843732169
tensor([[[46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2628, 16.9105],
        [43.5932, 16.5167],
        [45.6651, 17.0156],
        [45.1372, 15.6793],
        [45.3474, 13.8423],
        [44.5441, 15.2987],
        [45.5721, 18.4517],
        [45.8751, 17.2505]], device='cuda:0', dtype=torch.float64)
0.6236900208263404
tensor([[[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4594, 17.4170],
        [45.8175, 15.6967],
        [44.5649, 15.3158],
        [45.5169, 15.8836],
        [44.6568, 15.0912],
        [45.1803, 17.6174],
        [45.8521, 16.4027],
        [45.3644, 14.7294]], device='cuda:0', dtype=torch.float64)
0.45234982528390955
tensor([[[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 15.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464],
         [43.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3573, 17.6240],
        [42.8499, 17.6910],
        [46.3116, 16.2788],
        [45.7274, 16.1295],
        [43.8256, 15.7127],
        [45.7377, 15.7762],
        [45.7654, 18.0278],
        [45.1530, 14.7870]], device='cuda:0', dtype=torch.float64)
0.9229622318901378
tensor([[[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 17.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.6977, 15.4522],
        [45.3488, 14.6166],
        [46.0272, 15.7312],
        [45.4376, 15.5462],
        [45.4125, 16.5088],
        [44.8697, 13.9194],
        [45.4316, 17.1822],
        [45.2604, 15.1457]], device='cuda:0', dtype=torch.float64)
0.48739921501607264
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [43.1550, 17.2484]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.2227, 15.1645],
        [46.1187, 16.8173],
        [42.8046, 17.8201],
        [46.1461, 16.8205],
        [45.0142, 15.2458],
        [44.7467, 15.3628],
        [45.7442, 16.9513],
        [44.3513, 16.1629]], device='cuda:0', dtype=torch.float64)
0.9815616194274649
tensor([[[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.2372, 17.1313],
        [45.4016, 15.0403],
        [45.0984, 18.8512],
        [44.9409, 18.9078],
        [45.4094, 17.5794],
        [43.9606, 15.8736],
        [45.9699, 17.1833],
        [45.7555, 16.9403]], device='cuda:0', dtype=torch.float64)
0.8319203391878291
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3442, 15.8906],
        [45.4723, 16.7997],
        [43.5192, 16.4570],
        [45.3527, 17.8440],
        [45.2075, 14.8181],
        [45.2461, 15.3335],
        [45.4391, 13.9582],
        [43.3263, 16.9895]], device='cuda:0', dtype=torch.float64)
0.7759528636189101
tensor([[[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [43.1550, 17.2484]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4657, 14.6862],
        [45.5141, 15.4619],
        [44.9156, 15.7041],
        [45.2967, 14.8864],
        [45.2976, 17.0628],
        [45.1276, 15.2901],
        [45.1504, 16.3786],
        [46.2686, 16.7511]], device='cuda:0', dtype=torch.float64)
0.4581636597497688
tensor([[[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]],

        [[45.1519, 14.2344],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.2562, 17.6640],
        [45.1613, 18.7051],
        [45.1058, 14.0640],
        [44.6887, 15.3563],
        [46.1052, 17.0424],
        [45.3967, 13.6096],
        [46.2205, 15.9716],
        [45.1575, 13.7123]], device='cuda:0', dtype=torch.float64)
0.45106680927599396
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [44.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1519, 14.2344],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3168, 13.7538],
        [46.0943, 17.0472],
        [44.5485, 15.0977],
        [45.2775, 13.8901],
        [44.9059, 15.1576],
        [43.4683, 17.0416],
        [45.4064, 18.3748],
        [44.8925, 14.9860]], device='cuda:0', dtype=torch.float64)
0.7568515323702666
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [44.1467, 15.2464]],

        [[45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6385, 18.1272],
        [44.5280, 15.1130],
        [42.5621, 18.2538],
        [45.8346, 17.3925],
        [43.5341, 16.8713],
        [45.2567, 19.1273],
        [45.0138, 15.1515],
        [44.6451, 15.9594]], device='cuda:0', dtype=torch.float64)
1.029358758481058
tensor([[[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6940, 15.6235],
        [45.8564, 16.0356],
        [45.6715, 15.8228],
        [46.1976, 16.9107],
        [43.8223, 16.5704],
        [45.4037, 17.5016],
        [43.7079, 16.4637],
        [43.5733, 16.9842]], device='cuda:0', dtype=torch.float64)
0.9403235730466788
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464],
         [44.1467, 15.7464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.6547, 18.6786],
        [45.6732, 17.2524],
        [44.7314, 15.3468],
        [43.7455, 16.2584],
        [43.4437, 17.1896],
        [45.6805, 17.1026],
        [46.0554, 16.0853],
        [44.5610, 15.4534]], device='cuda:0', dtype=torch.float64)
0.8910041727371871
tensor([[[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.8747, 16.1922],
        [45.8563, 17.4903],
        [45.5486, 15.4121],
        [45.1478, 15.0421],
        [45.6732, 16.2901],
        [44.1666, 15.3004],
        [44.9986, 15.6515],
        [45.2164, 18.0302]], device='cuda:0', dtype=torch.float64)
0.6384799289353114
tensor([[[45.6467, 18.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [43.1550, 17.2484],
         [45.1467, 18.2464],
         [44.1467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4098, 18.6349],
        [45.3620, 14.6389],
        [45.3613, 15.3031],
        [44.1043, 15.6622],
        [45.3365, 18.3010],
        [45.5344, 15.4101],
        [45.3214, 14.6339],
        [45.3571, 18.0849]], device='cuda:0', dtype=torch.float64)
0.5168119093355299
tensor([[[45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464]],

        [[45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464]],

        [[45.6467, 18.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[46.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1519, 14.2344]]], device='cuda:0', dtype=torch.float64)
tensor([[44.7333, 15.0586],
        [45.1749, 16.4078],
        [45.8062, 16.6569],
        [46.2344, 16.1531],
        [45.6628, 17.1257],
        [45.3515, 17.8957],
        [44.9278, 15.0720],
        [43.7998, 15.9609]], device='cuda:0', dtype=torch.float64)
0.6551056379950674
tensor([[[45.6467, 17.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.6925, 15.2794],
        [45.4733, 18.1161],
        [45.9137, 16.7813],
        [46.0619, 16.3784],
        [46.0013, 17.1991],
        [45.6212, 16.1326],
        [45.3559, 18.9759],
        [45.8535, 17.5357]], device='cuda:0', dtype=torch.float64)
0.3370183069536032
tensor([[[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3690, 14.6637],
        [45.2924, 17.8166],
        [45.3951, 14.7024],
        [45.2234, 19.3569],
        [45.3206, 18.3998],
        [46.1754, 16.0530],
        [45.1892, 13.6303],
        [45.6236, 15.8674]], device='cuda:0', dtype=torch.float64)
0.2844092698276405
tensor([[[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4524, 15.7955],
        [43.2728, 17.2253],
        [42.7587, 17.9016],
        [45.8711, 16.9757],
        [46.2868, 15.9705],
        [46.2976, 16.4627],
        [44.1821, 15.4469],
        [46.2212, 16.8470]], device='cuda:0', dtype=torch.float64)
1.1949844177459759
tensor([[[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.9763, 15.8733],
        [45.5701, 15.8629],
        [45.9315, 17.1081],
        [45.0620, 13.9099],
        [46.3804, 16.3156],
        [46.2988, 16.8238],
        [46.2792, 16.8299],
        [45.2652, 13.9958]], device='cuda:0', dtype=torch.float64)
0.3674637136768899
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1519, 14.2344]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1519, 14.2344],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]],

        [[45.6467, 17.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [45.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[43.7221, 16.1181],
        [45.1924, 14.8803],
        [45.6675, 17.6925],
        [45.5087, 17.9729],
        [44.2369, 15.1483],
        [45.1397, 15.2060],
        [42.9764, 17.3180],
        [45.0821, 14.1690]], device='cuda:0', dtype=torch.float64)
0.8970755146990148
tensor([[[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[44.6467, 15.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[46.0211, 16.0565],
        [45.8734, 18.7479],
        [44.0705, 15.8420],
        [44.1322, 15.5880],
        [45.2240, 16.1327],
        [45.6423, 16.2806],
        [45.2885, 18.3088],
        [45.3378, 15.3717]], device='cuda:0', dtype=torch.float64)
0.6134205066831445
tensor([[[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[44.5393, 15.2346],
        [45.6514, 16.5012],
        [43.9260, 16.2059],
        [45.3705, 16.8224],
        [45.2613, 15.3224],
        [45.4845, 14.6661],
        [46.2930, 16.3738],
        [45.6160, 15.9489]], device='cuda:0', dtype=torch.float64)
0.5587205062802884
tensor([[[45.6467, 17.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.4057, 13.8696],
        [45.2201, 17.2157],
        [45.3410, 17.6721],
        [45.7653, 17.1513],
        [45.5803, 15.9641],
        [45.9631, 17.1136],
        [45.4012, 16.8882],
        [45.5031, 17.2075]], device='cuda:0', dtype=torch.float64)
0.32410713306240274
tensor([[[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[45.3746, 18.5545],
        [45.6705, 18.7540],
        [45.9032, 16.8614],
        [43.8617, 16.2166],
        [45.4913, 18.0680],
        [45.2097, 17.6153],
        [45.8598, 16.1470],
        [45.2536, 18.9105]], device='cuda:0', dtype=torch.float64)
0.4894735655720972

Validation DataLoader 0: 100%|##########| 412/412 [01:39<00:00,  4.14it/s][AEpoch 0: 100%|##########| 3714/3714 [33:33<00:00,  1.84it/s, loss=3.44, v_num=0, train/loss_step=3.750, train/acc_step=0.000]Epoch 0: 100%|##########| 3714/3714 [33:33<00:00,  1.84it/s, loss=3.44, v_num=0, train/loss_step=3.750, train/acc_step=0.000, val/loss_step=3.110, val/acc_step=0.125, val/haversine_distance_step=0.489, val/loss_epoch=3.480, val/acc_epoch=0.0837, val/haversine_distance_epoch=0.717]
                                                                          [A/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `training_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Metric val/loss improved. New best score: 3.482
Epoch 0: 100%|##########| 3714/3714 [33:51<00:00,  1.83it/s, loss=3.44, v_num=0, train/loss_step=3.750, train/acc_step=0.000, val/loss_step=3.110, val/acc_step=0.125, val/haversine_distance_step=0.489, val/loss_epoch=3.480, val/acc_epoch=0.0837, val/haversine_distance_epoch=0.717, train/loss_epoch=3.590, train/acc_epoch=0.060]Epoch 1: 100%|##########| 3714/3714 [33:53<00:00,  1.83it/s, loss=3.44, v_num=0, train/loss_step=3.750, train/acc_step=0.000, val/loss_step=3.110, val/acc_step=0.125, val/haversine_distance_step=0.489, val/loss_epoch=3.480, val/acc_epoch=0.0837, val/haversine_distance_epoch=0.717, train/loss_epoch=3.590, train/acc_epoch=0.060]Epoch 1:   4%|4         | 165/3714 [35:51<12:51:25, 13.04s/it, loss=3.44, v_num=0, train/loss_step=3.750, train/acc_step=0.000, val/loss_step=3.110, val/acc_step=0.125, val/haversine_distance_step=0.489, val/loss_epoch=3.480, val/acc_epoch=0.0837, val/haversine_distance_epoch=0.717, train/loss_epoch=3.590, train/acc_epoch=0.060]Epoch 1:   4%|4         | 165/3714 [35:51<12:51:26, 13.04s/it, loss=3.44, v_num=0, train/loss_step=3.420, train/acc_step=0.250, val/loss_step=3.110, val/acc_step=0.125, val/haversine_distance_step=0.489, val/loss_epoch=3.480, val/acc_epoch=0.0837, val/haversine_distance_epoch=0.717, train/loss_epoch=3.590, train/acc_epoch=0.060]Epoch 1:   9%|8         | 330/3714 [37:35<6:25:27,  6.83s/it, loss=3.44, v_num=0, train/loss_step=3.420, train/acc_step=0.250, val/loss_step=3.110, val/acc_step=0.125, val/haversine_distance_step=0.489, val/loss_epoch=3.480, val/acc_epoch=0.0837, val/haversine_distance_epoch=0.717, train/loss_epoch=3.590, train/acc_epoch=0.060] Epoch 1:   9%|8         | 330/3714 [37:35<6:25:27,  6.83s/it, loss=3.5, v_num=0, train/loss_step=3.450, train/acc_step=0.000, val/loss_step=3.110, val/acc_step=0.125, val/haversine_distance_step=0.489, val/loss_epoch=3.480, val/acc_epoch=0.0837, val/haversine_distance_epoch=0.717, train/loss_epoch=3.590, train/acc_epoch=0.060] Standard output piped to file:
/home/fwolf/lumen-geoguesser/reports/train-resnext101_32x8d-22-04-21-18-57-05.txt
[{'batch_size': 8,
  'cached_df': 'data/complete/data__spacing_0.5__num_class_55.csv',
  'dataset_dirs': ['data/external/', 'data/raw/'],
  'dataset_frac': 1,
  'image_size': 112,
  'load_in_ram': False,
  'lr': 1e-05,
  'models': ['resnext101_32x8d'],
  'num_workers': 32,
  'output_report': PosixPath('/home/fwolf/lumen-geoguesser/reports'),
  'pretrained': True,
  'quick': False,
  'regression': True,
  'shuffle_before_splitting': False,
  'split_ratios': [0.8, 0.1, 0.1],
  'trainer_checkpoint': None,
  'unfreeze_backbone_at_epoch': 5,
  'unfreeze_blocks': 'all',
  'use_single_images': False,
  'weight_decay': 0},
 {'accelerator': 'gpu',
  'accumulate_grad_batches': None,
  'amp_backend': 'native',
  'amp_level': None,
  'auto_lr_find': False,
  'auto_scale_batch_size': False,
  'auto_select_gpus': False,
  'benchmark': None,
  'check_val_every_n_epoch': 1,
  'checkpoint_callback': None,
  'default_root_dir': None,
  'detect_anomaly': False,
  'deterministic': False,
  'devices': '1',
  'enable_checkpointing': True,
  'enable_model_summary': True,
  'enable_progress_bar': True,
  'fast_dev_run': False,
  'flush_logs_every_n_steps': None,
  'gpus': None,
  'gradient_clip_algorithm': None,
  'gradient_clip_val': None,
  'ipus': None,
  'limit_predict_batches': None,
  'limit_test_batches': None,
  'limit_train_batches': None,
  'limit_val_batches': None,
  'log_every_n_steps': 20,
  'log_gpu_memory': None,
  'logger': True,
  'max_epochs': None,
  'max_steps': -1,
  'max_time': None,
  'min_epochs': None,
  'min_steps': None,
  'move_metrics_to_cpu': False,
  'multiple_trainloader_mode': 'max_size_cycle',
  'num_nodes': 1,
  'num_processes': None,
  'num_sanity_val_steps': 2,
  'overfit_batches': 0.0,
  'plugins': None,
  'precision': 32,
  'prepare_data_per_node': None,
  'process_position': 0,
  'profiler': None,
  'progress_bar_refresh_rate': None,
  'reload_dataloaders_every_n_epochs': 0,
  'replace_sampler_ddp': True,
  'resume_from_checkpoint': None,
  'stochastic_weight_avg': False,
  'strategy': None,
  'sync_batchnorm': False,
  'terminate_on_nan': None,
  'tpu_cores': None,
  'track_grad_norm': -1,
  'val_check_interval': None,
  'weights_save_path': None,
  'weights_summary': 'top'}]
Traceback (most recent call last):
  File "/home/fwolf/lumen-geoguesser/src/train.py", line 50, in <module>
    mean, std, lat_lng_stats = calculate_norm_std(dataset_dirs, cached_df)
  File "/home/fwolf/lumen-geoguesser/src/calculate_norm_std.py", line 39, in calculate_norm_std
    images = [transform(Image.open(image_path)) for image_path in image_filepaths]
  File "/home/fwolf/lumen-geoguesser/src/calculate_norm_std.py", line 39, in <listcomp>
    images = [transform(Image.open(image_path)) for image_path in image_filepaths]
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/PIL/Image.py", line 3068, in open
    fp = builtins.open(filename, "rb")
FileNotFoundError: [Errno 2] No such file or directory: '/home/fwolf/lumen-geoguesser/data/external/images/train/93805043-3924-40e0-a88e-58adef01ba1c/0.jpg'
Standard output piped to file:
/home/fwolf/lumen-geoguesser/reports/train-resnext101_32x8d-22-04-21-19-31-44.txt
[{'batch_size': 8,
  'cached_df': 'data/complete/data__spacing_0.5__num_class_55.csv',
  'dataset_dirs': ['data/external/', 'data/raw/'],
  'dataset_frac': 1,
  'image_size': 112,
  'load_in_ram': False,
  'lr': 1e-05,
  'models': ['resnext101_32x8d'],
  'num_workers': 32,
  'output_report': PosixPath('/home/fwolf/lumen-geoguesser/reports'),
  'pretrained': True,
  'quick': False,
  'regression': False,
  'shuffle_before_splitting': False,
  'split_ratios': [0.8, 0.1, 0.1],
  'trainer_checkpoint': None,
  'unfreeze_backbone_at_epoch': 5,
  'unfreeze_blocks': 'all',
  'use_single_images': False,
  'weight_decay': 0},
 {'accelerator': 'gpu',
  'accumulate_grad_batches': None,
  'amp_backend': 'native',
  'amp_level': None,
  'auto_lr_find': False,
  'auto_scale_batch_size': False,
  'auto_select_gpus': False,
  'benchmark': None,
  'check_val_every_n_epoch': 1,
  'checkpoint_callback': None,
  'default_root_dir': None,
  'detect_anomaly': False,
  'deterministic': False,
  'devices': '1',
  'enable_checkpointing': True,
  'enable_model_summary': True,
  'enable_progress_bar': True,
  'fast_dev_run': False,
  'flush_logs_every_n_steps': None,
  'gpus': None,
  'gradient_clip_algorithm': None,
  'gradient_clip_val': None,
  'ipus': None,
  'limit_predict_batches': None,
  'limit_test_batches': None,
  'limit_train_batches': None,
  'limit_val_batches': None,
  'log_every_n_steps': 20,
  'log_gpu_memory': None,
  'logger': True,
  'max_epochs': None,
  'max_steps': -1,
  'max_time': None,
  'min_epochs': None,
  'min_steps': None,
  'move_metrics_to_cpu': False,
  'multiple_trainloader_mode': 'max_size_cycle',
  'num_nodes': 1,
  'num_processes': None,
  'num_sanity_val_steps': 2,
  'overfit_batches': 0.0,
  'plugins': None,
  'precision': 32,
  'prepare_data_per_node': None,
  'process_position': 0,
  'profiler': None,
  'progress_bar_refresh_rate': None,
  'reload_dataloaders_every_n_epochs': 0,
  'replace_sampler_ddp': True,
  'resume_from_checkpoint': None,
  'stochastic_weight_avg': False,
  'strategy': None,
  'sync_batchnorm': False,
  'terminate_on_nan': None,
  'tpu_cores': None,
  'track_grad_norm': -1,
  'val_check_interval': None,
  'weights_save_path': None,
  'weights_summary': 'top'}]
Standard output piped to file:
/home/fwolf/lumen-geoguesser/reports/train-resnext101_32x8d-22-04-21-19-36-09.txt
[{'batch_size': 8,
  'cached_df': 'data/complete/data__spacing_0.5__num_class_55.csv',
  'dataset_dirs': ['data/external/', 'data/raw/'],
  'dataset_frac': 1,
  'image_size': 112,
  'load_in_ram': False,
  'lr': 1e-05,
  'models': ['resnext101_32x8d'],
  'num_workers': 32,
  'output_report': PosixPath('/home/fwolf/lumen-geoguesser/reports'),
  'pretrained': True,
  'quick': False,
  'regression': True,
  'shuffle_before_splitting': False,
  'split_ratios': [0.8, 0.1, 0.1],
  'trainer_checkpoint': None,
  'unfreeze_backbone_at_epoch': 5,
  'unfreeze_blocks': 'all',
  'use_single_images': False,
  'weight_decay': 0},
 {'accelerator': 'gpu',
  'accumulate_grad_batches': None,
  'amp_backend': 'native',
  'amp_level': None,
  'auto_lr_find': False,
  'auto_scale_batch_size': False,
  'auto_select_gpus': False,
  'benchmark': None,
  'check_val_every_n_epoch': 1,
  'checkpoint_callback': None,
  'default_root_dir': None,
  'detect_anomaly': False,
  'deterministic': False,
  'devices': '1',
  'enable_checkpointing': True,
  'enable_model_summary': True,
  'enable_progress_bar': True,
  'fast_dev_run': False,
  'flush_logs_every_n_steps': None,
  'gpus': None,
  'gradient_clip_algorithm': None,
  'gradient_clip_val': None,
  'ipus': None,
  'limit_predict_batches': None,
  'limit_test_batches': None,
  'limit_train_batches': None,
  'limit_val_batches': None,
  'log_every_n_steps': 20,
  'log_gpu_memory': None,
  'logger': True,
  'max_epochs': None,
  'max_steps': -1,
  'max_time': None,
  'min_epochs': None,
  'min_steps': None,
  'move_metrics_to_cpu': False,
  'multiple_trainloader_mode': 'max_size_cycle',
  'num_nodes': 1,
  'num_processes': None,
  'num_sanity_val_steps': 2,
  'overfit_batches': 0.0,
  'plugins': None,
  'precision': 32,
  'prepare_data_per_node': None,
  'process_position': 0,
  'profiler': None,
  'progress_bar_refresh_rate': None,
  'reload_dataloaders_every_n_epochs': 0,
  'replace_sampler_ddp': True,
  'resume_from_checkpoint': None,
  'stochastic_weight_avg': False,
  'strategy': None,
  'sync_batchnorm': False,
  'terminate_on_nan': None,
  'tpu_cores': None,
  'track_grad_norm': -1,
  'val_check_interval': None,
  'weights_save_path': None,
  'weights_summary': 'top'}]
Traceback (most recent call last):
  File "/home/fwolf/lumen-geoguesser/src/train.py", line 50, in <module>
    mean, std = calculate_norm_std(dataset_dirs, cached_df)
  File "/home/fwolf/lumen-geoguesser/src/calculate_norm_std.py", line 28, in calculate_norm_std
    images = [transform(Image.open(image_path)) for image_path in image_filepaths]
  File "/home/fwolf/lumen-geoguesser/src/calculate_norm_std.py", line 28, in <listcomp>
    images = [transform(Image.open(image_path)) for image_path in image_filepaths]
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/PIL/Image.py", line 3068, in open
    fp = builtins.open(filename, "rb")
FileNotFoundError: [Errno 2] No such file or directory: '/home/fwolf/lumen-geoguesser/data/external/images/train/93805043-3924-40e0-a88e-58adef01ba1c/0.jpg'
Traceback (most recent call last):
  File "/home/fwolf/lumen-geoguesser/src/train.py", line 50, in <module>
    mean, std = calculate_norm_std(dataset_dirs, cached_df)
  File "/home/fwolf/lumen-geoguesser/src/calculate_norm_std.py", line 28, in calculate_norm_std
    images = [transform(Image.open(image_path)) for image_path in image_filepaths]
  File "/home/fwolf/lumen-geoguesser/src/calculate_norm_std.py", line 28, in <listcomp>
    images = [transform(Image.open(image_path)) for image_path in image_filepaths]
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/PIL/Image.py", line 3068, in open
    fp = builtins.open(filename, "rb")
FileNotFoundError: [Errno 2] No such file or directory: '/home/fwolf/lumen-geoguesser/data/external/images/train/93805043-3924-40e0-a88e-58adef01ba1c/0.jpg'
Standard output piped to file:
/home/fwolf/lumen-geoguesser/reports/train-resnext101_32x8d-22-04-21-19-56-04.txt
[{'batch_size': 8,
  'cached_df': 'data/complete/data__spacing_0.5__num_class_55.csv',
  'dataset_dirs': ['data/external/', 'data/raw/'],
  'dataset_frac': 1,
  'image_size': 112,
  'load_in_ram': False,
  'lr': 1e-05,
  'models': ['resnext101_32x8d'],
  'num_workers': 32,
  'output_report': PosixPath('/home/fwolf/lumen-geoguesser/reports'),
  'pretrained': True,
  'quick': False,
  'regression': False,
  'shuffle_before_splitting': False,
  'split_ratios': [0.8, 0.1, 0.1],
  'trainer_checkpoint': None,
  'unfreeze_backbone_at_epoch': 5,
  'unfreeze_blocks': 'all',
  'use_single_images': False,
  'weight_decay': 0},
 {'accelerator': 'gpu',
  'accumulate_grad_batches': None,
  'amp_backend': 'native',
  'amp_level': None,
  'auto_lr_find': False,
  'auto_scale_batch_size': False,
  'auto_select_gpus': False,
  'benchmark': None,
  'check_val_every_n_epoch': 1,
  'checkpoint_callback': None,
  'default_root_dir': None,
  'detect_anomaly': False,
  'deterministic': False,
  'devices': '1',
  'enable_checkpointing': True,
  'enable_model_summary': True,
  'enable_progress_bar': True,
  'fast_dev_run': False,
  'flush_logs_every_n_steps': None,
  'gpus': None,
  'gradient_clip_algorithm': None,
  'gradient_clip_val': None,
  'ipus': None,
  'limit_predict_batches': None,
  'limit_test_batches': None,
  'limit_train_batches': None,
  'limit_val_batches': None,
  'log_every_n_steps': 20,
  'log_gpu_memory': None,
  'logger': True,
  'max_epochs': None,
  'max_steps': -1,
  'max_time': None,
  'min_epochs': None,
  'min_steps': None,
  'move_metrics_to_cpu': False,
  'multiple_trainloader_mode': 'max_size_cycle',
  'num_nodes': 1,
  'num_processes': None,
  'num_sanity_val_steps': 2,
  'overfit_batches': 0.0,
  'plugins': None,
  'precision': 32,
  'prepare_data_per_node': None,
  'process_position': 0,
  'profiler': None,
  'progress_bar_refresh_rate': None,
  'reload_dataloaders_every_n_epochs': 0,
  'replace_sampler_ddp': True,
  'resume_from_checkpoint': None,
  'stochastic_weight_avg': False,
  'strategy': None,
  'sync_batchnorm': False,
  'terminate_on_nan': None,
  'tpu_cores': None,
  'track_grad_norm': -1,
  'val_check_interval': None,
  'weights_save_path': None,
  'weights_summary': 'top'}]
Standard output piped to file:
/home/fwolf/lumen-geoguesser/reports/train-resnext101_32x8d-22-04-21-19-56-08.txt
[{'batch_size': 8,
  'cached_df': 'data/complete/data__spacing_0.5__num_class_55.csv',
  'dataset_dirs': ['data/external/', 'data/raw/'],
  'dataset_frac': 1,
  'image_size': 112,
  'load_in_ram': False,
  'lr': 1e-05,
  'models': ['resnext101_32x8d'],
  'num_workers': 32,
  'output_report': PosixPath('/home/fwolf/lumen-geoguesser/reports'),
  'pretrained': True,
  'quick': False,
  'regression': True,
  'shuffle_before_splitting': False,
  'split_ratios': [0.8, 0.1, 0.1],
  'trainer_checkpoint': None,
  'unfreeze_backbone_at_epoch': 5,
  'unfreeze_blocks': 'all',
  'use_single_images': False,
  'weight_decay': 0},
 {'accelerator': 'gpu',
  'accumulate_grad_batches': None,
  'amp_backend': 'native',
  'amp_level': None,
  'auto_lr_find': False,
  'auto_scale_batch_size': False,
  'auto_select_gpus': False,
  'benchmark': None,
  'check_val_every_n_epoch': 1,
  'checkpoint_callback': None,
  'default_root_dir': None,
  'detect_anomaly': False,
  'deterministic': False,
  'devices': '1',
  'enable_checkpointing': True,
  'enable_model_summary': True,
  'enable_progress_bar': True,
  'fast_dev_run': False,
  'flush_logs_every_n_steps': None,
  'gpus': None,
  'gradient_clip_algorithm': None,
  'gradient_clip_val': None,
  'ipus': None,
  'limit_predict_batches': None,
  'limit_test_batches': None,
  'limit_train_batches': None,
  'limit_val_batches': None,
  'log_every_n_steps': 20,
  'log_gpu_memory': None,
  'logger': True,
  'max_epochs': None,
  'max_steps': -1,
  'max_time': None,
  'min_epochs': None,
  'min_steps': None,
  'move_metrics_to_cpu': False,
  'multiple_trainloader_mode': 'max_size_cycle',
  'num_nodes': 1,
  'num_processes': None,
  'num_sanity_val_steps': 2,
  'overfit_batches': 0.0,
  'plugins': None,
  'precision': 32,
  'prepare_data_per_node': None,
  'process_position': 0,
  'profiler': None,
  'progress_bar_refresh_rate': None,
  'reload_dataloaders_every_n_epochs': 0,
  'replace_sampler_ddp': True,
  'resume_from_checkpoint': None,
  'stochastic_weight_avg': False,
  'strategy': None,
  'sync_batchnorm': False,
  'terminate_on_nan': None,
  'tpu_cores': None,
  'track_grad_norm': -1,
  'val_check_interval': None,
  'weights_save_path': None,
  'weights_summary': 'top'}]
Train dataset mean: tensor([0.5006, 0.5116, 0.4869])
Train dataset std: tensor([0.1966, 0.1951, 0.2355])
GeoguesserDataModule init
GeoguesserDataset init
GeoguesserDataset init
GeoguesserDataset init
Train, val and test size 26417 3302 3303
Using cache found in /home/fwolf/.cache/torch/hub/pytorch_vision_v0.12.0
Train dataset mean: tensor([0.5006, 0.5116, 0.4869])
Train dataset std: tensor([0.1966, 0.1951, 0.2355])
GeoguesserDataModule init
GeoguesserDataset init
GeoguesserDataset init
GeoguesserDataset init
Train, val and test size 26417 3302 3303
Using cache found in /home/fwolf/.cache/torch/hub/pytorch_vision_v0.12.0
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py:91: PossibleUserWarning: `max_epochs` was not set. Setting it to 1000 epochs. To train without an epoch limit, set `max_epochs=-1`.
  rank_zero_warn(
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/torch/cuda/__init__.py:122: UserWarning: 
    Found GPU1 NVIDIA GeForce GTX TITAN Black which is of cuda capability 3.5.
    PyTorch no longer supports this GPU because it is too old.
    The minimum cuda capability supported by this library is 3.7.
    
  warnings.warn(old_gpu_warn % (d, name, major, minor, min_arch // 10, min_arch % 10))
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name     | Type   | Params | In sizes         | Out sizes
-------------------------------------------------------------------
0 | backbone | ResNet | 86.7 M | [8, 3, 112, 112] | [8, 2048]
1 | fc       | Linear | 434 K  | [8, 8192]        | [8, 53]  
-------------------------------------------------------------------
637 K     Trainable params
86.5 M    Non-trainable params
87.2 M    Total params
348.706   Total estimated model params size (MB)
/home/fwolf/lumen-geoguesser/src/model.py:98: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).
  outs_backbone = [self.backbone(image) for image in image_list]
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py:91: PossibleUserWarning: `max_epochs` was not set. Setting it to 1000 epochs. To train without an epoch limit, set `max_epochs=-1`.
  rank_zero_warn(
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/utilities/parsing.py:107: UserWarning: attribute 'data_module' removed from hparams because it cannot be pickled
  rank_zero_warn(f"attribute '{k}' removed from hparams because it cannot be pickled")
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/torch/cuda/__init__.py:122: UserWarning: 
    Found GPU1 NVIDIA GeForce GTX TITAN Black which is of cuda capability 3.5.
    PyTorch no longer supports this GPU because it is too old.
    The minimum cuda capability supported by this library is 3.7.
    
  warnings.warn(old_gpu_warn % (d, name, major, minor, min_arch // 10, min_arch % 10))
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name     | Type   | Params | In sizes         | Out sizes
-------------------------------------------------------------------
0 | backbone | ResNet | 86.7 M | [8, 3, 112, 112] | [8, 2048]
1 | fc       | Linear | 65.5 K | [8, 8192]        | [8, 8]   
-------------------------------------------------------------------
268 K     Trainable params
86.5 M    Non-trainable params
86.8 M    Total params
347.232   Total estimated model params size (MB)
Sanity Checking: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:486: PossibleUserWarning: Your `val_dataloader`'s sampler has shuffling enabled, it is strongly recommended that you turn shuffling off for val/test/predict dataloaders.
  rank_zero_warn(
Sanity Checking DataLoader 0:   0%|          | 0/2 [00:03<?, ?it/s]/home/fwolf/lumen-geoguesser/src/utils_model.py:55: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  preds, indices = torch.topk(F.softmax(y_pred), k = top_k)
tensor([[[45.6467, 17.2464],
         [45.1519, 14.2344],
         [45.9136, 18.7156],
         [45.5219, 19.0959],
         [42.7950, 17.7353]],

        [[45.9136, 18.7156],
         [45.6467, 16.7464],
         [44.6986, 14.8933],
         [45.1467, 16.2464],
         [42.9020, 17.3889]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [42.7950, 17.7353],
         [45.9136, 18.7156],
         [45.4799, 14.2531]],

        [[45.5219, 19.0959],
         [45.6467, 17.2464],
         [45.9136, 18.7156],
         [44.6986, 14.8933],
         [45.4799, 14.2531]],

        [[45.6467, 16.7464],
         [43.7579, 15.7739],
         [42.7950, 17.7353],
         [45.1507, 17.2434],
         [45.6467, 17.2464]],

        [[45.1519, 14.2344],
         [45.6467, 16.7464],
         [45.1507, 17.2434],
         [44.1467, 15.2464],
         [42.9020, 17.3889]],

        [[44.6986, 14.8933],
         [42.7950, 17.7353],
         [45.6467, 17.2464],
         [45.1519, 14.2344],
         [45.6467, 16.2464]],

        [[45.9136, 18.7156],
         [45.1507, 17.2434],
         [45.1467, 16.2464],
         [45.5219, 19.0959],
         [45.9341, 17.5891]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.5770, -0.1695],
        [ 0.3792, -0.3676],
        [ 0.3853,  0.8425],
        [-0.7134, -0.9291],
        [ 1.5427, -0.0179],
        [-0.6763, -0.8624],
        [-0.1166, -1.8180],
        [-1.1156, -0.6559]], device='cuda:0', dtype=torch.float64)
1.753846898885754
tensor([[[45.5219, 19.0959],
         [45.1507, 17.2434],
         [46.4656, 16.6611],
         [45.9341, 17.5891],
         [45.1519, 14.2344]],

        [[45.1507, 17.2434],
         [45.9136, 18.7156],
         [45.5219, 19.0959],
         [45.1519, 14.2344],
         [45.1467, 16.2464]],

        [[45.1507, 17.2434],
         [45.9136, 18.7156],
         [43.7579, 15.7739],
         [45.4799, 14.2531],
         [42.5658, 18.4556]],

        [[45.5219, 19.0959],
         [45.9136, 18.7156],
         [45.1507, 17.2434],
         [43.7579, 15.7739],
         [42.7950, 17.7353]],

        [[43.7579, 15.7739],
         [45.4465, 13.7554],
         [45.5219, 19.0959],
         [45.9136, 18.7156],
         [45.4799, 14.2531]],

        [[45.4799, 14.2531],
         [43.9706, 16.5838],
         [42.7950, 17.7353],
         [43.7579, 15.7739],
         [45.6467, 17.2464]],

        [[42.7950, 17.7353],
         [45.9341, 17.5891],
         [43.7579, 15.7739],
         [45.1507, 17.2434],
         [45.6467, 17.2464]],

        [[42.9020, 17.3889],
         [45.6467, 16.7464],
         [45.1507, 17.2434],
         [45.1467, 16.2464],
         [45.9341, 17.5891]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2768, -2.1762],
        [ 0.9804, -0.4059],
        [-1.6017, -0.2126],
        [ 1.1764,  0.5145],
        [ 1.2271, -0.2677],
        [ 1.2960, -0.1887],
        [ 0.4056,  0.0520],
        [ 0.0712, -0.7301]], device='cuda:0', dtype=torch.float64)
1.1741622661766868
Sanity Checking DataLoader 0: 100%|##########| 2/2 [00:04<00:00,  2.14s/it]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `validation_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
                                                                           Training: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:   0%|          | 0/3714 [00:00<?, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_epoch_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
/home/fwolf/lumen-geoguesser/src/model.py:285: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).
  outs_backbone = [self.backbone(image) for image in image_list]
Epoch 0:   4%|4         | 165/3714 [01:31<32:56,  1.80it/s]Epoch 0:   4%|4         | 165/3714 [01:31<32:56,  1.80it/s, loss=3.67, v_num=0, train/loss_step=3.510, train/acc_step=0.125]Sanity Checking: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:486: PossibleUserWarning: Your `val_dataloader`'s sampler has shuffling enabled, it is strongly recommended that you turn shuffling off for val/test/predict dataloaders.
  rank_zero_warn(
Sanity Checking DataLoader 0:   0%|          | 0/2 [00:02<?, ?it/s]Traceback (most recent call last):
  File "/home/fwolf/lumen-geoguesser/src/train.py", line 145, in <module>
    trainer.fit(model, data_module, ckpt_path=trainer_checkpoint)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 771, in fit
    self._call_and_handle_interrupt(
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 724, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 812, in _fit_impl
    results = self._run(model, ckpt_path=self.ckpt_path)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1237, in _run
    results = self._run_stage()
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1324, in _run_stage
    return self._run_train()
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1346, in _run_train
    self._run_sanity_check()
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1414, in _run_sanity_check
    val_loop.run()
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/base.py", line 204, in run
    self.advance(*args, **kwargs)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/dataloader/evaluation_loop.py", line 153, in advance
    dl_outputs = self.epoch_loop.run(self._data_fetcher, dl_max_batches, kwargs)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/base.py", line 204, in run
    self.advance(*args, **kwargs)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 127, in advance
    output = self._evaluation_step(**kwargs)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 222, in _evaluation_step
    output = self.trainer._call_strategy_hook("validation_step", *kwargs.values())
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1766, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/strategies/strategy.py", line 344, in validation_step
    return self.model.validation_step(*args, **kwargs)
  File "/home/fwolf/lumen-geoguesser/src/model.py", line 327, in validation_step
    haver_dist = np.mean(haversine_distances(y_pred.cpu(), image_true_coords.cpu()))
  File "/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/sklearn/metrics/pairwise.py", line 788, in haversine_distances
    return DistanceMetric.get_metric("haversine").pairwise(X, Y)
  File "sklearn/metrics/_dist_metrics.pyx", line 406, in sklearn.metrics._dist_metrics.DistanceMetric.pairwise
  File "sklearn/metrics/_dist_metrics.pyx", line 1016, in sklearn.metrics._dist_metrics.HaversineDistance._validate_data
ValueError: Haversine distance only valid in 2 dimensions
Epoch 0:   9%|8         | 330/3714 [03:00<30:53,  1.83it/s, loss=3.67, v_num=0, train/loss_step=3.510, train/acc_step=0.125]Epoch 0:   9%|8         | 330/3714 [03:00<30:54,  1.83it/s, loss=3.67, v_num=0, train/loss_step=3.640, train/acc_step=0.000]Epoch 0:  13%|#3        | 495/3714 [04:30<29:16,  1.83it/s, loss=3.67, v_num=0, train/loss_step=3.640, train/acc_step=0.000]Epoch 0:  13%|#3        | 495/3714 [04:30<29:16,  1.83it/s, loss=3.66, v_num=0, train/loss_step=3.460, train/acc_step=0.250]Epoch 0:  18%|#7        | 660/3714 [05:58<27:40,  1.84it/s, loss=3.66, v_num=0, train/loss_step=3.460, train/acc_step=0.250]Epoch 0:  18%|#7        | 660/3714 [05:58<27:40,  1.84it/s, loss=3.55, v_num=0, train/loss_step=3.480, train/acc_step=0.000]Epoch 0:  22%|##2       | 825/3714 [07:28<26:10,  1.84it/s, loss=3.55, v_num=0, train/loss_step=3.480, train/acc_step=0.000]Epoch 0:  22%|##2       | 825/3714 [07:28<26:10,  1.84it/s, loss=3.71, v_num=0, train/loss_step=3.300, train/acc_step=0.125]Epoch 0:  27%|##6       | 990/3714 [08:58<24:41,  1.84it/s, loss=3.71, v_num=0, train/loss_step=3.300, train/acc_step=0.125]Epoch 0:  27%|##6       | 990/3714 [08:58<24:41,  1.84it/s, loss=3.51, v_num=0, train/loss_step=3.590, train/acc_step=0.000]Epoch 0:  31%|###1      | 1155/3714 [10:29<23:14,  1.84it/s, loss=3.51, v_num=0, train/loss_step=3.590, train/acc_step=0.000]Epoch 0:  31%|###1      | 1155/3714 [10:29<23:14,  1.84it/s, loss=3.71, v_num=0, train/loss_step=3.750, train/acc_step=0.000]Epoch 0:  36%|###5      | 1320/3714 [12:00<21:46,  1.83it/s, loss=3.71, v_num=0, train/loss_step=3.750, train/acc_step=0.000]Epoch 0:  36%|###5      | 1320/3714 [12:00<21:46,  1.83it/s, loss=3.63, v_num=0, train/loss_step=3.760, train/acc_step=0.000]Epoch 0:  40%|###9      | 1485/3714 [13:30<20:17,  1.83it/s, loss=3.63, v_num=0, train/loss_step=3.760, train/acc_step=0.000]Epoch 0:  40%|###9      | 1485/3714 [13:30<20:17,  1.83it/s, loss=3.67, v_num=0, train/loss_step=3.740, train/acc_step=0.000]Epoch 0:  44%|####4     | 1650/3714 [15:02<18:49,  1.83it/s, loss=3.67, v_num=0, train/loss_step=3.740, train/acc_step=0.000]Epoch 0:  44%|####4     | 1650/3714 [15:02<18:49,  1.83it/s, loss=3.55, v_num=0, train/loss_step=3.210, train/acc_step=0.000]Epoch 0:  49%|####8     | 1815/3714 [16:33<17:19,  1.83it/s, loss=3.55, v_num=0, train/loss_step=3.210, train/acc_step=0.000]Epoch 0:  49%|####8     | 1815/3714 [16:33<17:19,  1.83it/s, loss=3.48, v_num=0, train/loss_step=3.350, train/acc_step=0.125]Epoch 0:  53%|#####3    | 1980/3714 [18:05<15:50,  1.82it/s, loss=3.48, v_num=0, train/loss_step=3.350, train/acc_step=0.125]Epoch 0:  53%|#####3    | 1980/3714 [18:05<15:50,  1.82it/s, loss=3.57, v_num=0, train/loss_step=3.920, train/acc_step=0.000]Epoch 0:  58%|#####7    | 2145/3714 [19:37<14:21,  1.82it/s, loss=3.57, v_num=0, train/loss_step=3.920, train/acc_step=0.000]Epoch 0:  58%|#####7    | 2145/3714 [19:37<14:21,  1.82it/s, loss=3.58, v_num=0, train/loss_step=3.740, train/acc_step=0.000]Epoch 0:  62%|######2   | 2310/3714 [21:08<12:50,  1.82it/s, loss=3.58, v_num=0, train/loss_step=3.740, train/acc_step=0.000]Epoch 0:  62%|######2   | 2310/3714 [21:08<12:50,  1.82it/s, loss=3.52, v_num=0, train/loss_step=3.610, train/acc_step=0.000]Epoch 0:  67%|######6   | 2475/3714 [22:37<11:19,  1.82it/s, loss=3.52, v_num=0, train/loss_step=3.610, train/acc_step=0.000]Epoch 0:  67%|######6   | 2475/3714 [22:37<11:19,  1.82it/s, loss=3.54, v_num=0, train/loss_step=3.700, train/acc_step=0.125]Epoch 0:  71%|#######1  | 2640/3714 [24:06<09:48,  1.82it/s, loss=3.54, v_num=0, train/loss_step=3.700, train/acc_step=0.125]Epoch 0:  71%|#######1  | 2640/3714 [24:06<09:48,  1.82it/s, loss=3.58, v_num=0, train/loss_step=3.240, train/acc_step=0.250]Epoch 0:  76%|#######5  | 2805/3714 [25:35<08:17,  1.83it/s, loss=3.58, v_num=0, train/loss_step=3.240, train/acc_step=0.250]Epoch 0:  76%|#######5  | 2805/3714 [25:35<08:17,  1.83it/s, loss=3.46, v_num=0, train/loss_step=3.050, train/acc_step=0.375]Epoch 0:  80%|#######9  | 2970/3714 [27:06<06:47,  1.83it/s, loss=3.46, v_num=0, train/loss_step=3.050, train/acc_step=0.375]Epoch 0:  80%|#######9  | 2970/3714 [27:06<06:47,  1.83it/s, loss=3.49, v_num=0, train/loss_step=3.580, train/acc_step=0.125]Epoch 0:  84%|########4 | 3135/3714 [28:40<05:17,  1.82it/s, loss=3.49, v_num=0, train/loss_step=3.580, train/acc_step=0.125]Epoch 0:  84%|########4 | 3135/3714 [28:40<05:17,  1.82it/s, loss=3.54, v_num=0, train/loss_step=3.830, train/acc_step=0.000]Epoch 0:  89%|########8 | 3300/3714 [30:12<03:47,  1.82it/s, loss=3.54, v_num=0, train/loss_step=3.830, train/acc_step=0.000]Epoch 0:  89%|########8 | 3300/3714 [30:12<03:47,  1.82it/s, loss=3.54, v_num=0, train/loss_step=3.820, train/acc_step=0.000]Epoch 0:  89%|########8 | 3302/3714 [30:13<03:46,  1.82it/s, loss=3.54, v_num=0, train/loss_step=3.820, train/acc_step=0.000]Epoch 0:  89%|########8 | 3302/3714 [30:13<03:46,  1.82it/s, loss=3.54, v_num=0, train/loss_step=3.350, train/acc_step=0.000]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:04<?, ?it/s][Atensor([[[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2528, -1.8233],
        [ 0.6934,  0.4966],
        [-1.3395, -0.2263],
        [ 1.3240, -0.3063],
        [-1.2316, -0.5485],
        [ 0.1167, -1.0748],
        [-1.7254, -0.2003],
        [ 1.3216,  0.1990]], device='cuda:0', dtype=torch.float64)
1.7016860401549496
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [44.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3905,  0.3060],
        [-1.2387, -0.7772],
        [-1.0457, -0.6118],
        [ 0.7829,  0.9165],
        [ 1.1547, -0.0811],
        [ 1.1956, -0.5218],
        [-1.7486,  0.2522],
        [-1.4254,  0.0062]], device='cuda:0', dtype=torch.float64)
1.6898891472155295
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6923, 15.2861]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 18.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3140,  0.1818],
        [ 0.1781,  1.7470],
        [ 0.6130, -0.5576],
        [-0.7566, -0.7796],
        [ 0.1182, -2.0326],
        [-1.5791, -0.0700],
        [ 0.2886,  0.9864],
        [ 0.9305, -0.3879]], device='cuda:0', dtype=torch.float64)
1.644461469288593
tensor([[[44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.1467, 15.2464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.1467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.9948, -0.4359],
        [-2.5118,  0.8876],
        [ 0.1488, -1.0809],
        [ 0.7999, -0.3384],
        [-0.8934, -0.7201],
        [-2.0670,  0.6847],
        [ 0.7447,  0.9910],
        [ 1.0139, -0.4187]], device='cuda:0', dtype=torch.float64)
1.824567348070429
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [43.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2486, -1.9069],
        [ 0.4864,  1.8248],
        [ 0.0592, -1.8269],
        [-0.2292, -0.6388],
        [-1.2753, -0.2712],
        [-0.1310,  1.8669],
        [ 0.3133,  0.6078],
        [ 0.0546, -1.1250]], device='cuda:0', dtype=torch.float64)
1.683365276105665
tensor([[[46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.1467, 18.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8082,  0.7989],
        [ 0.3835, -0.4707],
        [ 0.5270, -0.6675],
        [ 0.3296,  0.6557],
        [-0.0969, -0.7705],
        [ 0.1623,  0.4085],
        [ 0.0235, -1.8047],
        [ 0.6481,  1.1391]], device='cuda:0', dtype=torch.float64)
1.3365275839213802
tensor([[[45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [43.6467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8137, -0.0432],
        [ 0.0653,  0.8870],
        [ 1.2234, -0.4425],
        [ 1.0239,  0.6361],
        [-1.3044, -0.1853],
        [ 1.3690, -0.1699],
        [-1.1942, -0.7228],
        [-1.2807, -0.7799]], device='cuda:0', dtype=torch.float64)
1.5693804798853537
tensor([[[43.6467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6467, 18.2464],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 18.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6650,  0.9866],
        [ 0.1744, -0.3401],
        [ 0.4626,  1.1276],
        [ 1.2106, -0.3593],
        [ 0.4741,  1.1461],
        [-1.8296, -0.3377],
        [-1.2554, -0.2563],
        [ 0.5327,  1.2253]], device='cuda:0', dtype=torch.float64)
1.4727846727767577
tensor([[[45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.2464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 18.2464],
         [44.1467, 15.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.1930,  0.3376],
        [-1.2289, -0.4340],
        [ 0.0636,  1.1567],
        [-0.3307, -0.6882],
        [ 1.1971, -0.0234],
        [ 0.4078,  1.3591],
        [-0.0093,  1.1767],
        [ 0.3336,  0.5801]], device='cuda:0', dtype=torch.float64)
1.4058158824995435
tensor([[[45.6467, 18.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [45.1467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3924,  0.3635],
        [ 0.1626,  1.1934],
        [-1.2001, -0.5453],
        [ 0.6290,  0.5782],
        [-0.1499,  1.9701],
        [ 1.1432, -0.1635],
        [ 0.3442, -0.1517],
        [-1.4067, -0.5320]], device='cuda:0', dtype=torch.float64)
1.4464643816200917
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464],
         [44.1467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6923, 15.2861]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1078, -1.7197],
        [-0.9568, -0.4241],
        [-0.1491,  1.9076],
        [-1.9787,  0.4407],
        [-1.9740,  0.3803],
        [-0.8821, -0.2113],
        [-1.7520, -0.2041],
        [-1.9017, -0.2898]], device='cuda:0', dtype=torch.float64)
2.278471813219858
tensor([[[45.1467, 13.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.7464],
         [44.1467, 15.7464]],

        [[45.6467, 18.2464],
         [45.1467, 13.7464],
         [45.1467, 18.7464],
         [43.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6923, 15.2861],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.0708, -0.9024],
        [ 0.4413, -0.0462],
        [ 1.4653,  0.1699],
        [ 0.2714,  1.8478],
        [ 0.9062,  0.8481],
        [ 0.4925,  1.5304],
        [ 0.3349,  0.5354],
        [-0.2751, -0.8056]], device='cuda:0', dtype=torch.float64)
1.3998240846172088
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4555, -0.7337],
        [ 1.1768, -0.3987],
        [ 1.3565, -0.1731],
        [-1.5629, -0.1995],
        [ 0.1110,  2.0200],
        [-0.0613,  1.8916],
        [ 0.1425,  2.1904],
        [ 0.2818,  1.6069]], device='cuda:0', dtype=torch.float64)
1.2983498821444814
tensor([[[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[46.1467, 15.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.1757, -0.1552],
        [-1.7960,  0.3986],
        [-2.2545,  0.7725],
        [ 0.4628, -0.1184],
        [-0.0150, -0.6176],
        [ 0.1935,  1.8013],
        [ 0.0334,  0.8850],
        [ 0.4016, -2.2186]], device='cuda:0', dtype=torch.float64)
1.5902284752702656
tensor([[[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1905,  1.6339],
        [ 0.7984,  0.1354],
        [ 0.4588, -0.4012],
        [-0.3064, -0.9421],
        [ 0.8562,  0.3316],
        [-0.0513, -0.9286],
        [-0.3635, -1.0074],
        [-1.5943,  0.1493]], device='cuda:0', dtype=torch.float64)
1.6398877107074141
tensor([[[45.6467, 18.7464],
         [45.1819, 19.2545],
         [44.1467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.3897, -0.5363],
        [-0.5933, -0.5874],
        [ 0.6865,  1.0390],
        [ 0.6205,  0.7568],
        [ 1.2787, -0.1623],
        [ 1.2074, -0.4439],
        [ 0.4941,  1.8071],
        [-1.0812, -0.2715]], device='cuda:0', dtype=torch.float64)
1.4658923990185722
tensor([[[45.6467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 18.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0258,  2.0571],
        [-0.5450, -1.1355],
        [ 0.3052, -0.9545],
        [ 0.4835,  1.3915],
        [-1.4520, -0.2323],
        [ 0.4923,  1.4661],
        [ 0.8628,  0.8436],
        [ 1.3465, -0.0685]], device='cuda:0', dtype=torch.float64)
1.4670920713969486
tensor([[[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [44.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3596,  1.1485],
        [ 0.5581,  1.1335],
        [ 0.5596,  1.7056],
        [ 1.4133,  0.3044],
        [ 0.1939, -0.3103],
        [-2.3621,  0.7751],
        [ 0.1998,  1.2426],
        [-1.3258, -0.2057]], device='cuda:0', dtype=torch.float64)
1.493918050972474
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [44.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.7464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6923, 15.2861],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8193,  0.7422],
        [ 0.0353, -1.9602],
        [ 0.5618,  0.2412],
        [-1.2664, -0.0890],
        [ 0.2595, -0.8801],
        [ 0.2922, -0.4810],
        [ 0.4270,  1.8178],
        [ 1.1501, -0.0845]], device='cuda:0', dtype=torch.float64)
1.393384518634535
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1546,  1.0027],
        [ 0.1439,  1.5305],
        [ 0.3632, -0.2031],
        [ 0.1551,  2.1565],
        [ 0.3133,  0.3299],
        [ 0.7977,  0.4427],
        [ 0.3689,  0.0712],
        [ 0.4500,  2.1068]], device='cuda:0', dtype=torch.float64)
1.2250234439250742
tensor([[[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 2.9525e-01, -1.6217e+00],
        [ 2.0047e-01, -2.6065e-01],
        [ 2.0485e-01,  1.4366e+00],
        [-1.5664e+00, -4.2277e-02],
        [ 3.1880e-01, -1.5429e-01],
        [ 1.1452e+00,  5.1249e-01],
        [ 1.3729e+00, -1.3905e-03],
        [ 1.1252e-01,  2.0146e+00]], device='cuda:0', dtype=torch.float64)
1.3885588871174455
tensor([[[45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 18.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 18.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4102,  0.3021],
        [ 0.8398,  0.4970],
        [ 0.2510,  1.0226],
        [-1.9817,  0.6423],
        [ 0.0904,  1.1442],
        [-1.4917, -0.6078],
        [ 0.5813,  0.9314],
        [-1.5908, -0.4166]], device='cuda:0', dtype=torch.float64)
1.829170567375078
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6923, 15.2861],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3049, -0.5061],
        [-1.5941,  0.2654],
        [-1.3553, -0.3171],
        [-1.4536, -0.5110],
        [-0.6466, -1.0056],
        [ 0.0439,  1.8236],
        [-1.2000, -0.8504],
        [ 0.2840, -1.0263]], device='cuda:0', dtype=torch.float64)
2.182589206731626
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2957, -0.7725],
        [-1.0204, -0.8322],
        [ 0.1163,  2.3375],
        [ 0.3081, -0.7407],
        [ 0.1158,  0.0963],
        [ 1.5358,  0.1742],
        [ 1.0599,  0.2417],
        [-1.1673, -0.8713]], device='cuda:0', dtype=torch.float64)
1.4425676416044872
tensor([[[46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.1735, -0.1999],
        [ 0.2887,  1.5399],
        [ 1.0261,  0.3633],
        [ 0.1240, -1.9181],
        [ 0.8290, -0.1365],
        [ 1.3571,  0.2495],
        [ 0.5758, -0.3021],
        [-0.9894, -0.9307]], device='cuda:0', dtype=torch.float64)
1.2407065390616634
tensor([[[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6923, 15.2861]],

        [[43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6923, 15.2861],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-5.0453e-01, -1.0081e+00],
        [-8.1244e-01, -9.2959e-01],
        [ 1.3022e-03, -2.3230e-02],
        [ 4.2280e-01,  1.8633e+00],
        [-8.9676e-01, -7.5448e-01],
        [ 3.5610e-01, -7.7848e-01],
        [ 6.0328e-01,  4.8847e-01],
        [ 1.0300e+00, -1.8417e-01]], device='cuda:0', dtype=torch.float64)
1.7349415753256352
tensor([[[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3835, -1.8722],
        [ 0.0072, -1.9922],
        [-1.3745, -0.5824],
        [ 0.0432, -0.9569],
        [ 1.0495, -0.0769],
        [-0.6502, -0.7931],
        [-2.0303,  0.5840],
        [-1.5981, -0.3973]], device='cuda:0', dtype=torch.float64)
1.9288513716059636
tensor([[[45.6467, 18.2464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861],
         [46.1467, 16.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8908, -0.0455],
        [ 0.5492,  1.6388],
        [ 1.0403, -0.2073],
        [ 1.1251, -0.3378],
        [ 0.1868,  0.3411],
        [ 0.0215, -1.1674],
        [-1.7705,  0.1580],
        [ 0.6565, -0.2514]], device='cuda:0', dtype=torch.float64)
1.230257275783008
tensor([[[44.1467, 15.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.2464],
         [44.1467, 15.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 15.2464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6923, 15.2861],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2894, -0.1175],
        [-1.1026, -0.6929],
        [ 1.0953,  0.1328],
        [ 0.3763,  0.9687],
        [ 0.7164, -0.4859],
        [ 0.8284, -0.4257],
        [ 1.1889, -0.1867],
        [ 0.8564,  0.1757]], device='cuda:0', dtype=torch.float64)
1.040417299201129
tensor([[[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [43.1550, 17.2484],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.1467, 18.2464],
         [45.6467, 18.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.4121, -1.1766],
        [-1.8701,  0.3950],
        [ 1.1854,  0.3142],
        [ 0.2188, -2.1076],
        [-1.3452, -0.2617],
        [ 0.1400,  1.3370],
        [ 0.4715,  1.6731],
        [-1.7291, -0.1645]], device='cuda:0', dtype=torch.float64)
1.8390462112647645
tensor([[[45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.1973,  0.1810],
        [-2.6924,  1.0920],
        [-2.0744,  0.5852],
        [ 0.1432,  0.0750],
        [ 0.7028, -0.3795],
        [ 0.6858, -0.6346],
        [ 0.0624,  1.8152],
        [-2.7060,  1.1258]], device='cuda:0', dtype=torch.float64)
1.5371842982281563
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.4556, -1.0517],
        [ 0.8869,  0.9357],
        [-1.7732, -0.3122],
        [ 0.4367,  0.5245],
        [ 1.0393, -0.0771],
        [ 0.5431,  1.9405],
        [ 0.8819, -0.1758],
        [-2.4717,  0.4924]], device='cuda:0', dtype=torch.float64)
1.460304347500856
tensor([[[45.1467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [46.1467, 15.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.9238, -0.5516],
        [ 0.0185, -1.0231],
        [-2.4400,  0.9824],
        [ 0.3185, -2.1943],
        [-1.8703,  0.1816],
        [ 0.2021, -1.1843],
        [-0.2485, -0.9889],
        [ 0.0693, -0.6180]], device='cuda:0', dtype=torch.float64)
1.9870525154415153
tensor([[[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.2464]],

        [[45.1467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.2678,  1.9257],
        [ 0.1620,  1.4322],
        [-1.3423, -0.2420],
        [-1.0424, -0.7936],
        [-1.2617, -0.4503],
        [-1.4347, -0.0421],
        [ 0.2951,  0.4117],
        [-1.9447,  0.6489]], device='cuda:0', dtype=torch.float64)
2.278104309592684
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3100,  1.4020],
        [ 1.4638,  0.1462],
        [ 0.2905, -1.0305],
        [ 0.3224, -0.6143],
        [-0.0517, -1.7708],
        [ 1.1147, -0.1451],
        [ 0.3474, -0.6458],
        [ 0.1350,  0.6305]], device='cuda:0', dtype=torch.float64)
1.1188103077704405
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.2464]],

        [[45.1467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0627, -1.7029],
        [ 0.7418, -0.4616],
        [-0.6962, -0.8809],
        [ 0.4537,  1.8011],
        [ 1.2745, -0.2575],
        [ 0.1836,  0.3750],
        [ 0.3976, -0.5924],
        [ 0.0161,  1.5654]], device='cuda:0', dtype=torch.float64)
1.3018164021089
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.0091, -0.8479],
        [-0.0510, -1.8071],
        [ 0.3270, -0.9491],
        [ 0.1708,  1.7959],
        [ 0.4551,  1.9974],
        [ 0.0415, -0.9422],
        [ 0.5692, -0.3071],
        [ 0.2509, -1.0098]], device='cuda:0', dtype=torch.float64)
1.5676194121493894
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7814,  0.8572],
        [ 0.1311,  1.2607],
        [-0.7244, -0.7442],
        [ 0.1538,  0.1567],
        [ 0.1218, -1.3581],
        [-2.4877,  0.8674],
        [-0.1414, -1.1665],
        [-1.1077, -0.0848]], device='cuda:0', dtype=torch.float64)
1.8513444130987606
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.4873,  0.3174],
        [-0.3979, -0.9559],
        [-1.2936, -0.4909],
        [ 0.5188,  1.7280],
        [ 0.6628,  1.4895],
        [ 0.8052,  0.2454],
        [-1.9237,  0.5856],
        [ 0.2090, -0.7477]], device='cuda:0', dtype=torch.float64)
1.543336132520555
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 18.7464]],

        [[45.6923, 15.2861],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5327, -0.3377],
        [ 0.2072,  0.5194],
        [ 0.7635,  0.3948],
        [ 0.2246,  1.9117],
        [ 0.0764, -2.1779],
        [ 0.2810,  2.0160],
        [ 0.3128, -1.2445],
        [-2.0082,  0.5024]], device='cuda:0', dtype=torch.float64)
1.4434450939551442
tensor([[[45.6467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.1467, 18.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [44.6467, 15.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0959, -1.1666],
        [ 0.5385, -0.7559],
        [ 0.6498,  1.3218],
        [-1.7859,  0.0980],
        [ 0.2236, -1.7481],
        [-1.3336, -0.6435],
        [-2.9890,  1.4677],
        [ 0.8062, -0.3507]], device='cuda:0', dtype=torch.float64)
1.7270758368958927
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[46.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0534, -0.0432],
        [ 0.4246, -1.1311],
        [ 0.3809, -1.4120],
        [-0.2057, -0.6735],
        [ 0.3482,  0.6432],
        [-0.9389, -0.7103],
        [ 0.9023, -0.1188],
        [ 1.1322, -0.5616]], device='cuda:0', dtype=torch.float64)
1.3680745014823015
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.5636, 14.6820],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4889,  1.3081],
        [ 0.3750, -0.0827],
        [ 0.7504, -0.6172],
        [ 0.8411, -0.2413],
        [ 0.5805,  0.9845],
        [ 0.5833, -0.4140],
        [ 1.0742, -0.2431],
        [ 0.2205,  1.1193]], device='cuda:0', dtype=torch.float64)
0.957182734250051
tensor([[[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 18.2464],
         [45.1467, 15.7464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.1467, 18.2464],
         [45.6467, 17.2464],
         [45.1467, 18.7464],
         [44.1467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7515,  1.8488],
        [-0.2429, -0.5427],
        [ 1.0432,  0.5130],
        [ 1.0558,  0.1792],
        [-0.3261, -0.7054],
        [-1.7652, -0.3666],
        [ 0.4469,  1.7173],
        [ 0.1969,  1.1230]], device='cuda:0', dtype=torch.float64)
1.4825367904673974
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8720,  0.4599],
        [ 0.8951,  0.2675],
        [-1.8591, -0.2009],
        [ 0.2042, -0.3894],
        [ 0.3287,  1.2440],
        [ 0.8019,  0.7802],
        [ 0.3315, -0.1835],
        [-0.7260, -0.5669]], device='cuda:0', dtype=torch.float64)
1.5014916443258426
tensor([[[43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464]],

        [[43.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.6830, -0.0694],
        [-0.4033, -0.7969],
        [-0.7287, -0.8736],
        [ 0.1904,  1.7321],
        [ 0.9447,  0.8681],
        [ 0.6784, -0.1418],
        [ 0.0025, -0.8664],
        [-1.3878, -0.3986]], device='cuda:0', dtype=torch.float64)
1.8698328700623374
tensor([[[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1519, 14.2344],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 13.7464],
         [45.1467, 18.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [44.1467, 15.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8927,  0.4483],
        [ 0.9063, -0.1436],
        [ 0.2854, -1.4015],
        [ 0.2793, -2.0167],
        [ 0.9752, -0.4725],
        [ 0.6317, -0.3320],
        [ 0.8811, -0.1395],
        [ 1.0397, -0.4211]], device='cuda:0', dtype=torch.float64)
0.9913807960647111
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 16.2464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2142, -2.1013],
        [-1.7756,  0.1777],
        [ 0.1353,  1.1333],
        [-1.8379,  0.0809],
        [ 1.3443,  0.3699],
        [ 1.5057,  0.2733],
        [ 0.1428, -0.8349],
        [ 0.2871,  1.3413]], device='cuda:0', dtype=torch.float64)
1.4912201588222787
tensor([[[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [43.1550, 17.2484],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.5678, -0.3545],
        [-2.4082,  0.9014],
        [ 0.5045, -1.3422],
        [ 0.7040, -0.7691],
        [-0.7024, -0.4606],
        [ 0.8917, -0.2075],
        [-0.0544,  1.8308],
        [ 0.4830, -0.2473]], device='cuda:0', dtype=torch.float64)
1.7341221106507578
tensor([[[45.1467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [44.1467, 15.7464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [45.1519, 14.2344]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.1467, 15.7464]],

        [[45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3866,  0.8420],
        [-2.2348,  0.6307],
        [-0.0301, -2.0112],
        [-0.1306, -1.9074],
        [ 0.0826,  0.8098],
        [ 0.3347, -1.4470],
        [-1.6618,  0.3144],
        [ 0.7496,  0.7808]], device='cuda:0', dtype=torch.float64)
1.7018279255004063
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [45.1467, 18.7464],
         [44.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[46.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3474, -1.6426],
        [ 0.4791, -0.7745],
        [-1.1773, -0.7092],
        [ 0.0338, -0.5334],
        [ 0.1954, -0.2011],
        [ 0.4441, -0.1556],
        [-1.2614, -0.4044],
        [-2.6298,  0.9928]], device='cuda:0', dtype=torch.float64)
1.8016060679769645
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.1550, 17.2484]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.5394,  0.9234],
        [ 0.6533, -0.5803],
        [ 0.1119, -1.9898],
        [ 0.3483, -0.1975],
        [-0.4399, -0.8119],
        [ 0.1236,  0.8416],
        [ 0.0170, -0.0343],
        [ 0.7780,  0.2619]], device='cuda:0', dtype=torch.float64)
1.5583636826072198
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.7464],
         [43.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.1969, -0.4978],
        [ 0.0281,  0.0238],
        [ 0.2853, -1.8736],
        [ 0.5685,  0.1206],
        [-0.9847, -0.6568],
        [-0.0110, -1.0022],
        [ 0.3580, -2.2348],
        [ 0.6310,  1.3654]], device='cuda:0', dtype=torch.float64)
1.4226547278296788
tensor([[[43.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7976,  0.9244],
        [-0.1536, -0.9508],
        [ 0.2672,  1.1446],
        [ 0.6829,  0.7149],
        [ 0.0404,  1.2643],
        [ 0.5910,  0.5937],
        [ 0.0360, -0.1904],
        [ 0.0466,  1.0776]], device='cuda:0', dtype=torch.float64)
1.2480703307106142
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.1103,  0.4820],
        [ 0.9367, -0.2912],
        [-1.6743,  0.2517],
        [ 0.3513, -0.7954],
        [ 0.9218,  0.3066],
        [ 0.9874,  0.6236],
        [ 0.6198,  0.7659],
        [ 1.1546,  0.0579]], device='cuda:0', dtype=torch.float64)
1.3481988786644756
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.7464],
         [45.6467, 18.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2226, -0.8711],
        [ 0.2788, -0.2485],
        [ 1.2834,  0.0611],
        [ 0.3642,  0.7284],
        [ 0.3871, -1.6384],
        [ 0.7243,  1.4478],
        [-1.0136, -0.8380],
        [ 0.7502,  0.5434]], device='cuda:0', dtype=torch.float64)
1.2204949387676793
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [45.1467, 14.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0201, -2.1014],
        [ 0.4885,  1.2608],
        [ 0.1260,  2.3484],
        [ 0.4134,  0.3552],
        [ 0.0977, -1.2413],
        [ 0.2621, -1.8470],
        [ 0.0925, -1.8956],
        [ 0.1595, -0.9831]], device='cuda:0', dtype=torch.float64)
1.4332646362072936
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464]],

        [[46.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[43.6467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.5328, -0.4241],
        [-0.2507, -0.9590],
        [ 0.3914,  0.5197],
        [ 0.7153, -0.7259],
        [ 0.1964,  1.4769],
        [ 0.9390, -0.2064],
        [ 0.5029, -0.8125],
        [ 0.3520, -1.4953]], device='cuda:0', dtype=torch.float64)
1.5477503079035597
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6200,  0.8736],
        [-1.4371, -0.0589],
        [-1.7870,  0.0119],
        [ 0.2818,  1.5207],
        [ 0.4497, -0.6757],
        [-0.0916,  1.8700],
        [ 0.7981, -0.7129],
        [ 0.3624,  1.3409]], device='cuda:0', dtype=torch.float64)
1.636485539515536
tensor([[[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [46.1467, 15.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 17.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4268,  0.8005],
        [-1.8190,  0.2090],
        [-1.8321,  0.2869],
        [ 0.8307, -0.2717],
        [ 1.3225,  0.0676],
        [ 0.8098, -0.2537],
        [ 0.8768,  0.6766],
        [ 0.2579,  1.3054]], device='cuda:0', dtype=torch.float64)
1.3715553019770816
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6195,  1.8027],
        [ 0.1766, -0.6025],
        [ 0.0464,  1.1534],
        [-0.0443, -0.1042],
        [-0.1351, -1.7696],
        [ 0.8016, -0.1766],
        [ 0.0746,  1.5904],
        [ 0.4144, -0.7691]], device='cuda:0', dtype=torch.float64)
1.4651927507546343
tensor([[[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 18.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4067,  0.3211],
        [ 0.2808, -1.3113],
        [-2.5323,  0.7973],
        [ 0.6306, -0.5332],
        [ 0.4778, -0.3655],
        [ 0.6929,  0.4856],
        [-0.6795, -0.8021],
        [-1.2136, -0.7583]], device='cuda:0', dtype=torch.float64)
1.6573454930294056
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2577, -0.2995],
        [ 1.2056, -0.2587],
        [ 0.4916, -0.2642],
        [ 1.4829, -0.1064],
        [-3.0413,  1.5522],
        [ 0.1462, -0.4190],
        [ 0.7060,  1.6735],
        [ 0.7132, -0.3776]], device='cuda:0', dtype=torch.float64)
0.9216108944464295
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7744, -0.5247],
        [ 0.0698,  1.7988],
        [-1.3976, -0.1471],
        [ 0.2306, -1.3866],
        [ 0.3757,  1.4524],
        [ 0.0870,  1.9320],
        [-0.2135, -2.0022],
        [-0.2134,  1.9834]], device='cuda:0', dtype=torch.float64)
1.6002945562748034
tensor([[[43.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6923, 15.2861],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.2419, -0.1743],
        [-1.5077,  0.1392],
        [ 0.8050,  1.7869],
        [-1.2631, -0.5719],
        [-1.4548, -0.5282],
        [ 0.0250, -1.2523],
        [ 0.5440,  1.4542],
        [-1.2629, -0.8472]], device='cuda:0', dtype=torch.float64)
2.077307504102137
tensor([[[45.1467, 13.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 14.7464],
         [44.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464],
         [45.1467, 18.7464],
         [45.6923, 15.2861]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0877, -0.6024],
        [ 0.3376, -2.0420],
        [ 0.1398, -2.0823],
        [ 0.0078, -0.4917],
        [-1.1869, -0.1654],
        [ 0.0341, -1.2659],
        [ 0.6165,  0.7104],
        [ 0.2573, -0.3957]], device='cuda:0', dtype=torch.float64)
1.6819834413739603
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 15.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1125,  1.5293],
        [ 0.3009, -1.4358],
        [ 0.3344,  1.5755],
        [ 0.7157,  1.4079],
        [ 0.2713, -0.5313],
        [ 0.9107, -0.2839],
        [ 0.3428, -1.6383],
        [ 0.6482, -0.7492]], device='cuda:0', dtype=torch.float64)
1.1581218263788964
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 18.7464],
         [45.1467, 14.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9936, -0.2365],
        [ 0.8352, -0.3087],
        [ 0.0275,  0.0286],
        [-0.0128, -0.9130],
        [ 0.3638,  1.9516],
        [-0.1496,  1.9200],
        [ 0.8113,  0.8737],
        [-0.0981,  1.8759]], device='cuda:0', dtype=torch.float64)
1.1981763568787298
tensor([[[44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7718, -0.5984],
        [ 0.5902, -0.0842],
        [-2.4248,  0.8884],
        [ 0.1407, -1.9985],
        [ 1.3709,  0.0842],
        [ 0.0510, -1.8835],
        [ 1.2557,  0.3299],
        [ 1.3678, -0.0282]], device='cuda:0', dtype=torch.float64)
1.0317050573200297
tensor([[[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.1467, 18.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.3057, -0.7982],
        [ 1.2803, -0.0834],
        [ 0.1923,  1.5110],
        [-0.2799,  1.9470],
        [ 0.8754, -0.4730],
        [ 1.3609,  0.3440],
        [-1.5019, -0.3831],
        [ 0.0983,  0.6232]], device='cuda:0', dtype=torch.float64)
1.506773311525572
tensor([[[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.7464],
         [44.6467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[44.1467, 15.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3127, -0.5073],
        [-0.7589, -0.7145],
        [-0.2286, -1.0411],
        [ 0.4360,  1.8452],
        [-0.6697, -0.7562],
        [-2.1598,  0.6567],
        [ 0.6608,  0.1574],
        [ 0.5470,  1.6532]], device='cuda:0', dtype=torch.float64)
1.7303437298875295
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 18.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.3663, -0.7406],
        [ 0.4526, -0.4484],
        [-1.7471, -0.1488],
        [ 1.2450,  0.0340],
        [ 0.2630,  1.6554],
        [ 0.3754, -0.2043],
        [ 0.3828, -0.5538],
        [-1.7270, -0.1583]], device='cuda:0', dtype=torch.float64)
1.8121049986386943
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3895,  0.5418],
        [-1.3472, -0.1227],
        [-1.6570, -0.3031],
        [ 0.8588,  0.3569],
        [ 1.2544, -0.4323],
        [-1.5875, -0.4616],
        [-1.6917, -0.1062],
        [ 0.6523, -0.1236]], device='cuda:0', dtype=torch.float64)
1.8836377530898787
tensor([[[43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.7491,  0.1533],
        [-1.0332, -0.7091],
        [ 1.0358,  0.1714],
        [-0.8932, -0.7640],
        [ 0.0905,  1.3047],
        [ 0.1595, -0.8811],
        [ 0.0701, -0.8759],
        [ 0.0783, -1.9641]], device='cuda:0', dtype=torch.float64)
1.8772646128534203
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4220, -0.3088],
        [ 1.0199, -0.3928],
        [-0.0047,  1.6867],
        [ 0.3238,  0.3909],
        [ 0.6420,  0.8163],
        [ 0.5322, -0.6062],
        [ 0.5061,  1.0402],
        [ 0.6079,  0.0714]], device='cuda:0', dtype=torch.float64)
1.1254776874978427
tensor([[[45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 18.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.2471, -1.1551],
        [ 0.7268, -0.5841],
        [ 0.0815,  2.0848],
        [ 0.5264,  0.4329],
        [ 0.0261, -1.0547],
        [-1.4529, -0.5059],
        [ 1.2798, -0.3318],
        [ 0.2772, -0.0833]], device='cuda:0', dtype=torch.float64)
1.5430703689099707
tensor([[[45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [44.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464]],

        [[45.6923, 15.2861],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2703, -1.0169],
        [ 0.6673,  1.5306],
        [ 0.8908,  0.0853],
        [-1.5821, -0.1597],
        [ 0.3990, -0.5944],
        [-0.1233, -1.8896],
        [-1.6796, -0.0707],
        [ 0.0135, -0.1659]], device='cuda:0', dtype=torch.float64)
1.7175679976979579
tensor([[[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[45.1467, 14.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6923, 15.2861]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.6510,  0.1542],
        [-0.1653, -1.0442],
        [-1.6500,  0.0605],
        [ 0.4251, -0.8134],
        [ 0.6775, -0.8564],
        [ 0.2627,  0.1095],
        [ 0.4536, -0.5433],
        [-1.0348, -0.9810]], device='cuda:0', dtype=torch.float64)
1.990059105016867
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [45.1467, 18.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[45.1467, 18.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.4382,  0.8520],
        [ 0.4794,  1.7199],
        [ 0.7693,  1.7067],
        [-0.6413, -0.7700],
        [ 0.6927, -0.4832],
        [ 0.1410, -1.9868],
        [-1.9156,  0.4099],
        [ 1.4270,  0.0617]], device='cuda:0', dtype=torch.float64)
1.4777915506404007
tensor([[[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [45.1819, 19.2545]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [45.5636, 14.6820],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1367,  2.2659],
        [ 0.3339,  1.7682],
        [ 0.6766,  0.6125],
        [ 1.2457,  0.1127],
        [ 0.1869, -0.6424],
        [-0.7487, -0.3015],
        [ 0.4345,  0.3214],
        [-2.0417,  0.5440]], device='cuda:0', dtype=torch.float64)
1.4558903146903899
tensor([[[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 18.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0345,  0.0922],
        [-1.9233,  0.5910],
        [ 0.9639, -0.5201],
        [ 0.8942, -0.4256],
        [ 0.5788,  1.5649],
        [-1.0388, -0.8595],
        [ 0.0067, -0.0160],
        [ 0.1395, -1.0494]], device='cuda:0', dtype=torch.float64)
1.4659739557332365
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [43.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.1860, -0.8919],
        [ 0.0116, -1.2810],
        [ 1.0861,  0.5248],
        [ 0.2638, -0.4776],
        [ 0.4133,  1.6529],
        [-1.4069, -0.2403],
        [-0.9963, -0.2729],
        [ 0.1739, -1.7128]], device='cuda:0', dtype=torch.float64)
1.8643311265707783
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[44.1467, 15.7464],
         [44.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2680,  0.0766],
        [ 0.2597,  2.0319],
        [-0.6165, -0.5758],
        [-0.5888, -0.9446],
        [ 0.7372,  0.4320],
        [-1.8724,  0.5292],
        [ 1.2165, -0.3737],
        [ 0.1177, -2.0311]], device='cuda:0', dtype=torch.float64)
1.545616954835955
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.1550, 17.2484]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6923, 15.2861]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9414, -0.0588],
        [-0.3634, -1.0368],
        [ 0.7748,  0.3002],
        [ 0.4858,  1.2575],
        [-2.4527,  0.9205],
        [-1.9126,  0.5419],
        [ 0.1036, -2.0802],
        [ 1.0920, -0.3800]], device='cuda:0', dtype=torch.float64)
1.5051995162731917
tensor([[[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [44.6467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2454,  1.9521],
        [ 1.0523, -0.5356],
        [-0.7370, -0.5533],
        [ 0.0865, -1.1868],
        [ 0.6305, -0.1539],
        [ 1.0948, -0.0111],
        [ 0.7521,  1.2266],
        [ 0.7263,  0.8524]], device='cuda:0', dtype=torch.float64)
1.2200935092063534
tensor([[[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [43.1550, 17.2484]],

        [[45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 17.7464]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.2151, -1.0602],
        [-2.1153,  0.6193],
        [ 0.3837, -0.7127],
        [ 1.2023, -0.0158],
        [ 0.6029, -0.2324],
        [ 0.5017,  0.8771],
        [-2.4328,  0.9023],
        [-1.3832, -0.4008]], device='cuda:0', dtype=torch.float64)
1.7241965601558502
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2820,  0.3584],
        [ 0.0871, -2.0737],
        [ 1.0093, -0.4336],
        [ 0.3663, -0.6673],
        [ 0.6065, -0.4589],
        [ 0.4916, -0.3861],
        [-1.9776,  0.4699],
        [ 1.1046,  0.2727]], device='cuda:0', dtype=torch.float64)
1.1919803137942744
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.7464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1089,  2.1774],
        [ 0.4250,  0.2922],
        [ 0.1397, -0.8154],
        [-2.1528,  0.5212],
        [ 0.0503, -1.1323],
        [ 1.3778, -0.0631],
        [ 0.5387,  0.4908],
        [ 0.1963,  2.0955]], device='cuda:0', dtype=torch.float64)
1.4104669357908532
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1005, -1.3315],
        [ 1.1843,  0.2005],
        [ 0.8269,  1.7798],
        [ 0.4696,  1.0244],
        [ 0.0595,  1.7834],
        [ 0.1139,  2.1990],
        [-0.0788,  1.8712],
        [-0.6905, -0.9944]], device='cuda:0', dtype=torch.float64)
1.3499576919302378
tensor([[[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 17.7464],
         [45.1467, 18.2464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 18.2464],
         [46.1467, 16.7464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.9576, -0.8715],
        [ 0.1019, -1.9224],
        [ 0.4148,  1.1607],
        [ 0.0997,  0.2545],
        [-0.0316, -2.0689],
        [ 0.4073, -1.8508],
        [ 1.1717,  0.0559],
        [ 0.9286,  0.3113]], device='cuda:0', dtype=torch.float64)
1.4185911532205622
tensor([[[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [44.1467, 15.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [45.1467, 15.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 17.2464],
         [45.1467, 18.7464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0319, -0.2538],
        [ 0.5415, -0.3968],
        [ 0.4407,  1.2374],
        [-0.6540, -0.5551],
        [ 0.2767,  1.9804],
        [-0.3532, -0.9282],
        [-0.6580, -1.0411],
        [-1.6305, -0.0779]], device='cuda:0', dtype=torch.float64)
1.743057393284002
tensor([[[46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.1467, 14.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6940,  0.6881],
        [ 0.7891, -0.4099],
        [ 0.2050, -0.1992],
        [-1.8692,  0.5259],
        [ 0.2816, -1.0012],
        [-1.6424, -0.1129],
        [-0.0140,  1.5649],
        [-1.9628,  0.4181]], device='cuda:0', dtype=torch.float64)
1.8311097606579274
tensor([[[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[45.6467, 18.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.2694,  0.8132],
        [ 0.8591,  0.1785],
        [ 0.3812, -0.6973],
        [ 0.4469, -1.9067],
        [-0.1025,  1.9833],
        [ 1.2748, -0.2640],
        [ 0.2682,  1.0139],
        [ 0.1215, -0.8230]], device='cuda:0', dtype=torch.float64)
1.406177516843314
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 18.7464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.7464],
         [44.1467, 15.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.7596,  1.1900],
        [-0.0371,  1.8575],
        [ 0.1438, -1.9812],
        [ 0.2285, -0.2805],
        [ 0.6889, -0.2150],
        [-0.8135, -0.8757],
        [ 0.1948,  0.7089],
        [ 0.6993,  1.9254]], device='cuda:0', dtype=torch.float64)
1.528463260201489
tensor([[[45.6467, 15.7464],
         [46.1467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.5362,  0.1746],
        [-0.2216,  2.0625],
        [ 0.8920,  0.2895],
        [ 0.4415, -0.1190],
        [-1.6688, -0.2938],
        [ 0.1332,  1.0262],
        [-1.7019, -0.0958],
        [ 0.8588, -0.1935]], device='cuda:0', dtype=torch.float64)
1.5211869363114734
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3526, -0.2132],
        [-0.0594, -1.1366],
        [-0.4437, -0.7982],
        [ 0.3665,  1.8802],
        [ 0.2920, -0.6884],
        [ 0.0203, -2.0495],
        [-1.9073,  0.4692],
        [ 0.6519,  0.0485]], device='cuda:0', dtype=torch.float64)
1.5396496820831782
tensor([[[45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6923, 15.2861]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 18.2464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1670, -2.1312],
        [ 0.1630, -1.3326],
        [ 0.4770,  1.3150],
        [ 0.9090,  0.1864],
        [ 0.9368,  0.6980],
        [ 0.3245, -1.1694],
        [ 0.7671,  0.8374],
        [-1.0156, -0.8363]], device='cuda:0', dtype=torch.float64)
1.311588749683453
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6923, 15.2861],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8033,  0.8398],
        [ 1.1013,  0.3546],
        [ 0.4016, -1.6499],
        [-0.1183, -0.7724],
        [ 1.1212, -0.3341],
        [ 0.6363, -0.1653],
        [ 0.5299,  0.3987],
        [-0.9096, -0.4349]], device='cuda:0', dtype=torch.float64)
1.095970704824048
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1787,  1.9237],
        [ 1.2924, -0.1021],
        [ 0.2410,  0.1097],
        [ 0.2852, -1.8725],
        [ 0.6195, -0.5812],
        [-1.4541, -0.5294],
        [ 0.2792, -1.6186],
        [ 1.4088,  0.3050]], device='cuda:0', dtype=torch.float64)
1.2808787080718842
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 18.2464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 13.7464],
         [45.1467, 14.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3670, -0.7348],
        [ 0.6006,  0.2859],
        [ 1.0528, -0.3103],
        [-1.7205,  0.1723],
        [-1.8415,  0.0211],
        [ 1.1927, -0.3854],
        [ 1.3386, -0.2808],
        [ 0.4717,  0.2326]], device='cuda:0', dtype=torch.float64)
1.4067294543559004
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0992, -0.1526],
        [ 0.4713, -0.6746],
        [-1.2088, -0.0679],
        [ 0.4519, -0.7511],
        [ 0.2189, -0.5951],
        [ 1.3697,  0.0554],
        [-1.7567,  0.2639],
        [-1.6930, -0.2833]], device='cuda:0', dtype=torch.float64)
1.6335213273503024
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 18.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6158,  0.0857],
        [ 0.6526,  1.4204],
        [ 0.8466, -0.0625],
        [ 0.4358, -1.3778],
        [-0.0855, -1.1473],
        [ 0.0087,  1.9755],
        [ 0.2523,  2.0082],
        [ 0.6227,  1.4555]], device='cuda:0', dtype=torch.float64)
1.1990185222055314
tensor([[[45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.2464],
         [43.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6923, 15.2861],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6923, 15.2861],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2298, -0.2698],
        [ 0.7452,  1.7417],
        [-1.6267, -0.4283],
        [ 0.9278,  0.4548],
        [ 0.0347,  1.8475],
        [ 0.4858, -0.7743],
        [ 0.5804, -0.2048],
        [ 0.9767, -0.3752]], device='cuda:0', dtype=torch.float64)
1.33865726368018
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.6467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7075,  1.3548],
        [ 1.1628, -0.4076],
        [ 1.0482,  0.4008],
        [ 0.0062, -2.0378],
        [ 0.4733,  1.4985],
        [ 1.3461,  0.0777],
        [ 0.6964,  0.6962],
        [ 0.5944,  1.5830]], device='cuda:0', dtype=torch.float64)
0.837709470274268
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [44.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0257, -0.0497],
        [ 1.5485, -0.0349],
        [ 0.3159,  1.5176],
        [ 1.3359,  0.2828],
        [-1.8091,  0.4666],
        [ 0.4126,  0.5827],
        [ 0.3369,  0.5836],
        [-1.6046,  0.2053]], device='cuda:0', dtype=torch.float64)
1.3981779579416624
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[44.1467, 15.7464],
         [45.6467, 18.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[44.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 18.2464]],

        [[44.1467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 18.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4599,  1.2104],
        [-0.7334, -0.6399],
        [-1.2062, -0.4557],
        [-1.6684,  0.2272],
        [-0.0895,  2.0748],
        [-0.6015, -0.7318],
        [-1.0624, -0.9172],
        [-0.2362, -0.9667]], device='cuda:0', dtype=torch.float64)
2.127206614009598
tensor([[[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 14.7464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [44.6467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6923, 15.2861]],

        [[43.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.6467, 16.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 14.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6345,  1.0251],
        [-0.6082, -0.7428],
        [-0.0240, -1.7673],
        [-0.0402, -2.0631],
        [ 0.4998,  1.5451],
        [-0.9028, -0.5955],
        [-0.0679, -1.9482],
        [ 0.4026, -1.7972]], device='cuda:0', dtype=torch.float64)
1.6758223698174715
tensor([[[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3314, -1.2580],
        [-0.7602, -0.2894],
        [-2.1964,  0.7428],
        [ 1.6162, -0.0635],
        [ 0.5996, -0.3046],
        [ 0.2529, -0.5139],
        [ 0.1983,  1.8067],
        [ 0.3970,  0.0795]], device='cuda:0', dtype=torch.float64)
1.4856168513832508
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.7765, -0.9626],
        [-0.8832, -0.5953],
        [-0.0101,  1.8240],
        [-1.7264,  0.2203],
        [ 1.5050,  0.2724],
        [ 0.6603, -0.0270],
        [-0.0209, -1.8359],
        [ 0.2924, -1.9569]], device='cuda:0', dtype=torch.float64)
1.7138916533041875
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [43.6467, 16.7464]],

        [[44.1467, 15.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 14.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.1467, 18.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [45.6467, 18.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.3442, -0.4183],
        [-0.7526, -0.6497],
        [ 1.1462,  0.6617],
        [ 0.5029,  1.5506],
        [ 0.4838, -0.3784],
        [ 1.2722,  0.4758],
        [-2.0302,  0.5342],
        [ 1.2582,  0.3020]], device='cuda:0', dtype=torch.float64)
1.4769882588917347
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [43.6467, 16.2464],
         [43.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [43.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.3947, -0.8064],
        [ 0.3325,  1.0534],
        [-2.1325,  0.6199],
        [ 0.3998, -0.0833],
        [-1.4998, -0.1594],
        [-1.2303, -0.1379],
        [ 0.8304,  0.3070],
        [ 0.5068, -0.4197]], device='cuda:0', dtype=torch.float64)
1.8583791579480735
tensor([[[44.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.4832, -0.5618],
        [ 0.0658,  1.2554],
        [-0.4895, -1.1477],
        [-0.0722, -0.9460],
        [ 1.1183, -0.0600],
        [ 1.0436, -0.3629],
        [-0.0797, -1.7847],
        [ 1.2113,  0.3612]], device='cuda:0', dtype=torch.float64)
1.4809904712674975
tensor([[[45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5200,  1.7011],
        [ 1.0629,  0.1953],
        [ 0.1253,  0.1178],
        [-1.1914, -0.7522],
        [-1.2947, -0.6688],
        [-1.8448, -0.1457],
        [-2.5056,  0.7298],
        [ 0.8108,  1.8586]], device='cuda:0', dtype=torch.float64)
1.7862301023774654
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 18.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [43.1550, 17.2484]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7940, -0.2156],
        [-1.1825, -0.6666],
        [ 0.2001, -2.2145],
        [-0.7487, -0.3016],
        [ 0.4269, -1.8582],
        [ 0.4086, -0.2890],
        [ 1.2990,  0.2221],
        [-1.5350,  0.1154]], device='cuda:0', dtype=torch.float64)
1.7342081035886339
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0729,  1.5009],
        [ 0.3194, -0.8953],
        [ 0.5424,  0.6507],
        [ 0.1844,  1.7437],
        [ 0.7140,  1.5910],
        [ 0.0803,  1.5905],
        [ 0.2593, -2.0454],
        [ 0.3242,  0.8991]], device='cuda:0', dtype=torch.float64)
1.2795320604509528
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 18.2464],
         [45.6467, 18.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.1467, 15.2464],
         [45.6923, 15.2861],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5744,  0.2168],
        [ 1.1747, -0.2148],
        [ 0.7962, -0.2346],
        [ 0.2495,  1.7072],
        [-0.2647, -2.0173],
        [ 1.5427, -0.0179],
        [-1.1906, -0.1872],
        [ 0.0182,  1.3935]], device='cuda:0', dtype=torch.float64)
1.2597084755618575
tensor([[[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6923, 15.2861]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [44.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [45.6467, 18.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0736, -0.4999],
        [-1.5613,  0.2009],
        [ 0.7486,  0.5984],
        [-1.3777, -0.6849],
        [-1.4098, -0.4462],
        [ 0.3167, -1.3326],
        [-2.1975,  0.7220],
        [-1.0987, -0.7455]], device='cuda:0', dtype=torch.float64)
2.0495877165903185
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.1924,  0.7058],
        [-0.6825, -0.7292],
        [ 0.3845, -0.5430],
        [ 0.7746,  0.9531],
        [-2.7278,  1.1568],
        [ 0.1336,  0.3680],
        [ 0.2028,  0.5286],
        [ 0.3575, -1.4443]], device='cuda:0', dtype=torch.float64)
1.7459201491832397
tensor([[[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[43.6467, 16.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.2464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1437,  0.8426],
        [-1.4574, -0.1579],
        [-0.2723, -0.8797],
        [ 0.7422,  1.7989],
        [-1.4696, -0.6340],
        [-1.2618, -0.4775],
        [ 0.6395, -0.7765],
        [ 0.1944,  2.1510]], device='cuda:0', dtype=torch.float64)
1.8904483512597101
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 18.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0892,  1.5750],
        [-0.2964, -1.9500],
        [ 0.0208, -1.7094],
        [ 0.7812,  0.8568],
        [ 0.3979, -0.8162],
        [ 0.2445, -1.6533],
        [ 1.2365,  0.2459],
        [ 0.3780, -1.1298]], device='cuda:0', dtype=torch.float64)
1.3015394758184742
tensor([[[45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6923, 15.2861]],

        [[45.6467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0676, -1.1509],
        [ 0.6844, -0.1617],
        [ 0.5235, -0.6578],
        [-0.5948, -0.8048],
        [-0.1196, -1.8438],
        [-1.2422, -0.1667],
        [ 1.0874,  0.1614],
        [-0.1875, -1.0818]], device='cuda:0', dtype=torch.float64)
1.6995528802364799
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2018, -1.1875],
        [-0.5469, -0.6731],
        [ 0.6746,  0.9503],
        [-0.0573, -1.7965],
        [ 0.2665, -1.3985],
        [ 0.3322,  1.9247],
        [ 0.9163,  0.6403],
        [-2.7304,  1.1969]], device='cuda:0', dtype=torch.float64)
1.5099417191104716
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [44.1467, 15.2464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.1024, -0.6772],
        [ 1.1394,  0.5921],
        [ 0.4756,  1.7585],
        [-0.9734, -0.4011],
        [ 0.0745,  1.1590],
        [-1.0514, -0.9682],
        [-2.7128,  1.1836],
        [ 0.6328,  1.0028]], device='cuda:0', dtype=torch.float64)
1.754333967709277
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6143,  0.7455],
        [-0.6521, -0.8489],
        [ 0.8852,  0.4793],
        [-2.0152,  0.6452],
        [-0.6671, -1.0009],
        [ 0.2184, -1.2026],
        [ 0.1457, -1.3400],
        [-0.0139, -0.6422]], device='cuda:0', dtype=torch.float64)
1.8855125507517916
tensor([[[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7982,  0.4422],
        [ 0.9627,  0.2104],
        [ 0.4314, -0.0743],
        [-0.6828, -0.7997],
        [ 0.5442,  1.5085],
        [ 0.5892, -0.6982],
        [ 0.6062,  0.4269],
        [ 0.4328,  1.5960]], device='cuda:0', dtype=torch.float64)
1.1061247412941837
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [45.1467, 14.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.2377, -0.4275],
        [ 0.1154, -1.3320],
        [ 0.7344,  0.9655],
        [-1.4098, -0.1460],
        [ 0.6460,  1.3211],
        [ 1.1554, -0.4165],
        [ 0.4294,  0.0794],
        [ 0.3133, -1.5117]], device='cuda:0', dtype=torch.float64)
1.5878014614759455
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9539, -0.4059],
        [ 0.1757, -1.6880],
        [ 1.0941, -0.0964],
        [ 0.0661, -2.1333],
        [ 0.2758, -2.2384],
        [-0.6129, -0.5796],
        [ 0.9645,  0.5931],
        [ 0.8974,  0.3272]], device='cuda:0', dtype=torch.float64)
1.2399845270378769
tensor([[[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1570,  1.4610],
        [ 0.0646, -0.0367],
        [ 1.0816,  0.5868],
        [-0.3446, -0.6623],
        [ 1.4436, -0.0187],
        [-0.2301, -1.9918],
        [ 0.7149, -0.4024],
        [ 0.7522,  0.6836]], device='cuda:0', dtype=torch.float64)
1.1173532086921614
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.1467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5373,  0.2463],
        [ 0.8398,  1.9358],
        [ 0.4508,  0.4524],
        [-1.1502, -0.4148],
        [ 1.2224, -0.3150],
        [ 0.2808, -0.8602],
        [ 1.1744,  0.3979],
        [-1.1816, -0.9024]], device='cuda:0', dtype=torch.float64)
1.3133550293315766
tensor([[[44.1467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.1084, -1.9127],
        [ 0.3189,  0.2112],
        [ 0.0658, -1.9412],
        [ 0.8467, -0.4478],
        [ 1.3317,  0.1440],
        [ 0.7127,  1.8421],
        [ 1.1984, -0.3453],
        [ 0.0060, -1.2619]], device='cuda:0', dtype=torch.float64)
1.0751218747781377
tensor([[[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 14.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4920,  0.4648],
        [-2.7709,  1.2429],
        [ 0.7359, -0.2626],
        [ 1.0588, -0.1453],
        [ 0.7844,  0.2409],
        [-0.4816, -0.9464],
        [-0.0797, -1.1118],
        [ 0.6317,  1.6256]], device='cuda:0', dtype=torch.float64)
1.4725810089161704
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464],
         [43.6467, 16.7464]],

        [[45.6467, 18.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5647,  0.3784],
        [-0.2732,  1.9281],
        [ 0.6007,  1.3679],
        [-0.5462, -0.7905],
        [-0.1909, -1.9873],
        [-0.0451,  1.8165],
        [ 0.2571,  1.5291],
        [ 0.0733, -1.9853]], device='cuda:0', dtype=torch.float64)
1.5224182218057223
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 18.2464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.3485,  0.8308],
        [ 0.1928, -0.8457],
        [ 1.0248,  0.6399],
        [-0.6368, -1.0907],
        [ 0.5500, -0.7153],
        [ 0.1164,  0.8900],
        [ 0.7548, -0.4607],
        [ 0.3402, -0.6187]], device='cuda:0', dtype=torch.float64)
1.4273661079732642
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464]],

        [[44.1467, 15.7464],
         [44.1467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.1467, 18.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [44.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.4699,  0.0088],
        [ 0.0157, -0.5623],
        [-0.9817, -0.8576],
        [-0.0292,  1.8382],
        [ 1.0855, -0.2426],
        [ 1.2400, -0.0693],
        [ 0.1287,  2.0960],
        [ 0.4682,  0.6220]], device='cuda:0', dtype=torch.float64)
1.2418420935423904
tensor([[[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2353,  1.8109],
        [-2.4926,  0.8836],
        [ 0.5131,  1.7685],
        [ 0.1207,  2.3182],
        [ 0.0250,  1.5216],
        [ 0.8258, -0.1325],
        [ 0.2427, -2.2139],
        [ 0.8699,  0.7128]], device='cuda:0', dtype=torch.float64)
1.2962613757800145
tensor([[[43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.3493, -0.9828],
        [ 0.4212,  0.5601],
        [ 0.6246,  0.0942],
        [ 0.9206,  0.1978],
        [-1.1775, -0.7936],
        [ 1.1325,  0.5163],
        [ 1.0755,  0.4424],
        [ 0.4115, -0.1502]], device='cuda:0', dtype=torch.float64)
1.315818776722793
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [44.1467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]],

        [[46.1467, 15.7464],
         [44.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.9248,  0.4684],
        [-1.5797, -0.3244],
        [ 0.5484, -0.2747],
        [ 0.4473, -0.3473],
        [ 0.7656, -0.6401],
        [ 0.2739, -0.6181],
        [ 0.1497,  0.8988],
        [-1.4584, -0.3484]], device='cuda:0', dtype=torch.float64)
1.8915958411106106
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.1467, 14.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[44.1467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1963, -1.3711],
        [ 0.9715, -0.1470],
        [-0.1629, -1.1479],
        [ 1.1079,  0.0497],
        [ 0.8208, -0.6367],
        [ 0.3589,  0.4038],
        [ 0.4368, -0.0099],
        [-1.9480,  0.6672]], device='cuda:0', dtype=torch.float64)
1.3678347008401364
tensor([[[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [46.1467, 16.2464],
         [44.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.9286, -0.7222],
        [-1.3647, -0.5354],
        [ 1.5438,  0.0920],
        [-0.0486,  1.1352],
        [ 0.2818,  1.5806],
        [-1.5234,  0.1005],
        [ 0.8792, -0.4274],
        [-0.1636,  1.9045]], device='cuda:0', dtype=torch.float64)
1.741733889910214
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 15.7464]],

        [[45.6467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6923, 15.2861]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6680,  1.0380],
        [-1.2161, -0.1519],
        [-1.5634,  0.1337],
        [-0.6831, -0.7319],
        [ 0.2661, -0.8986],
        [ 1.1679, -0.6122],
        [ 0.0587,  1.3518],
        [ 0.7236,  1.6627]], device='cuda:0', dtype=torch.float64)
1.696100848037295
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 18.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 17.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 18.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.4646, -0.6425],
        [ 1.1895,  0.4501],
        [ 1.0793,  0.5968],
        [-1.6416, -0.3192],
        [ 0.3262, -2.0231],
        [ 0.6816,  0.5384],
        [-1.9868,  0.5982],
        [ 0.6837, -0.8013]], device='cuda:0', dtype=torch.float64)
1.595339629983865
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.7942,  0.2582],
        [ 0.7508, -0.5348],
        [-1.1146, -0.6190],
        [ 0.2315,  0.1453],
        [ 0.3196, -1.8627],
        [ 0.1496,  1.9318],
        [ 0.2054, -0.2030],
        [ 0.1171, -0.2047]], device='cuda:0', dtype=torch.float64)
1.7691849849618748
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [44.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1899, -0.1013],
        [ 1.1779, -0.3438],
        [-0.8316, -0.9166],
        [-1.0687, -0.5259],
        [ 0.4147,  0.8892],
        [ 0.9259,  0.5919],
        [ 0.8358, -0.5450],
        [ 0.2483,  1.5049]], device='cuda:0', dtype=torch.float64)
1.466802458236757
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6189, -0.1032],
        [ 1.0569, -0.4886],
        [ 0.0185, -1.0230],
        [-2.1529,  0.5209],
        [ 0.2869, -1.1840],
        [ 0.3799,  1.4000],
        [ 0.3914,  1.7202],
        [-0.6373, -0.8396]], device='cuda:0', dtype=torch.float64)
1.5012470259453452
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861],
         [45.1467, 15.2464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.7543, -0.2390],
        [ 0.5280,  1.5957],
        [-0.0597, -2.1728],
        [ 0.4469,  1.4569],
        [ 0.4007, -0.0856],
        [ 1.1150,  0.6244],
        [-0.1829, -0.7944],
        [-1.7000,  0.0806]], device='cuda:0', dtype=torch.float64)
1.6508866593530356
tensor([[[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5109,  1.0771],
        [ 0.8530,  0.7815],
        [ 1.2161,  0.3085],
        [-1.3157, -0.3231],
        [-0.1283, -0.9785],
        [ 0.6626,  1.5909],
        [ 0.6887, -0.0526],
        [-1.6120, -0.1592]], device='cuda:0', dtype=torch.float64)
1.4867881687871416
tensor([[[45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6923, 15.2861]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[44.1467, 15.7464],
         [45.6467, 18.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0788, -1.1707],
        [ 1.6076, -0.0925],
        [ 0.4200,  0.8928],
        [-0.1925, -1.0112],
        [ 0.1243, -0.8615],
        [-1.9036,  0.1640],
        [ 0.4313,  0.6563],
        [ 0.6528,  0.9758]], device='cuda:0', dtype=torch.float64)
1.4330354576441005
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.7157, -1.0010],
        [ 1.1764,  0.5145],
        [ 0.0077,  0.0196],
        [ 0.3989,  0.4079],
        [ 0.5924,  1.1078],
        [ 0.2356,  1.5616],
        [ 0.7137,  0.6536],
        [-1.7914,  0.4221]], device='cuda:0', dtype=torch.float64)
1.510340588545049
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]],

        [[45.6467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2587, -1.2099],
        [-2.7912,  1.2227],
        [-1.3066, -0.4573],
        [ 0.6272,  1.6064],
        [ 0.0995,  0.8898],
        [ 0.0911, -0.8655],
        [-1.2814, -0.5243],
        [-1.1515, -0.6006]], device='cuda:0', dtype=torch.float64)
1.9620596532016645
tensor([[[44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 18.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.4563, -0.2619],
        [ 0.9489,  0.6530],
        [ 0.7182,  0.9552],
        [ 0.7963,  0.2085],
        [-0.0258, -2.1354],
        [-3.0976,  1.6008],
        [ 0.2029, -2.0685],
        [ 0.2445,  1.5988]], device='cuda:0', dtype=torch.float64)
1.464413230074461
tensor([[[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [46.1467, 16.2464]],

        [[44.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6349, -0.3669],
        [ 0.1153, -0.4636],
        [ 0.5684,  0.2089],
        [ 0.2928, -1.1371],
        [ 1.4798, -0.0623],
        [ 0.8548,  0.9069],
        [ 0.0712, -0.7301],
        [-1.5867, -0.2748]], device='cuda:0', dtype=torch.float64)
1.2819278763465034
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4154, -0.1714],
        [ 1.3755,  0.0641],
        [ 1.2118, -0.5692],
        [ 0.2016, -0.3134],
        [ 0.6691,  0.8458],
        [-1.4494, -0.3070],
        [ 0.6145,  0.7459],
        [ 0.4940,  1.4894]], device='cuda:0', dtype=torch.float64)
1.1999778250140667
tensor([[[45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 14.7464],
         [45.1467, 15.2464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.6467, 15.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7287,  1.8011],
        [ 1.3237,  0.0366],
        [ 0.0234, -1.8016],
        [-0.0520,  1.2022],
        [-1.3041, -0.0507],
        [ 0.5314, -0.7674],
        [ 0.3329,  0.3395],
        [ 0.4163, -2.2715]], device='cuda:0', dtype=torch.float64)
1.3765052066925403
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861],
         [45.1467, 15.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9809, -0.5169],
        [-0.0357, -0.0468],
        [-1.3567, -0.6268],
        [ 0.6025,  1.2551],
        [-2.5004,  0.8991],
        [ 0.0736, -1.3476],
        [ 0.6805,  1.3299],
        [ 0.7266,  0.4384]], device='cuda:0', dtype=torch.float64)
1.5613196672845358
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[44.1467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.6922, -0.2569],
        [ 0.0535,  0.7366],
        [-0.3618, -0.8477],
        [-1.1013, -0.6623],
        [-0.1561, -0.5772],
        [ 0.2303,  0.5107],
        [ 0.6116, -0.6057],
        [-0.7908, -0.6121]], device='cuda:0', dtype=torch.float64)
2.052553792832495
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]],

        [[45.1467, 18.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9557, -0.3818],
        [-0.5562, -0.6975],
        [ 1.1649, -0.5652],
        [ 1.2624,  0.1979],
        [ 0.9125,  0.4996],
        [-1.2433, -0.2102],
        [ 0.4703, -0.3607],
        [ 0.4877,  0.0215]], device='cuda:0', dtype=torch.float64)
1.2744202896947983
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.7464],
         [44.1467, 15.2464],
         [45.1467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6026,  1.2552],
        [-1.7934, -0.2743],
        [ 0.8535,  0.1716],
        [-1.5982, -0.1224],
        [-0.1846, -1.0245],
        [ 0.2074,  1.6705],
        [-0.1452, -1.1354],
        [ 0.1573,  1.4415]], device='cuda:0', dtype=torch.float64)
1.7376324764237
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6923, 15.2861],
         [45.1467, 15.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0972,  0.7250],
        [-2.2200,  0.7616],
        [-3.0267,  1.5960],
        [ 0.8065,  0.0900],
        [ 0.0671, -0.6565],
        [-1.5661, -0.3838],
        [-1.8102,  0.3626],
        [ 0.3379, -1.4480]], device='cuda:0', dtype=torch.float64)
1.9248718896880403
tensor([[[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3497,  1.8072],
        [-0.0160,  1.8031],
        [-0.0639, -0.0390],
        [ 0.0350, -0.8975],
        [-0.0319, -1.1338],
        [ 0.0360,  2.0775],
        [ 0.7744,  0.1415],
        [ 0.3492, -1.6301]], device='cuda:0', dtype=torch.float64)
1.4322558393120812
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6923, 15.2861],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.1336, -1.8095],
        [-0.1308, -1.9466],
        [ 1.0044, -0.5348],
        [-1.3240, -0.6212],
        [-0.0150,  1.2157],
        [-0.0421, -0.5755],
        [ 0.0421, -2.1199],
        [ 0.2747,  0.4434]], device='cuda:0', dtype=torch.float64)
1.679509134432481
tensor([[[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [43.6467, 16.2464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8230,  0.5090],
        [ 0.7968,  1.0509],
        [-2.6532,  1.0239],
        [-1.6012, -0.0896],
        [ 0.5594,  1.5433],
        [ 0.2794,  0.0318],
        [ 0.4470,  0.4836],
        [ 0.2666,  0.6234]], device='cuda:0', dtype=torch.float64)
1.533510421899266
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.9485,  0.5048],
        [ 0.7306,  0.9289],
        [ 0.2828,  0.1559],
        [-1.8956,  0.3008],
        [ 0.1304,  2.2983],
        [ 0.5315,  1.4566],
        [ 1.2234, -0.3183],
        [ 0.4221,  0.2910]], device='cuda:0', dtype=torch.float64)
1.4312308397464863
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2060,  1.6039],
        [-1.4721, -0.3614],
        [ 0.5123, -0.4180],
        [ 0.2329, -2.1527],
        [ 0.4469, -0.6926],
        [ 0.6534, -0.5045],
        [ 0.4082, -0.3494],
        [-0.6668, -0.5152]], device='cuda:0', dtype=torch.float64)
1.5524806716072628
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [46.1467, 15.7464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.7635, -0.2681],
        [ 1.1032, -0.4201],
        [ 1.4439, -0.1337],
        [ 0.4893,  0.8804],
        [ 0.8126,  0.7748],
        [-0.0606, -0.0469],
        [-0.5869, -0.3901],
        [-2.1625,  0.6420]], device='cuda:0', dtype=torch.float64)
1.5346189149784797
tensor([[[44.6467, 15.2464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[44.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.0691, -0.4421],
        [ 0.5666,  1.6553],
        [ 0.1528,  1.4510],
        [ 0.2444,  1.9492],
        [ 0.2714, -0.8416],
        [ 0.2838,  1.5211],
        [ 0.0343,  1.2720],
        [-0.0230, -1.1239]], device='cuda:0', dtype=torch.float64)
1.5315383191495728

Validation DataLoader 0:  40%|####      | 165/412 [00:34<00:52,  4.72it/s][AEpoch 0:  93%|#########3| 3467/3714 [30:49<02:11,  1.87it/s, loss=3.54, v_num=0, train/loss_step=3.350, train/acc_step=0.000]tensor([[[44.1467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 18.2464],
         [45.1467, 18.7464]],

        [[45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.3750, -0.4401],
        [ 1.3571, -0.3327],
        [ 0.9337,  0.2153],
        [ 0.1284,  2.2687],
        [-0.5076, -0.8170],
        [ 0.5253,  0.6851],
        [-0.4814, -0.9956],
        [ 0.1672, -0.1642]], device='cuda:0', dtype=torch.float64)
1.6481413465896488
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.1550, 17.2484],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6923, 15.2861]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.5019,  0.0872],
        [ 0.3979,  0.6690],
        [ 0.0657,  0.6553],
        [-0.3651, -0.6587],
        [ 1.5909, -0.0505],
        [-2.8081,  1.3225],
        [ 1.5124,  0.2458],
        [ 0.4999,  0.2643]], device='cuda:0', dtype=torch.float64)
1.489566311235
tensor([[[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 18.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464],
         [45.1467, 18.2464]],

        [[45.6923, 15.2861],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9461,  0.3793],
        [ 1.2275,  0.3487],
        [ 0.2721,  0.4466],
        [ 0.1490,  1.7652],
        [-0.5831, -0.5726],
        [ 0.1528,  0.9012],
        [ 0.4491, -0.2734],
        [ 0.4675,  2.0996]], device='cuda:0', dtype=torch.float64)
1.2810296093987927
tensor([[[45.6467, 15.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 18.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8055,  0.8308],
        [ 0.7563, -0.5334],
        [-0.6223, -0.7835],
        [-1.7055,  0.3503],
        [ 1.4812,  0.1258],
        [ 0.7945,  1.7901],
        [ 0.2293,  0.5090],
        [ 0.0039, -0.6622]], device='cuda:0', dtype=torch.float64)
1.3277621248096227
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [44.6467, 15.7464],
         [43.6467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 18.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1621, -2.1094],
        [ 0.2095, -1.9754],
        [-1.4113, -0.5907],
        [ 0.4145,  0.5098],
        [ 1.5941,  0.0804],
        [-2.9124,  1.4091],
        [-0.4018, -1.0175],
        [ 0.3334,  0.9359]], device='cuda:0', dtype=torch.float64)
1.568183213850485
tensor([[[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 18.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.6896, -0.3214],
        [ 0.9948, -0.4093],
        [ 0.7971, -0.2918],
        [ 1.1198, -0.1273],
        [ 0.3794, -1.5029],
        [ 0.5615,  0.8994],
        [ 1.4595,  0.0791],
        [ 1.1086,  0.1059]], device='cuda:0', dtype=torch.float64)
1.0800297675392108
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.1965, -0.3511],
        [ 0.9433, -0.3815],
        [ 0.7854,  1.8999],
        [ 0.4697,  2.0084],
        [-0.1840, -1.1069],
        [-0.3335, -1.9017],
        [ 0.0151, -1.7733],
        [-1.9210,  0.1788]], device='cuda:0', dtype=torch.float64)
1.406107440564557
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2379, -0.0261],
        [ 0.4674,  1.1714],
        [ 0.4145, -1.6895],
        [ 0.2033,  1.7097],
        [-0.5695, -0.5797],
        [ 0.7044, -0.2073],
        [ 0.4336, -0.0093],
        [ 0.7768,  1.8505]], device='cuda:0', dtype=torch.float64)
1.1473693421220519
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 18.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5496, -0.8646],
        [ 0.8011, -0.5118],
        [-1.5954,  0.1824],
        [ 0.6876, -0.2985],
        [ 0.4590, -1.3780],
        [-1.5148, -0.5360],
        [-1.1351, -0.9245],
        [ 0.3216, -2.1433]], device='cuda:0', dtype=torch.float64)
1.74197395297562
tensor([[[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.0076,  0.3521],
        [ 1.0436, -0.1651],
        [ 0.0772, -1.3558],
        [ 0.5185,  0.1469],
        [ 0.4122,  0.3526],
        [ 0.2400,  0.1628],
        [-1.3909, -0.2249],
        [ 1.2952, -0.0938]], device='cuda:0', dtype=torch.float64)
1.465445222896654
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[45.6467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0540, -1.1589],
        [ 0.8366,  0.4535],
        [ 1.0153,  0.4084],
        [-2.7191,  1.1655],
        [-1.8989,  0.2848],
        [ 0.8326,  0.0990],
        [ 0.4673, -0.7026],
        [ 0.2964, -1.1321]], device='cuda:0', dtype=torch.float64)
1.5161155886289523
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3195,  0.2155],
        [ 1.3241, -0.3048],
        [-1.4471, -0.3084],
        [ 0.0078, -0.8557],
        [ 0.7716, -0.3680],
        [ 0.0604, -0.6134],
        [ 0.2184,  0.1767],
        [ 0.4408, -0.4293]], device='cuda:0', dtype=torch.float64)
1.4323882956374732
tensor([[[44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6923, 15.2861],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 18.2464]],

        [[45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.5448, -0.3403],
        [ 0.2583,  1.0757],
        [ 0.9240,  0.5417],
        [ 0.3944, -1.3164],
        [ 0.2799,  0.9025],
        [ 0.3821,  1.4384],
        [-2.0215,  0.5197],
        [-1.4698, -0.3628]], device='cuda:0', dtype=torch.float64)
1.7576850512616307
tensor([[[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 15.7464]],

        [[45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2612,  0.0154],
        [ 1.1441,  0.0565],
        [ 0.3177,  1.4932],
        [ 1.0436, -0.5080],
        [ 0.5586,  1.2899],
        [ 0.8820,  0.9510],
        [ 0.2606, -0.1958],
        [ 1.5432,  0.0150]], device='cuda:0', dtype=torch.float64)
0.7140404950871829
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [45.6467, 16.7464],
         [45.6467, 18.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861]],

        [[44.1467, 15.7464],
         [44.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8822,  0.8485],
        [ 0.2168,  2.0732],
        [-1.9172,  0.3895],
        [ 0.9602,  0.5492],
        [ 0.8548,  0.8657],
        [ 1.3694, -0.2210],
        [ 1.6358,  0.0384],
        [ 0.2658,  1.1853]], device='cuda:0', dtype=torch.float64)
1.0361351072768685
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.1467, 14.7464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6923, 15.2861]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.8094, -0.5763],
        [ 1.0248,  0.6393],
        [-0.0421, -1.7659],
        [ 0.4406, -1.3350],
        [ 0.2898,  1.4159],
        [ 0.5283, -0.3726],
        [-1.6477, -0.0696],
        [ 0.1671, -1.7980]], device='cuda:0', dtype=torch.float64)
1.6659662915927256
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[44.1467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0460, -2.0241],
        [-0.3252, -0.7085],
        [ 0.3267,  0.8746],
        [ 1.3712,  0.3401],
        [-1.7566, -0.1106],
        [ 0.7260,  0.2052],
        [-0.3196, -0.5576],
        [-0.6480, -0.8484]], device='cuda:0', dtype=torch.float64)
1.6886231446065745
tensor([[[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[44.6467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6923, 15.2861],
         [45.5636, 14.6820]],

        [[45.1467, 13.7464],
         [45.6923, 15.2861],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6840, -0.8009],
        [ 0.5741,  1.4526],
        [ 1.1684,  0.2700],
        [ 0.4373,  0.9033],
        [ 0.4015, -1.0338],
        [-0.2716, -0.8732],
        [ 0.1961,  0.1988],
        [ 0.3452, -0.4687]], device='cuda:0', dtype=torch.float64)
1.2170188340973225
tensor([[[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8851,  0.1640],
        [ 0.9858,  0.4065],
        [ 1.1270,  0.2297],
        [-0.5916, -0.7739],
        [-0.0087, -0.9110],
        [ 0.2498, -0.8049],
        [ 0.6843,  1.6064],
        [ 0.6146, -0.2671]], device='cuda:0', dtype=torch.float64)
1.1228231049497208
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [45.1467, 14.7464]],

        [[43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [45.6467, 16.2464],
         [43.6467, 16.2464]],

        [[45.1467, 18.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.1467, 18.2464]],

        [[45.1467, 18.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 18.2464]],

        [[45.6467, 18.2464],
         [45.1467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [44.6467, 15.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2619, -1.4199],
        [-1.1837, -0.7756],
        [ 1.3203, -0.2851],
        [-1.0814, -0.5822],
        [ 0.3910,  2.0385],
        [ 0.3425,  0.9565],
        [ 0.5397,  1.6991],
        [-0.0156, -1.9242]], device='cuda:0', dtype=torch.float64)
1.527468456021579
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 17.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.1764, -1.7884],
        [ 0.7864, -0.5038],
        [-0.7069, -0.8139],
        [ 0.5140,  1.0992],
        [ 0.5624,  0.4267],
        [ 1.0470, -0.2649],
        [-0.3181, -0.9682],
        [ 1.1657,  0.0913]], device='cuda:0', dtype=torch.float64)
1.2548884348800082
tensor([[[43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 14.7464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.1895, -0.5758],
        [ 0.2348,  1.1153],
        [-2.0974,  0.4708],
        [ 0.3832,  0.6522],
        [ 0.8048,  0.2202],
        [-2.5414,  0.9092],
        [ 0.7540, -0.5165],
        [-2.5032,  0.5940]], device='cuda:0', dtype=torch.float64)
1.7478847500948727
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464],
         [45.1467, 14.7464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 17.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.1467, 15.7464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2728, -0.4841],
        [ 0.8325, -0.0666],
        [-0.1125, -1.1462],
        [-1.6355, -0.2163],
        [ 0.8697,  0.1343],
        [ 0.2658, -2.0773],
        [ 1.2120,  0.5263],
        [ 1.2677,  0.0202]], device='cuda:0', dtype=torch.float64)
1.279153216723203
tensor([[[45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3741, -1.9426],
        [ 0.6778, -0.0117],
        [ 0.8149, -0.0402],
        [ 0.6883, -0.5226],
        [-1.9690,  0.4850],
        [-1.7887, -0.2351],
        [ 0.2881, -0.4209],
        [ 0.0322, -2.0290]], device='cuda:0', dtype=torch.float64)
1.6008678612805578
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3077,  0.8573],
        [ 0.2487, -2.0081],
        [-1.8178, -0.1640],
        [-0.5135, -0.8012],
        [ 0.1650, -1.8897],
        [ 0.9142,  0.8356],
        [ 1.2119, -0.3600],
        [ 0.2741,  0.9094]], device='cuda:0', dtype=torch.float64)
1.4208088052240406
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 18.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.2849, -1.1704],
        [ 0.2860, -0.8220],
        [ 0.3133,  0.3299],
        [ 1.2350, -0.4711],
        [-1.4748,  0.0749],
        [ 0.3862,  0.4126],
        [-1.9603,  0.6286],
        [-0.0395, -0.0831]], device='cuda:0', dtype=torch.float64)
1.7674416207546
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.2464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 14.7464],
         [43.6467, 16.7464]],

        [[45.6467, 18.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0196,  0.3602],
        [ 0.8443,  1.8964],
        [ 0.2617, -0.2138],
        [ 1.2910, -0.2111],
        [ 0.4268, -1.7093],
        [ 0.7928,  0.9709],
        [-1.3657,  0.0113],
        [ 0.4533,  1.8013]], device='cuda:0', dtype=torch.float64)
1.1771167879095588
tensor([[[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6923, 15.2861],
         [44.6467, 15.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.6923, 15.2861]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.9217,  0.6520],
        [-1.8755, -0.2498],
        [-1.6329, -0.2217],
        [-1.7305, -0.0412],
        [ 0.6534, -0.0325],
        [-1.6792, -0.3577],
        [ 0.1061, -0.5649],
        [ 0.0727, -0.7497]], device='cuda:0', dtype=torch.float64)
2.114006515061453
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5615,  0.8991],
        [-1.8797, -0.1668],
        [ 1.2831, -0.2486],
        [-1.7124, -0.1060],
        [ 0.7976, -0.0512],
        [-0.9108, -0.7205],
        [ 0.3159, -1.7946],
        [ 0.8858,  0.7071]], device='cuda:0', dtype=torch.float64)
1.6023881600082963
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.1467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 15.7464]],

        [[45.6467, 15.7464],
         [44.1467, 15.2464],
         [45.1467, 17.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 15.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [44.6467, 15.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2901, -0.4317],
        [ 0.7783, -0.6279],
        [ 0.7755, -0.3031],
        [ 0.3986, -1.1051],
        [-0.0368,  1.8173],
        [ 0.1885,  1.2404],
        [-0.5952, -1.1160],
        [-2.3201,  0.8836]], device='cuda:0', dtype=torch.float64)
1.5200125808706102
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.1467, 13.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.1980,  2.0281],
        [ 0.8885,  0.1445],
        [ 0.6074,  1.3838],
        [ 0.5459,  1.3662],
        [ 0.5988, -0.4555],
        [ 0.5557, -0.2249],
        [-1.5464, -0.1797],
        [ 0.4403,  1.5223]], device='cuda:0', dtype=torch.float64)
1.2688068506840975
tensor([[[44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [44.6467, 15.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[45.1467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1320, -1.0486],
        [ 0.2017, -1.4777],
        [ 0.7730,  0.2634],
        [ 1.5038,  0.1995],
        [-2.4780,  0.9749],
        [-1.7870,  0.1563],
        [-0.4825, -0.6029],
        [ 0.6799,  0.3670]], device='cuda:0', dtype=torch.float64)
1.6203677121566225
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.1467, 18.2464],
         [44.1467, 15.2464]],

        [[45.1467, 14.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.4345, -0.3536],
        [ 0.3242, -1.0661],
        [-1.5707,  0.0069],
        [ 0.2327,  0.1568],
        [ 0.0832, -0.5254],
        [ 1.0695,  0.5523],
        [ 0.2739, -0.4845],
        [-1.9476,  0.3481]], device='cuda:0', dtype=torch.float64)
1.9374513170434917
tensor([[[45.1467, 13.7464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.7873, -0.2346],
        [-0.6582, -0.7961],
        [ 0.4066,  1.6877],
        [ 0.6345, -0.3576],
        [ 0.0604,  0.7263],
        [ 0.6539, -0.2231],
        [ 1.1167, -0.2743],
        [ 0.9699,  0.2874]], device='cuda:0', dtype=torch.float64)
1.45805561877709
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464],
         [44.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.5185,  0.1404],
        [-0.6951, -1.0088],
        [ 0.8056, -0.1024],
        [ 0.4041, -1.8578],
        [ 0.1078, -0.8528],
        [ 0.6575,  1.0334],
        [-2.5322,  0.7367],
        [ 0.3398,  1.1574]], device='cuda:0', dtype=torch.float64)
1.7044903078925133
tensor([[[44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [44.6467, 15.2464],
         [45.1467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.6923, 15.2861],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7413, -0.1933],
        [ 0.4195,  1.1469],
        [-0.0704, -1.8591],
        [-0.4671, -1.1784],
        [ 1.0858, -0.5103],
        [ 0.6900,  1.0074],
        [ 1.0694, -0.4202],
        [-2.0983,  0.6113]], device='cuda:0', dtype=torch.float64)
1.4306850051749982
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2939, -0.0050],
        [-2.4225,  0.8324],
        [-0.2699, -1.1090],
        [ 0.2247, -1.8269],
        [ 0.7460,  0.0528],
        [-0.2056, -0.6735],
        [ 0.0786,  0.8095],
        [ 0.4784,  1.4222]], device='cuda:0', dtype=torch.float64)
1.5145685929567683
tensor([[[45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3278, -0.2595],
        [-1.6636,  0.0503],
        [ 0.8095, -0.5486],
        [ 0.4555,  1.8407],
        [ 1.3046, -0.1728],
        [-1.6046, -0.3447],
        [-0.3246, -0.9615],
        [-0.3410, -1.9886]], device='cuda:0', dtype=torch.float64)
1.5944537901232985
tensor([[[45.1467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3744,  0.3337],
        [ 0.9426,  0.5643],
        [ 0.0288, -0.1859],
        [ 0.2418, -1.9500],
        [ 1.2898, -0.1074],
        [ 0.7820, -0.4441],
        [-1.6918, -0.1107],
        [-0.1533,  1.9367]], device='cuda:0', dtype=torch.float64)
1.4367197259426137
tensor([[[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.1467, 14.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 15.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2985, -2.1270],
        [ 0.3906,  0.4364],
        [ 0.0106, -0.0370],
        [-2.5259,  0.7313],
        [ 0.9931, -0.0937],
        [-0.9014, -0.1810],
        [-1.1481, -0.8521],
        [-1.7695, -0.1163]], device='cuda:0', dtype=torch.float64)
1.951760072559262
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7576,  0.6289],
        [ 0.8211, -0.2045],
        [-0.2386, -0.9094],
        [-0.8674, -0.2147],
        [-1.4959,  0.0518],
        [ 1.4642,  0.1976],
        [ 0.8470, -0.1771],
        [ 1.4760,  0.1407]], device='cuda:0', dtype=torch.float64)
1.3657881482668264
tensor([[[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8232,  1.7680],
        [ 0.4958, -0.7730],
        [ 1.4721,  0.1660],
        [ 0.1921,  1.7849],
        [ 0.6808,  1.9540],
        [ 1.2325, -0.0845],
        [ 0.8601,  1.8576],
        [ 0.6389,  0.3116]], device='cuda:0', dtype=torch.float64)
0.8287677453341709
tensor([[[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.7464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.4804, -0.4992],
        [-1.9541,  0.2501],
        [ 0.2685, -0.6188],
        [-1.3597, -0.4176],
        [-1.5215,  0.1636],
        [ 0.7439,  1.9003],
        [-0.0103, -2.0759],
        [-0.1562, -2.0442]], device='cuda:0', dtype=torch.float64)
2.03246589030413
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.1467, 18.7464],
         [45.1467, 17.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464]],

        [[45.6923, 15.2861],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0122, -2.0695],
        [ 0.3229, -1.9659],
        [-0.0486, -1.7531],
        [-1.1569, -0.6343],
        [ 1.3721, -0.1725],
        [ 1.1045,  0.0765],
        [ 0.8423, -0.2040],
        [ 0.6539, -0.5583]], device='cuda:0', dtype=torch.float64)
1.2146422406087134
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 18.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.4378,  0.9577],
        [ 0.1019,  0.9617],
        [ 0.7629, -0.6401],
        [ 0.8814,  0.6300],
        [ 0.3775, -1.8609],
        [-1.2964, -0.5840],
        [ 0.8309, -0.0776],
        [ 0.0045, -0.8692]], device='cuda:0', dtype=torch.float64)
1.6167254401079556
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8217,  0.1956],
        [-1.3029, -0.5416],
        [ 0.0059, -1.8457],
        [ 0.9300, -0.0400],
        [-1.1213, -0.4517],
        [ 0.2719,  0.9835],
        [ 1.0201, -0.3946],
        [-1.9672,  0.3689]], device='cuda:0', dtype=torch.float64)
1.6869540156766307
tensor([[[44.6467, 15.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1819, 19.2545]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [44.1467, 15.2464]],

        [[44.1467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.8795, -0.2398],
        [ 0.4814,  0.2283],
        [ 0.3095,  0.0713],
        [ 0.5824,  0.9372],
        [ 0.4585,  0.2037],
        [ 0.0776,  1.3857],
        [ 0.5439, -0.2573],
        [ 0.5934,  1.6069]], device='cuda:0', dtype=torch.float64)
1.3905810020593736
tensor([[[45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 18.2464]],

        [[45.1467, 14.7464],
         [45.6923, 15.2861],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.5760, -0.0484],
        [ 0.6004, -0.6757],
        [ 0.6134,  1.9090],
        [ 1.1323, -0.4398],
        [-0.9650, -0.4122],
        [ 0.0775, -1.0999],
        [-2.9417,  1.5079],
        [ 0.6017,  0.5298]], device='cuda:0', dtype=torch.float64)
1.59345033023571
tensor([[[45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [43.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [44.6467, 15.2464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.4415, -0.7931],
        [ 1.2960, -0.1887],
        [ 0.2051,  0.6392],
        [ 0.1411,  2.1904],
        [ 0.2250,  0.1289],
        [ 0.9349, -0.0946],
        [ 0.2985, -1.1368],
        [ 0.4492,  1.2462]], device='cuda:0', dtype=torch.float64)
1.202862299922518
tensor([[[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 15.7464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.7905,  0.0109],
        [ 0.5968,  0.3144],
        [ 0.3635, -0.7926],
        [ 0.1290, -0.8813],
        [ 0.2242,  0.2339],
        [ 0.0177,  1.5897],
        [ 0.3513, -0.6520],
        [ 0.6412, -0.0807]], device='cuda:0', dtype=torch.float64)
1.4882342499768932
tensor([[[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 18.7464]],

        [[44.6467, 15.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.4639, -0.3470],
        [ 0.4640,  1.6976],
        [ 0.1460, -1.2817],
        [ 0.5256, -0.7553],
        [ 0.7845, -0.4852],
        [-0.0224, -0.9101],
        [-1.4831, -0.3581],
        [ 0.1501,  1.9317]], device='cuda:0', dtype=torch.float64)
1.7232334199845272
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 18.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.2858,  0.6551],
        [ 0.2683,  0.6579],
        [ 1.3049,  0.2934],
        [ 0.5913,  1.4937],
        [ 0.5469,  1.2317],
        [-0.4578, -0.8245],
        [-1.4989, -0.1615],
        [ 1.1179, -0.0313]], device='cuda:0', dtype=torch.float64)
1.4839127578567441
tensor([[[45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 17.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1115, -0.9949],
        [-1.0449, -0.6202],
        [ 0.5624,  1.6871],
        [ 0.2863, -1.3631],
        [-0.2248, -0.5464],
        [ 0.2723,  1.3345],
        [ 0.8551,  0.9352],
        [ 0.2241, -0.8758]], device='cuda:0', dtype=torch.float64)
1.5329718411633577
tensor([[[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 15.7464],
         [45.1467, 18.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [44.1467, 15.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6923, 15.2861],
         [44.1467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [44.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5138, -0.2894],
        [-0.5108, -0.7561],
        [-1.3745, -0.3989],
        [ 1.1292, -0.1683],
        [-0.2416, -1.9764],
        [ 0.5760, -0.8429],
        [ 0.3617, -0.7494],
        [-1.2141, -0.2266]], device='cuda:0', dtype=torch.float64)
1.7649130382395253
tensor([[[45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.2464]],

        [[43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [44.6467, 15.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3716,  0.5595],
        [-0.9232, -0.4267],
        [-0.1460, -0.5842],
        [ 0.0519,  0.7399],
        [ 0.0907,  0.8896],
        [ 1.2138,  0.4537],
        [-1.5543,  0.2105],
        [ 0.4065,  0.4934]], device='cuda:0', dtype=torch.float64)
1.693816422189689
tensor([[[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 18.2464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.5585, -0.3415],
        [ 0.5716,  1.3820],
        [ 0.5538, -0.0280],
        [-2.4988,  0.7018],
        [-2.3507,  0.7620],
        [ 0.7029,  1.8922],
        [ 0.1517,  0.5968],
        [ 0.2715,  0.4055]], device='cuda:0', dtype=torch.float64)
1.5666471070457448
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 15.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.2464],
         [45.6467, 18.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8762, -0.4298],
        [ 0.3298,  1.5632],
        [ 0.3301, -1.3335],
        [-1.9317,  0.5119],
        [ 0.3625,  1.4681],
        [-0.0309,  1.1269],
        [ 0.1492,  1.1741],
        [-1.0119, -0.2839]], device='cuda:0', dtype=torch.float64)
1.613266973964321
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464]],

        [[43.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [44.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7377, -0.3257],
        [ 0.6304, -0.4825],
        [ 0.1907, -0.9537],
        [-1.3139, -0.0599],
        [ 0.7343,  0.3423],
        [-0.4568, -0.8937],
        [ 0.6318,  1.6316],
        [ 0.6032, -1.4348]], device='cuda:0', dtype=torch.float64)
1.554764972295585
tensor([[[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4126,  1.4759],
        [-0.5680, -0.7953],
        [ 0.1199, -0.8358],
        [ 1.0041, -0.1075],
        [ 0.8295,  0.7886],
        [-3.1119,  1.6124],
        [ 0.2589,  0.2536],
        [ 0.4102,  1.7095]], device='cuda:0', dtype=torch.float64)
1.3814898483167337
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.8227, -0.0278],
        [ 0.0311, -0.0109],
        [ 0.3366, -0.4593],
        [ 0.1449,  0.5894],
        [ 0.3129, -1.8271],
        [ 0.6241,  0.1413],
        [ 1.4582,  0.2279],
        [ 0.6317,  0.4914]], device='cuda:0', dtype=torch.float64)
1.4268089161151032
tensor([[[45.6467, 18.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [44.1467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.6017, -0.2126],
        [ 0.2026,  0.1925],
        [-0.9503, -0.4839],
        [ 0.2714,  0.2802],
        [ 0.2768, -2.1762],
        [ 0.4438, -1.8988],
        [-0.1232, -1.9639],
        [ 0.8515,  0.9015]], device='cuda:0', dtype=torch.float64)
1.697348083473495
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 18.7464]],

        [[43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.9677,  0.4465],
        [-0.2346, -0.9172],
        [ 0.7121,  0.5102],
        [ 0.2729, -2.0365],
        [ 0.3805, -2.2261],
        [ 0.5404,  1.6272],
        [ 0.9458, -0.4537],
        [-0.0056, -0.9040]], device='cuda:0', dtype=torch.float64)
1.427717178486946
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 14.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.1467, 15.7464]],

        [[45.6467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6923,  0.2333],
        [-1.9550,  0.2538],
        [ 0.4529, -0.7133],
        [ 1.0429,  0.0356],
        [ 0.7163,  0.1404],
        [-1.8334, -0.0592],
        [ 0.7580,  0.5068],
        [-0.6819, -0.9129]], device='cuda:0', dtype=torch.float64)
1.602733778997619
tensor([[[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.2464],
         [45.1467, 18.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.7464],
         [45.6467, 17.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1791,  1.0967],
        [-0.0097,  1.3503],
        [ 0.6332,  0.8974],
        [ 0.4124,  1.5535],
        [ 0.4353, -0.3952],
        [ 0.7888,  0.2542],
        [-1.5804, -0.2632],
        [-1.0930, -0.8093]], device='cuda:0', dtype=torch.float64)
1.612090923958759
tensor([[[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.1467, 14.7464],
         [43.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 18.7464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [44.6467, 15.7464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3644, -1.9115],
        [ 0.0949, -1.0041],
        [-0.3103, -2.0211],
        [ 0.9405,  0.0988],
        [-1.5971,  0.1452],
        [ 0.7750,  0.9201],
        [ 0.6347, -0.7891],
        [ 0.8783,  0.6981]], device='cuda:0', dtype=torch.float64)
1.3946147447913093
tensor([[[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7238, -0.6130],
        [-2.4771,  0.8726],
        [-0.2542, -0.9737],
        [ 0.5439,  0.3583],
        [ 0.2641, -1.3743],
        [ 0.2209, -0.1570],
        [-1.4457, -0.3507],
        [ 0.4210, -1.3612]], device='cuda:0', dtype=torch.float64)
1.6936524567362619
tensor([[[45.1467, 13.7464],
         [46.1467, 16.7464],
         [44.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [44.1467, 15.7464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4056,  0.0520],
        [-1.3190, -0.3246],
        [-2.9018,  1.4224],
        [-1.7368,  0.0253],
        [ 0.7542, -0.4814],
        [ 0.3926, -1.2342],
        [ 0.2086, -1.4830],
        [ 0.3800, -0.2072]], device='cuda:0', dtype=torch.float64)
1.8196774965802542
tensor([[[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.6467, 16.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3422,  0.4247],
        [-0.1657,  1.9991],
        [ 0.0903,  1.0081],
        [ 0.6197,  0.5910],
        [ 0.1035,  1.0249],
        [ 0.7691,  0.6656],
        [ 0.7009,  0.5924],
        [ 0.4517, -0.1416]], device='cuda:0', dtype=torch.float64)
1.2095585750100435
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4185, -0.6337],
        [ 0.2181, -1.6759],
        [ 1.4073, -0.1484],
        [ 0.7272,  1.6576],
        [ 0.0547, -1.1249],
        [-0.0678, -2.0502],
        [ 0.0574,  1.3044],
        [-0.1276, -1.1010]], device='cuda:0', dtype=torch.float64)
1.4130935524257169
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 18.2464]],

        [[45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0866, -0.7757],
        [ 0.6733, -0.4694],
        [ 0.7675,  0.2969],
        [-1.0599, -0.5390],
        [ 0.0811,  1.5216],
        [ 0.1402, -0.9600],
        [-0.5377, -0.9790],
        [ 1.2806,  0.3585]], device='cuda:0', dtype=torch.float64)
1.6134666413284129
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9504,  0.7326],
        [ 0.0754,  0.6510],
        [-1.7794,  0.2114],
        [ 0.1949,  0.8492],
        [-0.3137, -0.7510],
        [ 0.6392, -0.4491],
        [-2.2438,  0.7845],
        [ 1.0820,  0.3007]], device='cuda:0', dtype=torch.float64)
1.5941870628556485
tensor([[[45.6467, 18.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.2464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2344, -1.3768],
        [ 0.3051, -1.1773],
        [ 0.3283,  1.9870],
        [-1.3394, -0.5913],
        [-1.8723,  0.0509],
        [ 0.3041,  0.5496],
        [ 1.1942,  0.1423],
        [-0.2891, -1.9171]], device='cuda:0', dtype=torch.float64)
1.6777367349590402
tensor([[[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 18.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 16.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6923, 15.2861]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6192, -0.3780],
        [-0.6523, -0.8616],
        [ 0.3343,  1.6114],
        [ 0.4369,  1.6074],
        [-1.7122, -0.1200],
        [ 0.8172,  1.7833],
        [ 0.4811, -0.3510],
        [ 1.2860, -0.1479]], device='cuda:0', dtype=torch.float64)
1.4018956856428633
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 14.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.0006, -0.3379],
        [ 0.1249, -0.5702],
        [ 0.2791,  1.1036],
        [ 0.5669,  0.5592],
        [ 0.3853, -0.7538],
        [-1.7829, -0.2992],
        [ 0.3122, -1.9537],
        [-1.1639, -0.9186]], device='cuda:0', dtype=torch.float64)
1.8697911290916083
tensor([[[45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[44.6467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5471,  1.4537],
        [ 0.8965,  0.5051],
        [-0.7134, -0.9291],
        [ 0.1837,  0.8175],
        [ 1.5843,  0.0318],
        [ 0.1465, -1.7739],
        [ 0.3990, -1.3454],
        [-0.1563, -0.9652]], device='cuda:0', dtype=torch.float64)
1.3757537877732309
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[45.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464]],

        [[45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6773,  0.9286],
        [ 0.0220,  1.5153],
        [-0.0158, -2.0486],
        [-0.6861, -0.7243],
        [ 1.0954, -0.3822],
        [-0.0137, -0.9385],
        [ 1.2759,  0.3993],
        [-0.6770, -0.9814]], device='cuda:0', dtype=torch.float64)
1.5204611743446583
tensor([[[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.4584, -0.2123],
        [ 0.1318,  1.0181],
        [ 0.6575,  1.0334],
        [ 0.1007,  1.9425],
        [ 0.2413, -2.1113],
        [-1.4516, -0.3829],
        [ 1.2414,  0.2221],
        [ 0.2692, -1.5565]], device='cuda:0', dtype=torch.float64)
1.5920336814181775
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 17.2464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]],

        [[45.6467, 18.2464],
         [45.1467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 18.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6507, -0.1669],
        [-2.8001,  1.2907],
        [-2.9721,  1.5043],
        [ 0.7487,  1.2895],
        [-1.4309, -0.3823],
        [ 0.0332,  1.5138],
        [ 1.1707, -0.2167],
        [ 0.5162,  1.5745]], device='cuda:0', dtype=torch.float64)
1.4951845702079756
tensor([[[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 16.7464],
         [44.1467, 15.2464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6923, 15.2861]],

        [[45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2841,  1.4662],
        [-2.0651,  0.5668],
        [ 1.0921,  0.1052],
        [ 0.1374,  1.3365],
        [ 0.8959, -0.3477],
        [-0.3886, -0.6407],
        [ 1.0688, -0.1703],
        [ 0.1321,  1.5285]], device='cuda:0', dtype=torch.float64)
1.4267794345919327
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.4521,  0.9200],
        [ 0.8903, -0.3015],
        [ 0.4514, -0.0801],
        [ 0.9709,  0.1663],
        [-0.0075, -0.0239],
        [ 1.3290,  0.0798],
        [ 0.0262, -1.8374],
        [ 0.0471,  1.2070]], device='cuda:0', dtype=torch.float64)
1.2078782929453147
tensor([[[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3207,  0.2097],
        [-1.1684, -0.9013],
        [ 0.1089, -1.3503],
        [ 0.2756, -2.2257],
        [ 0.2411,  0.1643],
        [-1.4650, -0.6417],
        [ 0.1803, -1.3999],
        [ 0.4692, -0.4077]], device='cuda:0', dtype=torch.float64)
1.6110056767498346
tensor([[[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [43.6467, 16.7464],
         [45.6467, 18.2464]],

        [[45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.6164, -1.1056],
        [ 0.4400, -0.4797],
        [ 0.8648, -0.2319],
        [ 0.4289,  1.3212],
        [ 0.1988,  1.7800],
        [ 0.8938, -0.4244],
        [ 0.2772, -0.8589],
        [-2.2012,  0.5826]], device='cuda:0', dtype=torch.float64)
1.4409108809162365
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [44.1467, 15.2464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2559, -2.2361],
        [ 0.1830, -1.7879],
        [-0.4832, -0.9286],
        [-1.5808, -0.0722],
        [ 0.2837,  0.4775],
        [-1.7805, -0.3674],
        [-1.2284, -0.4420],
        [ 0.2363,  1.0251]], device='cuda:0', dtype=torch.float64)
1.9931720479531196
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464]],

        [[45.1467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [44.6467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [44.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8808,  0.3423],
        [ 0.1042,  0.3456],
        [ 0.3110, -0.1877],
        [ 0.7908, -0.3690],
        [-0.3803, -1.9547],
        [ 0.9402,  0.2677],
        [-1.1156, -0.6559],
        [-1.3288, -0.3313]], device='cuda:0', dtype=torch.float64)
1.6992025467397998
tensor([[[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2732,  0.7768],
        [ 1.2651, -0.4199],
        [ 1.2850, -0.0652],
        [ 0.6945,  0.6896],
        [ 1.2351, -0.4881],
        [-1.8710, -0.2270],
        [ 0.2526,  0.3086],
        [-2.1352,  0.6848]], device='cuda:0', dtype=torch.float64)
1.4060252892502239
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6923, 15.2861]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.2338,  0.8003],
        [ 0.6521,  1.7857],
        [-1.9422,  0.3477],
        [ 0.3285,  0.9015],
        [ 0.1251,  2.0225],
        [ 0.1613,  0.3755],
        [ 0.0381,  0.9652],
        [ 0.1687, -1.9945]], device='cuda:0', dtype=torch.float64)
1.6240066573496035
tensor([[[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0083, -0.6674],
        [ 1.1666, -0.2571],
        [-1.9506,  0.5018],
        [-1.1168, -0.8611],
        [ 0.7618,  1.2702],
        [ 0.4268,  0.0508],
        [ 0.4965, -0.4250],
        [-1.2833, -0.6100]], device='cuda:0', dtype=torch.float64)
1.6957171653982077
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6923, 15.2861],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 17.7464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.3857, -0.4163],
        [ 0.3320,  1.8060],
        [ 0.1773, -0.3948],
        [ 1.0243, -0.4645],
        [ 0.1875,  0.3411],
        [ 0.0241,  1.3513],
        [ 0.4592,  0.4079],
        [ 0.1721,  0.6811]], device='cuda:0', dtype=torch.float64)
1.4450535648734326
tensor([[[45.1467, 18.2464],
         [46.1467, 16.2464],
         [45.1819, 19.2545],
         [45.1467, 18.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464]],

        [[45.6467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0442,  1.2617],
        [-1.8170,  0.0850],
        [-2.6267,  0.8932],
        [-0.4496, -1.0490],
        [ 0.4378,  1.3371],
        [ 0.6355,  0.0270],
        [ 1.3524, -0.1420],
        [ 0.9247, -0.0338]], device='cuda:0', dtype=torch.float64)
1.4470910013452367
tensor([[[45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6923, 15.2861],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2762,  1.5951],
        [ 0.3633,  0.6503],
        [ 0.2677,  0.2413],
        [ 0.0759, -0.7464],
        [ 0.9712,  0.2733],
        [-1.4364, -0.0287],
        [ 1.3558,  0.1950],
        [ 0.2366, -0.7925]], device='cuda:0', dtype=torch.float64)
1.4763550512458374
tensor([[[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [44.6467, 15.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4062, -0.0581],
        [ 1.2524,  0.0706],
        [ 0.5166,  1.5105],
        [ 1.2708,  0.0891],
        [ 0.0924,  1.8809],
        [ 0.2593,  1.0758],
        [ 0.5983,  0.1604],
        [ 0.5893,  1.4516]], device='cuda:0', dtype=torch.float64)
0.9464184297099991
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.2877,  1.9503],
        [ 1.2265,  0.2350],
        [ 1.3576,  0.1043],
        [-1.1410, -0.4013],
        [ 0.2775, -1.4455],
        [ 0.2408,  0.0467],
        [ 0.1242, -0.7819],
        [ 0.6176, -0.7036]], device='cuda:0', dtype=torch.float64)
1.4412939744171944
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8553,  0.9355],
        [-1.7063,  0.1986],
        [-0.7233, -0.7700],
        [-0.0368,  1.6483],
        [ 0.2726,  0.9711],
        [ 1.0081,  0.6492],
        [-0.9618, -0.4350],
        [-0.4962, -0.5080]], device='cuda:0', dtype=torch.float64)
1.8043579801463268
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [43.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4019,  0.0430],
        [ 0.2927,  1.7048],
        [ 0.3290, -1.9892],
        [ 0.4669, -0.7905],
        [ 0.3901,  0.2776],
        [-2.1890,  0.6861],
        [ 0.1451,  0.5899],
        [ 0.5931,  1.8762]], device='cuda:0', dtype=torch.float64)
1.4318858995580934
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.1467, 18.7464],
         [45.6467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.3585, -0.6247],
        [ 0.1778, -0.1831],
        [ 0.1270,  1.7810],
        [ 0.3949, -2.2629],
        [-1.1077, -0.6676],
        [-1.3710, -0.2383],
        [ 0.8773,  0.8930],
        [ 1.3860, -0.0896]], device='cuda:0', dtype=torch.float64)
1.7305380705372742
tensor([[[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.6467, 15.7464],
         [43.6467, 16.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 18.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4574, -1.3799],
        [ 0.5012,  1.6927],
        [-1.0347, -0.8150],
        [-1.6319,  0.3331],
        [ 0.5473,  0.6254],
        [ 1.1844,  0.4434],
        [ 0.0157, -0.9344],
        [ 0.4833,  0.1397]], device='cuda:0', dtype=torch.float64)
1.5719165905976134
tensor([[[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7543, -0.3613],
        [ 0.1882,  0.7989],
        [-2.7208,  1.1833],
        [ 0.1150, -0.9266],
        [-1.7108,  0.1558],
        [ 0.1228,  1.2511],
        [-2.6464,  0.9568],
        [-1.3558, -0.2324]], device='cuda:0', dtype=torch.float64)
1.882714167106807
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5374,  1.3171],
        [-1.0656, -0.7459],
        [ 0.7218,  0.4435],
        [ 0.4949,  1.1919],
        [-1.6813,  0.3132],
        [ 0.5824,  0.9110],
        [ 0.8748,  1.8573],
        [-1.8549,  0.3776]], device='cuda:0', dtype=torch.float64)
1.6458906863186833
tensor([[[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0952,  0.7704],
        [-0.1572, -1.7574],
        [ 0.3686, -0.1484],
        [-2.6075,  1.0207],
        [-0.2045, -0.5630],
        [ 0.3089, -1.9458],
        [ 0.2346, -2.1325],
        [-1.4711, -0.5105]], device='cuda:0', dtype=torch.float64)
1.776391816404394
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8664, -0.3231],
        [ 0.7575, -0.4228],
        [ 0.3941,  1.9737],
        [-1.8802, -0.3139],
        [-1.0619, -0.5397],
        [ 0.4704,  2.0847],
        [ 0.1832, -2.0967],
        [ 0.2090,  1.8811]], device='cuda:0', dtype=torch.float64)
1.4803398091378273
tensor([[[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.1531,  0.7109],
        [ 1.4431,  0.1990],
        [ 0.3337, -0.6794],
        [ 0.3680, -1.9194],
        [-1.8456,  0.4481],
        [ 0.8913,  0.0737],
        [ 1.2007, -0.2779],
        [ 0.2812, -1.5006]], device='cuda:0', dtype=torch.float64)
1.5184280844808922
tensor([[[45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.7464],
         [45.1467, 15.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 15.7464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4802,  1.6779],
        [-0.5994, -0.5156],
        [ 0.6420, -0.1161],
        [ 0.1991, -0.2499],
        [ 0.0155, -2.0085],
        [ 0.6380,  1.8621],
        [-1.0927, -0.8095],
        [ 0.8815, -0.3559]], device='cuda:0', dtype=torch.float64)
1.5507124482682038
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [45.1467, 14.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [44.6467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.1380, -2.0338],
        [ 0.4612,  0.2360],
        [-0.0156,  1.7623],
        [ 1.2942,  0.0307],
        [ 0.1052,  1.8895],
        [ 0.2970,  1.5317],
        [-1.3949, -0.4288],
        [ 0.4303,  0.9938]], device='cuda:0', dtype=torch.float64)
1.4579146874145754
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6923, 15.2861]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2661, -0.4676],
        [ 0.7958, -0.2439],
        [ 0.4533,  1.6675],
        [ 0.1795, -1.9731],
        [-1.4236,  0.0505],
        [ 0.0546,  1.0032],
        [ 0.6989,  1.9377],
        [-0.1366, -1.1801]], device='cuda:0', dtype=torch.float64)
1.4033150911531405
tensor([[[45.1467, 18.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3629,  0.2296],
        [-1.0879, -0.8917],
        [-1.9706,  0.2946],
        [ 0.6632, -0.6057],
        [ 0.1539,  1.9626],
        [ 0.3816,  1.4000],
        [ 0.3593,  0.6227],
        [ 0.4084,  1.5456]], device='cuda:0', dtype=torch.float64)
1.4459219221690631
tensor([[[45.6467, 18.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464],
         [44.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7596,  1.8890],
        [ 1.4128,  0.0244],
        [-0.7389, -0.8534],
        [ 1.4629,  0.1504],
        [-1.2561, -0.3879],
        [-2.1958,  0.6901],
        [ 0.2714,  0.2802],
        [ 1.0360,  0.3933]], device='cuda:0', dtype=torch.float64)
1.4279232418133692
tensor([[[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2046, -0.0852],
        [ 0.4890,  0.7163],
        [-2.5196,  0.7897],
        [-0.3124, -1.0887],
        [ 0.2111, -0.0151],
        [-2.5309,  0.7565],
        [ 0.1306, -2.1143],
        [ 0.5634,  0.9319]], device='cuda:0', dtype=torch.float64)
1.5466497740145215
tensor([[[45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464]],

        [[43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.1467, 15.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1596, -0.8811],
        [ 0.1467, -1.0803],
        [ 0.5235, -0.2934],
        [-1.2460, -0.4964],
        [ 1.2658, -0.4902],
        [-0.0486, -1.1885],
        [-1.8881,  0.3256],
        [ 0.2101, -1.3317]], device='cuda:0', dtype=torch.float64)
1.720250610989991
tensor([[[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4146, -1.6894],
        [-1.2773, -0.1680],
        [-0.4971, -0.7413],
        [ 0.6412,  0.6781],
        [ 0.4826,  0.0227],
        [ 0.8394,  0.1483],
        [-1.9499,  0.5388],
        [-0.1282, -2.0385]], device='cuda:0', dtype=torch.float64)
1.7530044943382486
tensor([[[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464]],

        [[45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.6344, -0.2190],
        [ 0.7336,  0.8874],
        [ 0.3185,  0.8960],
        [-1.0859, -0.7918],
        [ 0.3506, -0.5643],
        [ 1.5375,  0.1756],
        [-1.6860,  0.2021],
        [-1.2198, -0.7925]], device='cuda:0', dtype=torch.float64)
1.8682192493372958
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [45.1467, 14.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.6606, -1.0084],
        [ 0.1003,  0.9643],
        [ 0.8017, -0.2127],
        [ 0.8594, -0.5522],
        [ 0.1374,  2.2641],
        [ 0.4842,  0.2618],
        [-2.4158,  0.8635],
        [ 1.2427, -0.5339]], device='cuda:0', dtype=torch.float64)
1.436179788919941
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [44.1467, 15.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 14.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [45.6467, 17.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2660, -0.4651],
        [-1.0020, -0.8174],
        [ 1.2223, -0.3102],
        [-1.4097, -0.2189],
        [ 0.6112,  1.1844],
        [-0.5406, -0.8196],
        [ 0.4229, -2.2511],
        [ 0.7573, -0.3082]], device='cuda:0', dtype=torch.float64)
1.538279818208387
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 14.7464],
         [46.1467, 15.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3702, -0.2805],
        [-1.7377, -0.2295],
        [ 0.3741, -0.6357],
        [ 0.1950, -2.0842],
        [ 0.8550, -0.2814],
        [ 0.6144,  1.5590],
        [ 0.1128, -1.8939],
        [ 1.5009,  0.0154]], device='cuda:0', dtype=torch.float64)
1.1876002299686448
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6923, 15.2861]],

        [[45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.9548, -0.4566],
        [ 0.6809,  1.0099],
        [-1.8170,  0.4569],
        [ 0.9100, -0.4221],
        [-0.0246, -2.1297],
        [-0.6567, -0.7404],
        [ 0.5503,  0.9452],
        [-1.6043, -0.1114]], device='cuda:0', dtype=torch.float64)
1.8952363800626264
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6923, 15.2861],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0863, -2.0932],
        [ 0.5024,  1.3607],
        [-2.0270,  0.5804],
        [ 1.3591, -0.3216],
        [ 0.0269, -2.0490],
        [-0.0683, -1.0928],
        [ 0.1008,  0.9635],
        [ 0.2962, -0.7721]], device='cuda:0', dtype=torch.float64)
1.5255074829103026
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.2526, -1.9158],
        [ 0.7870,  0.4380],
        [-0.0156,  1.6700],
        [ 0.2408,  1.7401],
        [ 1.4663, -0.0606],
        [ 0.2254, -1.8300],
        [-1.0184, -0.4498],
        [-1.4908,  0.0489]], device='cuda:0', dtype=torch.float64)
1.5858335937824066
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [44.6467, 15.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0404, -1.8548],
        [-1.1673, -0.8168],
        [ 0.3790,  0.7324],
        [ 0.5389,  0.7258],
        [ 0.0403, -1.9964],
        [-0.3874, -0.9695],
        [ 0.2640, -2.0642],
        [-0.0630, -1.9625]], device='cuda:0', dtype=torch.float64)
1.733065954803371
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861]],

        [[43.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [44.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.1320, -0.6625],
        [ 0.4969, -0.4071],
        [ 1.1830, -0.3594],
        [ 1.0905, -0.5035],
        [ 0.2971,  1.4161],
        [-0.5150, -1.1296],
        [-2.7533,  1.1923],
        [ 0.1117, -1.7717]], device='cuda:0', dtype=torch.float64)
1.6817509375164703
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [44.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0316, -2.0105],
        [ 1.5533, -0.0960],
        [ 0.3063,  1.8160],
        [ 0.2772,  1.0256],
        [ 0.7606,  0.6799],
        [ 0.6379, -0.7243],
        [ 0.0186, -0.9355],
        [ 0.2935, -1.0009]], device='cuda:0', dtype=torch.float64)
1.196554662479883
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[45.6467, 16.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9204, -0.1880],
        [ 0.2085,  1.2329],
        [ 0.7980, -0.3159],
        [ 0.5975,  0.4654],
        [ 0.1517, -0.8126],
        [ 0.6066,  0.3218],
        [-0.0299, -1.9642],
        [ 1.3265,  0.1271]], device='cuda:0', dtype=torch.float64)
1.067716285759005
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464],
         [45.1467, 14.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [43.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2326,  0.1209],
        [ 0.9601,  0.1765],
        [-0.4077, -0.5530],
        [ 0.0832,  2.1804],
        [ 0.5157, -0.3357],
        [-2.7922,  1.2387],
        [-1.4079, -0.5888],
        [ 0.1484, -2.0424]], device='cuda:0', dtype=torch.float64)
1.5835060980539508
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 15.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.4516, -0.3830],
        [ 0.4868, -0.6351],
        [ 0.1048,  0.7736],
        [ 0.0976,  2.3395],
        [ 0.5772,  1.4932],
        [-0.2647, -1.9189],
        [-0.1585, -1.9134],
        [ 1.4295,  0.0153]], device='cuda:0', dtype=torch.float64)
1.482109739466122
tensor([[[45.1467, 13.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [43.6467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [43.6467, 16.2464],
         [44.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2212, -0.4610],
        [ 0.7640,  0.8371],
        [-2.1157,  0.6814],
        [ 0.3681, -1.9197],
        [-0.6238, -1.0980],
        [ 0.0941, -1.2375],
        [-1.7681,  0.1824],
        [ 0.7154,  0.7117]], device='cuda:0', dtype=torch.float64)
1.7682035240604361
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.5636, 14.6820],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2665, -1.5556],
        [-0.8510, -0.6321],
        [ 1.3110,  0.0537],
        [ 1.3693, -0.2083],
        [ 1.3126,  0.1217],
        [-1.3729, -0.7036],
        [ 0.6278,  0.4873],
        [ 0.1510,  2.1824]], device='cuda:0', dtype=torch.float64)
1.32184476394408
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9770,  0.5679],
        [ 0.2127,  1.5393],
        [ 0.4377, -1.8881],
        [ 1.3369,  0.1704],
        [-1.7728,  0.1513],
        [-1.3187, -0.0636],
        [ 0.2296,  0.5178],
        [-0.3719, -0.9862]], device='cuda:0', dtype=torch.float64)
1.5794980782775585
tensor([[[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6923, 15.2861],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.9409, -0.7195],
        [ 0.2789,  0.9328],
        [ 0.7718,  0.9725],
        [-1.7991,  0.4471],
        [ 0.1149, -0.5702],
        [-0.0105, -2.0761],
        [ 0.5260,  1.7193],
        [ 0.6780, -0.7424]], device='cuda:0', dtype=torch.float64)
1.5784665075239135
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 16.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.4943, -0.4878],
        [ 0.9642, -0.1212],
        [ 0.8027,  0.9998],
        [ 0.7795, -0.0381],
        [-1.9564,  0.1998],
        [ 1.2176, -0.4029],
        [-1.6002, -0.1177],
        [ 0.8500,  0.0081]], device='cuda:0', dtype=torch.float64)
1.5737844391826565
tensor([[[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.6082, -0.1057],
        [ 1.0588, -0.0180],
        [-1.1827, -0.2230],
        [ 0.9338, -0.5322],
        [ 0.2202, -0.4741],
        [ 1.0503, -0.1382],
        [ 0.4150,  1.2946],
        [ 0.5927, -0.3553]], device='cuda:0', dtype=torch.float64)
1.3822692507032497
tensor([[[43.6467, 16.7464],
         [44.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 18.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6923, 15.2861]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 18.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0215, -0.9269],
        [ 1.2377, -0.0503],
        [ 0.2626, -1.4003],
        [ 0.0121,  1.3827],
        [-0.0910, -1.9586],
        [ 0.6792,  0.8018],
        [ 0.7647,  0.9545],
        [ 0.3221,  0.9921]], device='cuda:0', dtype=torch.float64)
1.3496799754423088
tensor([[[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [44.1467, 15.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.6467, 17.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [46.1467, 15.7464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.6312, -0.3407],
        [ 0.4863, -1.3372],
        [ 0.2895, -1.5115],
        [-1.3571, -0.4091],
        [ 0.2806, -2.1513],
        [-0.2945, -0.9440],
        [ 0.6142,  1.3898],
        [-0.1764, -1.1314]], device='cuda:0', dtype=torch.float64)
1.8412103388545777
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]],

        [[43.6467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 18.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0619,  0.0710],
        [ 0.4604,  0.4079],
        [ 0.0068, -1.7873],
        [-0.9451, -0.4665],
        [-1.7615,  0.0292],
        [ 0.3118,  1.6251],
        [ 0.8561, -0.2072],
        [ 0.6981,  1.9495]], device='cuda:0', dtype=torch.float64)
1.4544391130178245
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3083, -2.0758],
        [ 0.8024, -0.3551],
        [-0.0368, -1.8917],
        [ 0.3770,  2.0230],
        [ 1.0420,  0.1229],
        [ 0.0694,  1.5899],
        [-0.9207, -0.5090],
        [-1.2527, -0.1482]], device='cuda:0', dtype=torch.float64)
1.5844095182232096
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1090,  0.7123],
        [ 0.0286, -0.8616],
        [ 0.6963,  1.9248],
        [ 0.4989,  1.2862],
        [-0.4821, -0.9940],
        [ 0.6668,  0.0171],
        [ 0.1772, -1.8341],
        [ 0.7541,  0.1456]], device='cuda:0', dtype=torch.float64)
1.3451276814078725
tensor([[[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464],
         [45.1467, 18.2464]],

        [[44.1467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.6739, -0.7771],
        [-1.0403, -0.7896],
        [ 1.3483,  0.3450],
        [ 1.2530,  0.4087],
        [ 0.4539, -0.4688],
        [ 0.4422, -0.4638],
        [-1.1165, -0.4098],
        [ 0.7158, -0.5710]], device='cuda:0', dtype=torch.float64)
1.7162223959388538
tensor([[[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0661,  0.9659],
        [ 0.6319,  0.1503],
        [-0.0564, -1.8934],
        [-2.2654,  0.7953],
        [-0.7777, -0.4514],
        [ 0.1169, -2.0256],
        [ 0.5836,  1.3341],
        [ 0.3983, -1.6474]], device='cuda:0', dtype=torch.float64)
1.668440325088458
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [44.6467, 15.7464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 18.2464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [44.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 18.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.9413e-01, -1.9873e+00],
        [-6.9641e-01, -8.0024e-01],
        [ 4.8904e-01,  1.6837e+00],
        [ 1.7347e-01, -4.1436e-01],
        [ 9.5783e-02, -1.7024e+00],
        [ 4.0811e-01, -1.6175e+00],
        [ 3.7299e-01, -1.1481e+00],
        [ 1.4185e-03,  1.6212e+00]], device='cuda:0', dtype=torch.float64)
1.555035716322192
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 18.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.2817, -0.6118],
        [ 1.3337,  0.3725],
        [ 0.4941,  0.0210],
        [ 0.1053, -1.2766],
        [ 0.0391,  1.5550],
        [ 0.0598,  2.1577],
        [ 0.7837,  0.8777],
        [ 0.0553, -1.8429]], device='cuda:0', dtype=torch.float64)
1.4272303353585607
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.3903, -0.8072],
        [ 0.2414,  1.5112],
        [ 0.0932,  1.7790],
        [ 0.1305,  0.1617],
        [-1.3285, -0.2676],
        [-0.7492, -0.7480],
        [ 0.1116, -1.8457],
        [ 0.0637,  1.1574]], device='cuda:0', dtype=torch.float64)
1.827948219047438
tensor([[[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 16.2464],
         [44.6467, 15.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.1886, -0.4490],
        [-1.2308, -0.1348],
        [ 0.6051, -0.0882],
        [ 0.3398, -0.6753],
        [ 0.5744, -0.3497],
        [-0.8285, -0.5662],
        [-1.3982, -0.3779],
        [ 1.1662,  0.1468]], device='cuda:0', dtype=torch.float64)
2.006580259973376
tensor([[[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 18.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [44.1467, 15.7464]],

        [[45.6467, 18.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 15.7464],
         [45.6923, 15.2861],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.3906, -0.8074],
        [ 0.6845, -0.1268],
        [ 0.7336,  1.5679],
        [-1.6383, -0.3067],
        [ 0.3443, -0.9203],
        [-0.2718, -0.8713],
        [-1.4316, -0.2256],
        [ 0.4427,  0.6427]], device='cuda:0', dtype=torch.float64)
1.7947522658339503
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [44.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6923, 15.2861],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 18.7464],
         [45.1467, 14.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6066,  0.6623],
        [ 1.2670, -0.5246],
        [-0.6425, -0.6010],
        [-0.5448, -1.0260],
        [ 0.4331,  1.2784],
        [ 0.0206, -2.1159],
        [-2.7064,  1.1264],
        [-1.8131,  0.2397]], device='cuda:0', dtype=torch.float64)
1.6796806857892757
tensor([[[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 18.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.7464],
         [44.6467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0761,  1.1559],
        [ 0.3518,  0.6012],
        [-2.0789,  0.6667],
        [-2.2040,  0.5607],
        [ 0.8476, -0.1763],
        [ 1.3767,  0.0876],
        [ 0.9086,  0.8627],
        [ 0.0760,  2.0692]], device='cuda:0', dtype=torch.float64)
1.4221910220428613
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.1467, 18.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.6467, 15.7464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [45.6467, 16.2464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6482,  0.3693],
        [ 0.4065,  1.5424],
        [ 0.1125,  0.6492],
        [-1.7800, -0.3089],
        [-2.8499,  1.3249],
        [-0.9314, -0.4128],
        [ 0.1037,  0.9044],
        [ 0.2463, -1.2610]], device='cuda:0', dtype=torch.float64)
1.7867008489528913
tensor([[[45.1467, 13.7464],
         [46.1467, 15.7464],
         [45.1467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[45.6923, 15.2861],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.1608, -0.9906],
        [-1.5955, -0.2253],
        [-0.0582,  1.1911],
        [-0.6364, -0.7894],
        [-2.4265,  0.8844],
        [ 0.2940, -1.0969],
        [ 0.3303,  0.6544],
        [-0.9305, -0.5905]], device='cuda:0', dtype=torch.float64)
2.0262181430038555
tensor([[[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4924,  1.5273],
        [ 0.1671, -0.6440],
        [ 0.7478,  0.6058],
        [ 0.2683, -0.4709],
        [ 0.4021, -0.8150],
        [ 0.2164,  0.4430],
        [-0.0650, -0.6253],
        [-1.6429, -0.1108]], device='cuda:0', dtype=torch.float64)
1.6100410401131593
tensor([[[45.1467, 13.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2525, -2.0008],
        [-1.5950,  0.1793],
        [-1.7120,  0.0276],
        [ 0.0132, -0.4940],
        [ 0.5141,  1.5707],
        [ 0.0887, -1.0722],
        [ 0.3403,  1.6927],
        [ 1.3044,  0.3244]], device='cuda:0', dtype=torch.float64)
1.6106121495664838
tensor([[[45.6467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [45.1467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464],
         [45.6467, 18.7464]],

        [[45.1467, 18.7464],
         [44.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.1474, -0.0970],
        [ 0.3971,  1.9362],
        [ 0.7488, -0.4728],
        [-2.7187,  1.1639],
        [ 0.0101,  1.6738],
        [-0.2471, -1.1551],
        [ 0.2186, -1.4507],
        [-2.4699,  0.6580]], device='cuda:0', dtype=torch.float64)
1.4426806833283847
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 15.7464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [44.1467, 15.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6494, -0.5016],
        [ 1.0157,  0.0982],
        [ 0.2546, -0.8247],
        [ 0.1764, -1.9728],
        [-0.0045, -2.0764],
        [-1.1959, -0.1302],
        [-2.5777,  0.8070],
        [-0.8547, -0.3979]], device='cuda:0', dtype=torch.float64)
1.8198693192153172
tensor([[[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0494, -0.0338],
        [ 0.1953, -0.8647],
        [ 0.8466, -0.1624],
        [ 0.2688, -0.2774],
        [ 0.3792, -0.3676],
        [-0.6955, -0.7379],
        [ 0.5708,  0.1389],
        [ 0.0990,  0.9903]], device='cuda:0', dtype=torch.float64)
1.4996786887531965
tensor([[[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.1928, -0.5735],
        [ 0.8111,  0.4379],
        [ 1.5474,  0.0313],
        [-2.0580,  0.5621],
        [ 0.4861,  0.1422],
        [ 0.1380, -1.0166],
        [-1.3515, -0.6038],
        [ 0.5870,  0.1839]], device='cuda:0', dtype=torch.float64)
1.7406562303851352
tensor([[[44.1467, 15.7464],
         [44.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.0631, -0.5516],
        [ 0.0600,  1.3385],
        [ 1.0760,  0.5717],
        [ 0.3635,  0.6148],
        [-2.3747,  0.8324],
        [ 0.2930,  1.5133],
        [-0.1014, -2.0200],
        [ 0.3006, -1.5398]], device='cuda:0', dtype=torch.float64)
1.6081422474758909
tensor([[[45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [44.1467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[45.6467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0671,  1.2199],
        [-2.5340,  0.6965],
        [ 0.5938, -0.2595],
        [ 0.3753, -1.7395],
        [-1.5096, -0.5610],
        [ 1.0872, -0.2422],
        [-1.1902, -0.7967],
        [ 1.0109,  0.6500]], device='cuda:0', dtype=torch.float64)
1.6362080149298688
tensor([[[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 15.7464],
         [45.1467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4408, -0.7574],
        [ 1.4502,  0.0190],
        [ 0.2861, -1.9807],
        [ 0.3015,  0.0113],
        [ 0.7042,  0.3475],
        [ 0.1652, -2.1921],
        [ 0.2397, -2.0177],
        [ 1.3596, -0.3114]], device='cuda:0', dtype=torch.float64)
1.0357685834384234
tensor([[[45.6467, 16.2464],
         [45.6467, 18.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [45.6467, 18.2464],
         [43.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2240,  0.1690],
        [ 0.3384,  0.0311],
        [-0.3938, -0.8204],
        [ 0.2277, -1.9733],
        [-1.2031, -0.3988],
        [-0.5910, -0.8126],
        [ 0.2393,  0.4615],
        [ 0.3845,  0.1423]], device='cuda:0', dtype=torch.float64)
1.7546909503166472
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 18.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.8978,  0.5783],
        [-1.5031, -0.3821],
        [-1.7757, -0.2678],
        [ 0.1776,  0.6423],
        [ 0.0481, -2.0755],
        [-0.9556, -0.7545],
        [ 1.4184, -0.1189],
        [-0.0282,  1.1534]], device='cuda:0', dtype=torch.float64)
1.9418481664961087
tensor([[[45.1467, 13.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 17.7464]],

        [[46.1467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[45.1467, 18.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 2.8603e-01, -9.7736e-04],
        [ 1.4193e+00, -2.1129e-01],
        [ 2.1596e-01, -6.8374e-02],
        [-2.4729e+00,  8.5555e-01],
        [-2.2933e-01, -1.9726e+00],
        [ 1.4538e+00, -2.2754e-01],
        [ 3.9925e-01, -1.0112e+00],
        [ 2.9667e-01,  6.3242e-02]], device='cuda:0', dtype=torch.float64)
1.3668527188764177
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 18.2464],
         [43.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7878,  0.7389],
        [-1.5536,  0.1822],
        [ 0.0696, -0.8846],
        [ 0.3835,  1.8381],
        [ 0.3110,  1.0120],
        [ 0.0711, -1.8800],
        [ 0.7723,  0.3109],
        [ 0.0317, -0.5996]], device='cuda:0', dtype=torch.float64)
1.4798204665945227
tensor([[[45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 18.7464],
         [44.1467, 15.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6923, 15.2861]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.5905, -0.7521],
        [ 0.8565,  0.8597],
        [ 0.9322,  0.4905],
        [-2.4670,  0.9028],
        [-2.7682,  1.2349],
        [ 0.2780, -1.6021],
        [-1.7581,  0.3968],
        [ 0.0153, -1.2386]], device='cuda:0', dtype=torch.float64)
1.7015260708857998
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 18.2464],
         [46.1467, 16.2464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 17.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-3.0408,  1.5541],
        [ 0.1836, -0.8804],
        [ 0.0911, -1.0928],
        [-1.4218,  0.0047],
        [ 1.3999,  0.1574],
        [ 0.5208, -0.6153],
        [ 0.0074, -1.9914],
        [ 1.4017,  0.1638]], device='cuda:0', dtype=torch.float64)
1.4564240251375975
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 15.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 17.2464],
         [43.6467, 16.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8604,  0.6545],
        [ 0.0183,  0.7839],
        [-0.9902, -0.3789],
        [-1.7851,  0.0697],
        [ 1.1262,  0.1362],
        [ 0.1284,  2.2776],
        [ 0.0136, -0.9004],
        [ 1.1388,  0.0953]], device='cuda:0', dtype=torch.float64)
1.5192805013585953
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464]],

        [[45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 18.2464],
         [46.1467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9621, -0.1213],
        [ 1.3646,  0.1367],
        [ 0.9096,  0.3698],
        [-0.9794, -0.9279],
        [-1.7175,  0.0708],
        [ 0.2304, -1.3625],
        [ 1.3896, -0.1055],
        [ 0.0802, -1.1923]], device='cuda:0', dtype=torch.float64)
1.4638109022384582
tensor([[[45.6467, 17.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.7464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.7520, -0.6513],
        [ 0.4602,  1.9884],
        [-1.5574, -0.4588],
        [ 0.4116, -0.6202],
        [-1.0448, -0.6241],
        [ 0.4829, -0.6751],
        [ 0.9926,  0.2697],
        [-0.5554, -1.0597]], device='cuda:0', dtype=torch.float64)
1.8593165178084554
tensor([[[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6923, 15.2861]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [46.1467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7612, -0.5975],
        [-0.3476, -1.0742],
        [ 0.2376,  0.5773],
        [-1.0842, -0.8959],
        [ 0.0595,  2.3320],
        [ 0.7806,  1.9013],
        [ 0.6255,  0.8091],
        [ 0.2664,  0.6236]], device='cuda:0', dtype=torch.float64)
1.4531910168383848
tensor([[[43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.6467, 18.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [44.6467, 15.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.4057, -0.9821],
        [ 0.0975,  0.9682],
        [ 0.4898,  1.6843],
        [-0.1151, -1.0881],
        [-1.1382, -0.1801],
        [-0.0909,  1.9488],
        [-1.2904, -0.6848],
        [-1.9324,  0.5141]], device='cuda:0', dtype=torch.float64)
1.9851716857098238
tensor([[[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3449, -0.1991],
        [ 0.0234,  1.3527],
        [ 0.9093,  0.9002],
        [ 0.1479, -0.8438],
        [-1.7829,  0.2449],
        [-1.2917, -0.6877],
        [-1.8512, -0.2646],
        [-0.2490, -1.9213]], device='cuda:0', dtype=torch.float64)
1.7844502304486158

Validation DataLoader 0:  80%|########  | 330/412 [01:04<00:16,  5.11it/s][AEpoch 0:  98%|#########7| 3632/3714 [31:18<00:42,  1.93it/s, loss=3.54, v_num=0, train/loss_step=3.350, train/acc_step=0.000]tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2135,  0.0981],
        [ 0.6802,  0.5025],
        [ 0.7190, -0.4897],
        [ 0.9213,  0.1590],
        [ 0.1280, -0.3658],
        [-1.4884, -0.3501],
        [-0.5017, -0.5888],
        [ 0.2272, -1.3466]], device='cuda:0', dtype=torch.float64)
1.6771566093861494
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3743, -0.1620],
        [ 0.7275,  1.8434],
        [ 0.3350,  0.5814],
        [ 0.7419, -0.4026],
        [ 0.1332,  1.8609],
        [-1.1865, -0.4520],
        [-0.6766, -0.3577],
        [-1.8866,  0.2556]], device='cuda:0', dtype=torch.float64)
1.6949400260318037
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.1467, 15.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 17.2464]],

        [[43.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4007, -1.6370],
        [ 0.4010, -1.3475],
        [-1.1861, -0.3492],
        [ 0.2767, -0.0847],
        [ 1.4130,  0.0184],
        [-2.0000,  0.4582],
        [ 0.4192,  1.5686],
        [-1.3803,  0.0085]], device='cuda:0', dtype=torch.float64)
1.7523332753448044
tensor([[[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6311,  1.5517],
        [ 0.3410, -1.6994],
        [ 1.2417,  0.0134],
        [ 0.3378,  0.7119],
        [ 0.4151, -0.0119],
        [ 0.3774,  2.0285],
        [ 0.6085, -0.8272],
        [ 0.0370, -0.7009]], device='cuda:0', dtype=torch.float64)
1.1460322899695345
tensor([[[44.1467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [45.1467, 13.7464]],

        [[44.1467, 15.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464],
         [45.1467, 13.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [45.1467, 14.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9408, -0.2393],
        [-1.1482, -0.8522],
        [ 0.8735,  0.3920],
        [ 0.7214, -0.7284],
        [ 0.6175,  0.6997],
        [ 1.3486,  0.0213],
        [-0.0727, -0.6155],
        [ 0.1029, -1.9842]], device='cuda:0', dtype=torch.float64)
1.3328446098449194
tensor([[[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2757,  1.2580],
        [ 0.1082,  1.2914],
        [-0.4597, -0.8781],
        [-1.0199, -0.6215],
        [-2.4360,  0.9107],
        [-0.2352, -0.9853],
        [ 0.0291,  1.9866],
        [ 0.2708,  0.6573]], device='cuda:0', dtype=torch.float64)
1.835149630980277
tensor([[[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4694,  0.4111],
        [ 0.6568,  1.1893],
        [-1.6309, -0.3388],
        [ 0.4552, -0.7199],
        [-2.5641,  0.7934],
        [ 0.2058, -1.9714],
        [ 0.6951, -0.6258],
        [ 0.5013,  1.1856]], device='cuda:0', dtype=torch.float64)
1.4762617619816858
tensor([[[45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.4248,  0.0539],
        [ 0.1279,  0.9975],
        [ 0.3358, -0.7417],
        [ 0.7655, -0.3822],
        [ 0.1605, -0.8437],
        [ 0.3112,  0.1232],
        [ 0.3663, -1.2037],
        [-1.1195, -0.6527]], device='cuda:0', dtype=torch.float64)
1.7925150863832138
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3058,  1.7219],
        [ 0.4814,  0.5958],
        [ 0.3994,  0.0504],
        [ 0.1801,  0.0755],
        [-0.2636, -2.0184],
        [ 0.9826, -0.2668],
        [ 1.3644, -0.0147],
        [ 0.1623,  1.5894]], device='cuda:0', dtype=torch.float64)
1.1846844324250672
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.1770, -1.1308],
        [-0.3101, -0.8453],
        [ 0.8168, -0.2078],
        [ 0.7778,  0.8862],
        [-0.6603, -0.5288],
        [-0.5535, -0.6814],
        [-0.0339, -0.6024],
        [ 0.5115, -0.8183]], device='cuda:0', dtype=torch.float64)
1.7293760135506229
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [44.1467, 15.2464],
         [43.6467, 16.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.3861, -0.6597],
        [ 0.1093,  1.8417],
        [ 0.8000, -0.5555],
        [-2.6282,  0.8859],
        [ 0.1412, -1.8548],
        [ 1.1821, -0.1334],
        [-0.6243, -0.9128],
        [ 0.4958,  0.2253]], device='cuda:0', dtype=torch.float64)
1.6319050798891195
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[44.1467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 18.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1998, -0.1790],
        [ 0.3611,  1.3412],
        [ 0.3510,  1.4563],
        [ 0.4337, -0.1664],
        [ 0.2069, -0.8780],
        [ 1.2134,  0.5818],
        [-0.0494, -0.8126],
        [-1.0425, -0.9451]], device='cuda:0', dtype=torch.float64)
1.5507834814595665
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6214, -0.7252],
        [-1.9273, -0.2263],
        [ 0.3478,  1.6808],
        [ 0.7817, -0.2140],
        [ 0.3234, -0.7549],
        [ 0.5097, -0.0117],
        [-0.2975, -2.0104],
        [-0.3140, -1.1814]], device='cuda:0', dtype=torch.float64)
1.5946936937180805
tensor([[[45.6467, 18.7464],
         [43.6467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [44.1467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.7464],
         [44.6467, 15.2464]],

        [[44.1467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2106,  1.5694],
        [ 0.2492, -2.0010],
        [-1.3699, -0.7206],
        [ 1.0784,  0.0108],
        [ 0.7315, -0.4278],
        [ 0.1983,  0.1247],
        [ 0.0858, -0.8891],
        [ 0.2215,  1.4968]], device='cuda:0', dtype=torch.float64)
1.4582301641226367
tensor([[[45.6467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 18.2464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3878,  0.0832],
        [ 0.6655, -0.6063],
        [ 1.1710,  0.5229],
        [ 0.7301,  1.6312],
        [ 0.2299, -0.2668],
        [ 0.2358,  1.0769],
        [ 0.2255, -0.1190],
        [-1.2472, -0.4473]], device='cuda:0', dtype=torch.float64)
1.2404679289153862
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [43.6467, 16.2464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.2609, -0.4667],
        [ 0.2726, -1.3028],
        [ 0.9804, -0.4059],
        [-1.1705, -0.7295],
        [ 0.0281, -1.0647],
        [ 0.0583,  1.3624],
        [-0.1794,  1.9635],
        [ 0.3853,  0.8425]], device='cuda:0', dtype=torch.float64)
1.7204335888093263
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8098, -0.2011],
        [-0.0461, -1.1851],
        [ 0.8084, -0.6925],
        [-1.3924, -0.4493],
        [ 1.2674,  0.0205],
        [ 0.0356,  1.2118],
        [ 0.2188,  1.0068],
        [-2.4260,  0.8278]], device='cuda:0', dtype=torch.float64)
1.5603043887438186
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2151, -0.3143],
        [-0.2901, -1.1133],
        [-0.0720, -1.9575],
        [-0.6409, -0.8605],
        [ 0.7226, -0.2942],
        [-1.1458, -0.2521],
        [-1.6904, -0.1930],
        [-0.0383, -1.8443]], device='cuda:0', dtype=torch.float64)
2.006202713451604
tensor([[[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 18.2464],
         [45.6467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.5636, 14.6820],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 17.2464],
         [45.6923, 15.2861],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7335,  1.9003],
        [ 0.4420,  0.6270],
        [ 0.5737, -0.7306],
        [ 0.2673, -0.7753],
        [ 1.2664,  0.1108],
        [ 0.2535,  1.0091],
        [ 0.2904,  1.5382],
        [ 0.9534, -0.3400]], device='cuda:0', dtype=torch.float64)
1.0426186270437345
tensor([[[45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 18.7464],
         [45.1467, 15.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [44.6467, 15.7464],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1507, 17.2434]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2164,  1.9068],
        [ 0.7538, -0.1412],
        [ 0.6497,  0.5600],
        [ 0.9428,  0.4438],
        [-0.3211, -0.7601],
        [-1.8106, -0.3669],
        [-1.8797,  0.5316],
        [-2.7302,  1.1716]], device='cuda:0', dtype=torch.float64)
1.7055372014167833
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6923, 15.2861],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2071,  0.0472],
        [ 0.8934,  1.8164],
        [ 0.7149,  1.5892],
        [-0.1826, -0.6908],
        [-2.5339,  0.6962],
        [ 0.7379,  1.4212],
        [-1.4029, -0.7048],
        [ 1.0391, -0.1046]], device='cuda:0', dtype=torch.float64)
1.3382745031812315
tensor([[[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.2464]],

        [[46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.0189,  0.5027],
        [ 0.3976, -0.6543],
        [ 0.7022,  1.8922],
        [-1.5013,  0.0855],
        [-0.0636,  1.8332],
        [ 1.1288,  0.6309],
        [-1.1027, -0.7596],
        [ 1.2219,  0.5362]], device='cuda:0', dtype=torch.float64)
1.6631771889915936
tensor([[[44.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 15.7464],
         [46.1467, 15.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [44.1467, 15.2464],
         [45.6467, 18.2464],
         [44.1467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2287, -0.2824],
        [-0.0254, -1.1716],
        [ 0.1826,  1.6124],
        [-0.0487, -0.6434],
        [ 0.6741,  1.2241],
        [-0.5137, -0.7765],
        [ 0.5466, -0.1550],
        [ 0.4412,  0.2674]], device='cuda:0', dtype=torch.float64)
1.5235467118970822
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [43.1550, 17.2484],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 18.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8577, -0.1261],
        [-2.0942,  0.6727],
        [-2.0557,  0.6809],
        [ 0.8966, -0.1749],
        [-0.4410, -0.9161],
        [ 0.2840,  0.9329],
        [-1.2090, -0.5891],
        [-1.1162, -0.4822]], device='cuda:0', dtype=torch.float64)
2.0019611681764147
tensor([[[45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [44.6467, 15.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6772,  1.7160],
        [-0.6810, -0.7519],
        [ 0.0357, -0.9611],
        [ 1.2313,  0.1263],
        [-0.1278, -0.9041],
        [-1.8410,  0.4501],
        [-1.9298,  0.6839],
        [-1.2846, -0.7603]], device='cuda:0', dtype=torch.float64)
1.9554152490533385
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 14.7464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8227, -0.0353],
        [ 0.4116,  1.5519],
        [ 0.2322, -2.0237],
        [ 0.2610, -2.0108],
        [ 1.1555,  0.3822],
        [-2.5999,  0.9075],
        [ 0.3709, -1.2219],
        [ 0.9628,  0.8425]], device='cuda:0', dtype=torch.float64)
1.1586938161073879
tensor([[[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 17.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.6594, -0.5305],
        [ 0.7598,  0.8719],
        [-1.8329, -0.3156],
        [-0.4079, -1.1777],
        [-0.4684, -0.7095],
        [-0.5872, -0.3463],
        [ 0.3483,  0.8755],
        [ 0.6921, -0.3884]], device='cuda:0', dtype=torch.float64)
2.0214060589326204
tensor([[[45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861]],

        [[45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6923, 15.2861],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9142, -0.1049],
        [ 0.8589,  0.7847],
        [ 0.3318, -1.6861],
        [ 0.5646,  1.5006],
        [ 0.5658,  1.3073],
        [ 0.3649, -0.3051],
        [ 0.5804, -0.8443],
        [ 0.4141, -1.6784]], device='cuda:0', dtype=torch.float64)
1.0612198206487062
tensor([[[43.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.6467, 15.7464],
         [45.1467, 14.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2416, -0.4651],
        [-1.4641, -0.2016],
        [ 0.2283,  1.5905],
        [-1.3155, -0.0368],
        [ 0.7405,  1.1367],
        [ 0.6716,  1.1457],
        [ 0.4069,  1.3143],
        [-0.3111, -1.9691]], device='cuda:0', dtype=torch.float64)
1.541964502523816
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [44.6467, 15.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.7037, -0.4247],
        [ 0.0609, -1.3319],
        [ 1.4619,  0.0239],
        [ 0.6065,  0.3218],
        [-1.8726, -0.2601],
        [ 1.0187,  0.6603],
        [ 0.6770,  0.3676],
        [ 0.3013, -0.6648]], device='cuda:0', dtype=torch.float64)
1.4499762119439978
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.1883,  0.4469],
        [-1.5195,  0.1589],
        [-0.1633, -0.7213],
        [ 0.3821, -1.9090],
        [ 0.2672,  0.0180],
        [ 0.0621, -1.2758],
        [-1.5912,  0.2742],
        [ 0.3521, -0.6135]], device='cuda:0', dtype=torch.float64)
1.7299563288819748
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [44.6467, 15.7464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 13.7464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6323,  0.5748],
        [-0.1531, -1.0497],
        [ 0.7672, -0.0848],
        [ 0.1098, -1.2784],
        [ 0.7005,  1.6858],
        [ 0.9700,  0.0452],
        [ 0.2365, -0.2083],
        [ 0.9578, -0.4731]], device='cuda:0', dtype=torch.float64)
1.100271667850362
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5659, -0.5933],
        [ 1.4093, -0.1443],
        [-2.2621,  0.6501],
        [ 1.1294, -0.1684],
        [-1.9829,  0.6265],
        [-1.6558,  0.2675],
        [ 0.1275,  0.6115],
        [ 0.1934,  0.0200]], device='cuda:0', dtype=torch.float64)
1.623994864474935
tensor([[[45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.2464],
         [43.6467, 16.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4239, -0.7202],
        [ 0.3934,  1.5046],
        [ 0.2710,  2.0371],
        [ 1.4679,  0.1697],
        [-1.4862, -0.1896],
        [-1.8618, -0.1967],
        [-1.4102, -0.4408],
        [ 0.5512,  1.1600]], device='cuda:0', dtype=torch.float64)
1.6903399305586098
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.6261, -0.9119],
        [ 0.1955, -1.9159],
        [ 0.2921, -1.0155],
        [-0.3937, -0.9670],
        [ 0.4173, -0.0520],
        [ 1.2221, -0.0034],
        [ 0.4257, -0.2183],
        [ 1.1593,  0.1456]], device='cuda:0', dtype=torch.float64)
1.440689514735701
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5232,  1.6238],
        [ 1.6191, -0.0619],
        [-1.3818, -0.4416],
        [-1.8646,  0.3022],
        [ 0.0938, -0.7702],
        [-0.3582, -0.6632],
        [-1.6669,  0.2256],
        [-1.5770, -0.1695]], device='cuda:0', dtype=torch.float64)
2.0173108153949695
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3880, -0.0941],
        [ 1.0770, -0.3292],
        [ 0.6437, -0.7367],
        [-1.3787, -0.5247],
        [ 0.6177, -0.6898],
        [-2.0915,  0.4644],
        [ 0.5527,  1.8532],
        [ 0.9454, -0.0363]], device='cuda:0', dtype=torch.float64)
1.3332200047068608
tensor([[[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.1467, 18.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 15.7464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1962, -0.3099],
        [ 0.5102,  1.7136],
        [ 0.9641,  0.2288],
        [-1.3396, -0.6080],
        [ 0.4368, -0.3937],
        [ 1.1443, -0.4129],
        [-1.8109, -0.2446],
        [ 0.5459,  0.5942]], device='cuda:0', dtype=torch.float64)
1.4964465709215324
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2981, -2.1839],
        [-2.0714,  0.5824],
        [-2.5414,  0.9092],
        [ 1.1410, -0.0308],
        [ 0.1089,  1.7506],
        [-0.8686, -0.6001],
        [-0.7153, -0.7595],
        [ 0.3953, -0.0053]], device='cuda:0', dtype=torch.float64)
1.7523199112657708
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 17.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6923, 15.2861]],

        [[43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0880,  1.9328],
        [-0.0113,  1.4008],
        [-0.0295,  1.9388],
        [ 1.2271, -0.2677],
        [ 0.2945, -0.8227],
        [ 0.3280,  1.2005],
        [-2.1914,  0.6900],
        [ 0.2231,  1.9414]], device='cuda:0', dtype=torch.float64)
1.4512015845080612
tensor([[[44.1467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464]],

        [[44.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.6467, 15.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.6829,  0.0982],
        [-2.0080,  0.5147],
        [ 0.0781,  1.1514],
        [ 0.4226,  1.3984],
        [ 0.1084, -1.2785],
        [-0.2310,  2.0919],
        [-1.5288,  0.2367],
        [ 0.6630,  0.0638]], device='cuda:0', dtype=torch.float64)
1.8795578079534012
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.5636, 14.6820]],

        [[45.6467, 17.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.0221, -0.7289],
        [-0.0986, -1.1645],
        [-0.2265, -0.8709],
        [ 0.3910,  0.6367],
        [-1.2510, -0.5433],
        [ 0.5190,  0.6885],
        [ 0.6698, -0.3566],
        [ 0.3327, -0.9599]], device='cuda:0', dtype=torch.float64)
1.8181465714975644
tensor([[[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [46.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0409,  1.1342],
        [ 0.0378, -0.5152],
        [-0.0359, -0.0747],
        [ 0.7731,  1.3047],
        [-1.1959, -0.7965],
        [ 0.6311,  1.0025],
        [ 1.3302, -0.1612],
        [-0.7389, -0.8534]], device='cuda:0', dtype=torch.float64)
1.5382382900675933
tensor([[[45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [46.1467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.7001, -0.8274],
        [-0.6763, -0.8624],
        [ 0.2206, -1.8866],
        [-0.8186, -0.6743],
        [ 0.4468,  0.0212],
        [ 1.1547,  0.2525],
        [ 0.4412, -0.6968],
        [ 0.8823, -0.2396]], device='cuda:0', dtype=torch.float64)
1.5254317993070305
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [44.1467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2521, -1.6692],
        [ 0.7147,  0.9658],
        [-1.9791,  0.4752],
        [-1.6066, -0.4317],
        [ 0.7443, -0.1245],
        [ 0.0920, -0.6635],
        [-2.0540,  0.4482],
        [-1.3693, -0.7184]], device='cuda:0', dtype=torch.float64)
1.9571910237721122
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [43.1550, 17.2484],
         [45.6467, 16.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.1550, 17.2484],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4607,  0.6972],
        [-0.1166, -1.8180],
        [ 0.0613, -2.2020],
        [-1.9586,  0.1936],
        [ 0.3923, -1.2312],
        [ 0.4926,  1.7518],
        [-2.3439,  0.8610],
        [ 0.3369,  0.0918]], device='cuda:0', dtype=torch.float64)
1.6304187343404126
tensor([[[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.1467, 14.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.6923, 15.2861],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 18.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.5084, -0.5848],
        [-1.1823, -0.8056],
        [ 0.5783, -0.2283],
        [-2.7890,  1.2350],
        [ 0.7240,  0.4407],
        [-0.1291, -0.8677],
        [ 1.3575,  0.1045],
        [ 0.1958,  1.5156]], device='cuda:0', dtype=torch.float64)
1.7546623659209661
tensor([[[43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.2758, -0.5929],
        [ 0.1515,  1.9855],
        [-0.1527, -1.7999],
        [-1.4872, -0.1759],
        [-1.6520,  0.0562],
        [ 0.5828, -0.6575],
        [ 1.4384,  0.2226],
        [-1.4555, -0.2348]], device='cuda:0', dtype=torch.float64)
1.9546521081009662
tensor([[[45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [44.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 18.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [44.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5249, -0.6877],
        [-1.4448,  0.0783],
        [ 0.5129,  1.7702],
        [ 0.0258,  2.0574],
        [ 0.4775,  0.7042],
        [ 0.8620, -0.0774],
        [-0.1289, -1.0017],
        [ 0.1933,  0.0415]], device='cuda:0', dtype=torch.float64)
1.4653793504025927
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.7497, -0.4839],
        [ 0.1231,  1.5906],
        [ 0.7328,  1.6328],
        [-0.8228, -0.5761],
        [-1.8652, -0.2689],
        [ 0.6138,  1.5565],
        [ 0.7522,  1.8977],
        [ 0.7596,  0.9701]], device='cuda:0', dtype=torch.float64)
1.5170315702359782
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7472,  0.5141],
        [ 1.4084, -0.2028],
        [ 0.4930,  1.8610],
        [-0.3236, -0.9987],
        [-1.7382, -0.1377],
        [ 0.2780, -1.3827],
        [ 0.6873,  0.0152],
        [ 0.7523,  0.7804]], device='cuda:0', dtype=torch.float64)
1.3392652547626345
tensor([[[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[45.6923, 15.2861],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1015, -0.8928],
        [-1.4174, -0.1741],
        [ 0.5208, -0.4175],
        [-0.2730,  1.9169],
        [ 0.0611, -0.4855],
        [ 0.0651,  1.8085],
        [ 1.1413, -0.1761],
        [ 0.3928,  0.6191]], device='cuda:0', dtype=torch.float64)
1.4519389663127782
tensor([[[45.1467, 14.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4520,  0.7545],
        [-2.6323,  1.0934],
        [ 0.0536,  0.9707],
        [-1.8700,  0.3949],
        [ 0.6466,  0.6384],
        [ 0.7124,  0.1873],
        [-2.3490,  0.7588],
        [ 1.3902, -0.1101]], device='cuda:0', dtype=torch.float64)
1.5227433074242023
tensor([[[46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[44.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5167,  1.1029],
        [-1.7785,  0.3946],
        [ 1.0532,  0.0147],
        [ 0.3901,  1.6738],
        [-0.6933, -0.7792],
        [-0.0953, -0.9098],
        [ 0.3117, -1.8971],
        [ 0.7640,  0.3393]], device='cuda:0', dtype=torch.float64)
1.5618419624346083
tensor([[[44.1467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6923, 15.2861],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464],
         [43.6467, 16.2464],
         [44.6467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1983,  1.1082],
        [ 0.6959,  0.2480],
        [-0.1828,  2.0067],
        [ 0.6019,  0.2895],
        [ 0.3799,  1.4000],
        [ 0.2777, -1.7360],
        [ 0.9773, -0.0297],
        [ 0.4927,  1.5313]], device='cuda:0', dtype=torch.float64)
1.2560433836632399
tensor([[[45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[44.1467, 15.2464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [43.1550, 17.2484]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [44.1467, 15.2464],
         [43.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0668, -0.0812],
        [ 1.1465, -0.0836],
        [-0.1920, -1.9252],
        [ 0.1274, -0.8347],
        [-0.8157, -0.2231],
        [ 0.2253, -2.0806],
        [ 1.3953,  0.2887],
        [-2.2510,  0.7434]], device='cuda:0', dtype=torch.float64)
1.389840816128758
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464]],

        [[45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2810,  1.9948],
        [-1.8032,  0.2806],
        [-1.2868, -0.8182],
        [-1.4509, -0.3746],
        [ 0.2297,  1.5829],
        [ 0.9844,  0.5978],
        [ 1.1717,  0.0836],
        [-0.1733, -1.9387]], device='cuda:0', dtype=torch.float64)
1.7338515554355436
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2494,  0.1861],
        [-1.9166,  0.4117],
        [ 0.8289, -0.5534],
        [ 0.2642, -1.7979],
        [ 0.8864, -0.2414],
        [ 0.5634, -0.6037],
        [ 0.1221,  0.2839],
        [-2.9917,  1.5524]], device='cuda:0', dtype=torch.float64)
1.416314010658878
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[44.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 18.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9264,  0.8569],
        [ 0.8751, -0.2933],
        [-1.2113, -0.8597],
        [ 0.1057,  2.0119],
        [ 0.5385, -0.6039],
        [ 0.0514, -1.2055],
        [-1.8762,  0.0771],
        [ 1.3223,  0.3174]], device='cuda:0', dtype=torch.float64)
1.4795450558363323
tensor([[[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.1467, 18.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8430, -0.4009],
        [ 0.3203, -0.6554],
        [ 0.4320, -0.4807],
        [ 0.2529, -0.2798],
        [ 0.2172,  1.6210],
        [ 0.2655,  0.9301],
        [ 0.6084,  0.7358],
        [ 0.1952, -0.9635]], device='cuda:0', dtype=torch.float64)
1.2082264810154126
tensor([[[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8783,  0.0225],
        [ 1.4614,  0.1579],
        [-0.1218, -0.7721],
        [-0.7402, -0.6697],
        [ 1.4829,  0.1270],
        [ 0.1921,  1.6616],
        [ 0.0733, -0.6557],
        [ 0.0273, -1.2170]], device='cuda:0', dtype=torch.float64)
1.2827252095111938
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0692, -2.1013],
        [ 1.3605,  0.1316],
        [ 0.5554,  0.4167],
        [-1.8147, -0.1754],
        [ 0.4414, -0.3444],
        [ 0.8857, -0.5303],
        [-0.6567, -0.5004],
        [ 1.0542, -0.5214]], device='cuda:0', dtype=torch.float64)
1.385995411871653
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6923, 15.2861],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.1467, 18.2464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 18.7464]],

        [[44.1467, 15.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [43.6467, 16.7464],
         [44.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1397, -2.1513],
        [ 0.9993,  0.0038],
        [-0.5438, -1.0308],
        [ 0.3565,  1.5916],
        [-1.4310, -0.4540],
        [ 1.5136,  0.2394],
        [ 0.2591, -1.5715],
        [-0.9401, -0.5478]], device='cuda:0', dtype=torch.float64)
1.631618919300974
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.1467, 15.2464]],

        [[44.1467, 15.7464],
         [46.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [44.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.1467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0234,  2.0842],
        [-1.6095, -0.0677],
        [-1.7050,  0.3536],
        [ 0.6930,  0.4894],
        [ 0.5118,  1.7155],
        [ 1.1610,  0.3351],
        [ 0.5866,  1.9090],
        [ 0.5099,  1.2044]], device='cuda:0', dtype=torch.float64)
1.4614097329135194
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 14.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 15.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.3440, -0.6399],
        [-1.9089,  0.1845],
        [ 0.7268,  0.4006],
        [ 0.9567, -0.3255],
        [ 0.1627,  0.1044],
        [-0.6712, -1.0209],
        [-1.9740,  0.2459],
        [ 0.8117,  1.8301]], device='cuda:0', dtype=torch.float64)
1.8257354474879048
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [44.1467, 15.2464],
         [45.6467, 18.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.5622, -0.9078],
        [ 0.3087, -0.6133],
        [ 0.1957, -2.1237],
        [-1.8330,  0.4219],
        [ 0.1061, -1.2459],
        [-0.6814, -0.8003],
        [ 0.4441,  1.6725],
        [ 0.3628, -0.6478]], device='cuda:0', dtype=torch.float64)
1.7620761225778052
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5306,  1.4567],
        [ 0.3916,  0.8079],
        [-2.4010,  0.8807],
        [ 0.0699, -0.9105],
        [ 0.4451, -0.3047],
        [ 0.9102, -0.4572],
        [ 0.5296, -0.2598],
        [ 1.1382,  0.2272]], device='cuda:0', dtype=torch.float64)
1.192956068080024
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [44.6467, 15.7464]],

        [[44.6467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.7464],
         [44.1467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.0274,  0.6183],
        [ 1.3198,  0.3532],
        [-2.1843,  0.6558],
        [-2.8847,  1.3532],
        [-0.7695, -0.4641],
        [ 0.0972, -1.8230],
        [ 0.7198,  0.2069],
        [ 1.0483,  0.1118]], device='cuda:0', dtype=torch.float64)
1.6020744513255398
tensor([[[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.2464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.7229, -0.6566],
        [-2.5542,  0.7868],
        [ 0.3012, -1.8287],
        [ 0.0394, -2.1133],
        [-0.4459, -0.7780],
        [ 0.3295, -2.1615],
        [-0.5032, -0.8776],
        [ 0.2072,  1.4920]], device='cuda:0', dtype=torch.float64)
1.861027729979987
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.5636, 14.6820],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2923, -0.6895],
        [ 0.0854,  0.0743],
        [ 0.4171,  1.0753],
        [ 0.2649,  0.9488],
        [ 0.4550, -1.3524],
        [-1.8529, -0.1407],
        [ 1.1724, -0.3301],
        [-0.5159, -1.0182]], device='cuda:0', dtype=torch.float64)
1.5556814177282219
tensor([[[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [45.6467, 18.7464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2051,  0.0379],
        [ 0.5293,  1.0353],
        [ 0.0774,  2.3379],
        [ 0.4355, -1.1069],
        [ 0.2607,  0.4687],
        [ 0.2689, -0.4564],
        [ 1.2492, -0.0728],
        [ 1.0082, -0.3945]], device='cuda:0', dtype=torch.float64)
1.0579427039777007
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 18.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2880,  0.3391],
        [-1.2958, -0.6741],
        [-0.0253,  1.2103],
        [ 0.3624, -2.1590],
        [ 1.0983, -0.1616],
        [ 0.4414,  1.3658],
        [-0.0312, -0.4972],
        [-0.5070, -0.8167]], device='cuda:0', dtype=torch.float64)
1.6012131371431608
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861],
         [46.1467, 15.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861],
         [43.6467, 16.2464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1843, -1.8266],
        [-1.8801, -0.2358],
        [-1.1219, -0.8923],
        [ 0.1517,  2.1903],
        [ 1.0476, -0.1379],
        [ 1.0887, -0.5324],
        [-1.5889, -0.0370],
        [ 0.4249, -0.7234]], device='cuda:0', dtype=torch.float64)
1.7147471670016614
tensor([[[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [44.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0742,  0.0117],
        [ 0.2001, -0.8994],
        [ 0.3534,  1.7741],
        [ 1.0490, -0.3688],
        [ 0.7649,  0.0775],
        [ 0.0199,  1.3594],
        [ 1.0783,  0.0109],
        [-0.4662, -0.7464]], device='cuda:0', dtype=torch.float64)
1.3645731559084293
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [44.1467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861],
         [45.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [46.1467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0537,  1.2369],
        [ 1.1445,  0.1348],
        [-1.7355,  0.3712],
        [ 0.6059,  1.5990],
        [ 0.4545, -1.2964],
        [ 1.1731, -0.0814],
        [ 0.6572,  1.7605],
        [-0.1341, -1.8094]], device='cuda:0', dtype=torch.float64)
1.2725617190212417
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [44.1467, 15.7464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484]],

        [[45.1467, 13.7464],
         [45.6467, 18.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2159, -1.7158],
        [-1.3029, -0.3178],
        [ 0.1188,  1.1636],
        [ 1.2663, -0.3834],
        [ 0.5401,  1.1982],
        [ 1.5555, -0.0756],
        [-0.6540, -0.9981],
        [-1.8822,  0.1278]], device='cuda:0', dtype=torch.float64)
1.586773401276905
tensor([[[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 18.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [44.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9794,  0.5687],
        [ 0.0468,  1.6491],
        [ 0.2749, -0.8632],
        [ 0.4751,  1.2837],
        [ 0.0747,  1.8765],
        [-0.9309, -0.5114],
        [-0.1999, -1.9169],
        [-0.0332,  1.8456]], device='cuda:0', dtype=torch.float64)
1.491387828868666
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6923, 15.2861],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4173,  1.6944],
        [-0.0541, -0.5663],
        [ 0.8065, -0.4751],
        [ 0.6802, -0.5314],
        [-1.1743, -0.5091],
        [ 0.3945,  0.7329],
        [ 0.8561,  1.9452],
        [ 0.3810, -1.8413]], device='cuda:0', dtype=torch.float64)
1.3151787894635616
tensor([[[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.6923, 15.2861],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.7464],
         [44.6467, 15.7464]],

        [[45.1467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.2492,  0.7126],
        [-2.1952,  0.6573],
        [ 0.1811, -0.9526],
        [-0.4919, -0.5934],
        [ 0.1541, -0.8224],
        [ 0.9948, -0.4107],
        [-0.1959, -0.9971],
        [-1.2144, -0.7798]], device='cuda:0', dtype=torch.float64)
1.9911050555233387
tensor([[[45.6467, 18.2464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [43.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.7464]],

        [[45.1467, 18.7464],
         [45.6467, 17.2464],
         [45.6467, 18.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.2291,  1.9118],
        [-0.0237, -2.1275],
        [-1.6176, -0.3980],
        [ 1.3856, -0.0517],
        [-1.4726, -0.1386],
        [-2.7217,  1.1526],
        [-0.6847, -0.7384],
        [ 0.6220,  1.4218]], device='cuda:0', dtype=torch.float64)
1.8194062571680634
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 18.7464]],

        [[43.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [43.6467, 16.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.1245, -0.6490],
        [ 1.2516,  0.3979],
        [ 0.6867, -0.3085],
        [ 1.4053,  0.1487],
        [ 0.7365, -0.3198],
        [ 1.3459, -0.2828],
        [ 0.2858, -0.8122],
        [ 0.3011, -0.2151]], device='cuda:0', dtype=torch.float64)
0.9608128179101838
tensor([[[46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 18.7464],
         [46.1467, 15.7464],
         [44.6467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6923, 15.2861],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2001,  1.4530],
        [ 1.0803,  0.2133],
        [ 0.6138, -0.7709],
        [ 1.1461,  0.0905],
        [-2.3511,  0.7666],
        [-0.6377, -0.5568],
        [ 0.2583,  0.2771],
        [-0.0311,  1.1262]], device='cuda:0', dtype=torch.float64)
1.544135527964519

Validation DataLoader 0: 100%|##########| 412/412 [01:18<00:00,  5.25it/s][AEpoch 0: 100%|##########| 3714/3714 [31:32<00:00,  1.96it/s, loss=3.54, v_num=0, train/loss_step=3.350, train/acc_step=0.000]Epoch 0: 100%|##########| 3714/3714 [31:32<00:00,  1.96it/s, loss=3.54, v_num=0, train/loss_step=3.350, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540]
                                                                          [A/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `training_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Metric val/loss improved. New best score: 3.456
Epoch 0: 100%|##########| 3714/3714 [31:42<00:00,  1.95it/s, loss=3.54, v_num=0, train/loss_step=3.350, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1: 100%|##########| 3714/3714 [31:44<00:00,  1.95it/s, loss=3.54, v_num=0, train/loss_step=3.350, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:   4%|4         | 165/3714 [33:17<11:56:07, 12.11s/it, loss=3.54, v_num=0, train/loss_step=3.350, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:   4%|4         | 165/3714 [33:17<11:56:07, 12.11s/it, loss=3.47, v_num=0, train/loss_step=3.540, train/acc_step=0.125, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:   9%|8         | 330/3714 [34:47<5:56:50,  6.33s/it, loss=3.47, v_num=0, train/loss_step=3.540, train/acc_step=0.125, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649] Epoch 1:   9%|8         | 330/3714 [34:47<5:56:50,  6.33s/it, loss=3.5, v_num=0, train/loss_step=3.860, train/acc_step=0.125, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649] Epoch 1:  13%|#3        | 495/3714 [36:21<3:56:25,  4.41s/it, loss=3.5, v_num=0, train/loss_step=3.860, train/acc_step=0.125, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  13%|#3        | 495/3714 [36:21<3:56:25,  4.41s/it, loss=3.47, v_num=0, train/loss_step=3.530, train/acc_step=0.125, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  18%|#7        | 660/3714 [37:53<2:55:22,  3.45s/it, loss=3.47, v_num=0, train/loss_step=3.530, train/acc_step=0.125, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  18%|#7        | 660/3714 [37:53<2:55:22,  3.45s/it, loss=3.44, v_num=0, train/loss_step=3.550, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  22%|##2       | 825/3714 [39:26<2:18:05,  2.87s/it, loss=3.44, v_num=0, train/loss_step=3.550, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  22%|##2       | 825/3714 [39:26<2:18:05,  2.87s/it, loss=3.45, v_num=0, train/loss_step=3.530, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  27%|##6       | 990/3714 [40:57<1:52:42,  2.48s/it, loss=3.45, v_num=0, train/loss_step=3.530, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  27%|##6       | 990/3714 [40:57<1:52:42,  2.48s/it, loss=3.41, v_num=0, train/loss_step=3.720, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  31%|###1      | 1155/3714 [42:27<1:34:03,  2.21s/it, loss=3.41, v_num=0, train/loss_step=3.720, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  31%|###1      | 1155/3714 [42:27<1:34:03,  2.21s/it, loss=3.35, v_num=0, train/loss_step=2.990, train/acc_step=0.125, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Standard output piped to file:
/home/fwolf/lumen-geoguesser/reports/train-resnext101_32x8d-22-04-21-21-00-14.txt
[{'batch_size': 8,
  'cached_df': 'data/complete/data__spacing_0.5__num_class_55.csv',
  'dataset_dirs': ['data/external/', 'data/raw/'],
  'dataset_frac': 1,
  'image_size': 112,
  'load_in_ram': False,
  'lr': 1e-05,
  'models': ['resnext101_32x8d'],
  'num_workers': 32,
  'output_report': PosixPath('/home/fwolf/lumen-geoguesser/reports'),
  'pretrained': True,
  'quick': False,
  'regression': True,
  'shuffle_before_splitting': False,
  'split_ratios': [0.8, 0.1, 0.1],
  'trainer_checkpoint': None,
  'unfreeze_backbone_at_epoch': 5,
  'unfreeze_blocks': 'all',
  'use_single_images': False,
  'weight_decay': 0},
 {'accelerator': 'gpu',
  'accumulate_grad_batches': None,
  'amp_backend': 'native',
  'amp_level': None,
  'auto_lr_find': False,
  'auto_scale_batch_size': False,
  'auto_select_gpus': False,
  'benchmark': None,
  'check_val_every_n_epoch': 1,
  'checkpoint_callback': None,
  'default_root_dir': None,
  'detect_anomaly': False,
  'deterministic': False,
  'devices': '1',
  'enable_checkpointing': True,
  'enable_model_summary': True,
  'enable_progress_bar': True,
  'fast_dev_run': False,
  'flush_logs_every_n_steps': None,
  'gpus': None,
  'gradient_clip_algorithm': None,
  'gradient_clip_val': None,
  'ipus': None,
  'limit_predict_batches': None,
  'limit_test_batches': None,
  'limit_train_batches': None,
  'limit_val_batches': None,
  'log_every_n_steps': 20,
  'log_gpu_memory': None,
  'logger': True,
  'max_epochs': None,
  'max_steps': -1,
  'max_time': None,
  'min_epochs': None,
  'min_steps': None,
  'move_metrics_to_cpu': False,
  'multiple_trainloader_mode': 'max_size_cycle',
  'num_nodes': 1,
  'num_processes': None,
  'num_sanity_val_steps': 2,
  'overfit_batches': 0.0,
  'plugins': None,
  'precision': 32,
  'prepare_data_per_node': None,
  'process_position': 0,
  'profiler': None,
  'progress_bar_refresh_rate': None,
  'reload_dataloaders_every_n_epochs': 0,
  'replace_sampler_ddp': True,
  'resume_from_checkpoint': None,
  'stochastic_weight_avg': False,
  'strategy': None,
  'sync_batchnorm': False,
  'terminate_on_nan': None,
  'tpu_cores': None,
  'track_grad_norm': -1,
  'val_check_interval': None,
  'weights_save_path': None,
  'weights_summary': 'top'}]
GeoguesserDataModule init
GeoguesserDataset init
GeoguesserDataset init
GeoguesserDataset init
Train, val and test size 26417 3302 3303
Using cache found in /home/fwolf/.cache/torch/hub/pytorch_vision_v0.12.0
Epoch 1:  36%|###5      | 1320/3714 [44:00<1:19:48,  2.00s/it, loss=3.35, v_num=0, train/loss_step=2.990, train/acc_step=0.125, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  36%|###5      | 1320/3714 [44:00<1:19:48,  2.00s/it, loss=3.44, v_num=0, train/loss_step=3.140, train/acc_step=0.125, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py:91: PossibleUserWarning: `max_epochs` was not set. Setting it to 1000 epochs. To train without an epoch limit, set `max_epochs=-1`.
  rank_zero_warn(
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/utilities/parsing.py:107: UserWarning: attribute 'data_module' removed from hparams because it cannot be pickled
  rank_zero_warn(f"attribute '{k}' removed from hparams because it cannot be pickled")
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/torch/cuda/__init__.py:122: UserWarning: 
    Found GPU1 NVIDIA GeForce GTX TITAN Black which is of cuda capability 3.5.
    PyTorch no longer supports this GPU because it is too old.
    The minimum cuda capability supported by this library is 3.7.
    
  warnings.warn(old_gpu_warn % (d, name, major, minor, min_arch // 10, min_arch % 10))
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name     | Type   | Params | In sizes         | Out sizes
-------------------------------------------------------------------
0 | backbone | ResNet | 86.7 M | [8, 3, 112, 112] | [8, 2048]
1 | fc       | Linear | 16.4 K | [8, 8192]        | [8, 2]   
-------------------------------------------------------------------
219 K     Trainable params
86.5 M    Non-trainable params
86.8 M    Total params
347.035   Total estimated model params size (MB)
/home/fwolf/lumen-geoguesser/src/model.py:285: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).
  outs_backbone = [self.backbone(image) for image in image_list]
Epoch 1:  40%|###9      | 1485/3714 [45:30<1:08:18,  1.84s/it, loss=3.44, v_num=0, train/loss_step=3.140, train/acc_step=0.125, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  40%|###9      | 1485/3714 [45:30<1:08:18,  1.84s/it, loss=3.49, v_num=0, train/loss_step=3.260, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  44%|####4     | 1650/3714 [47:00<58:48,  1.71s/it, loss=3.49, v_num=0, train/loss_step=3.260, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]  Epoch 1:  44%|####4     | 1650/3714 [47:00<58:48,  1.71s/it, loss=3.32, v_num=0, train/loss_step=3.520, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Sanity Checking: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:486: PossibleUserWarning: Your `val_dataloader`'s sampler has shuffling enabled, it is strongly recommended that you turn shuffling off for val/test/predict dataloaders.
  rank_zero_warn(
Sanity Checking DataLoader 0:   0%|          | 0/2 [00:01<?, ?it/s]Sanity Checking DataLoader 0: 100%|##########| 2/2 [00:02<00:00,  1.34s/it]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `validation_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
                                                                           Training: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:   0%|          | 0/3714 [00:00<?, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_epoch_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 1:  49%|####8     | 1815/3714 [48:39<50:54,  1.61s/it, loss=3.32, v_num=0, train/loss_step=3.520, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  49%|####8     | 1815/3714 [48:39<50:54,  1.61s/it, loss=3.42, v_num=0, train/loss_step=3.410, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 0:   4%|4         | 165/3714 [01:39<35:36,  1.66it/s]Epoch 0:   4%|4         | 165/3714 [01:39<35:36,  1.66it/s, loss=1.01, v_num=0, train/loss_step=1.160, train/acc_step=0.125]Epoch 1:  53%|#####3    | 1980/3714 [50:17<44:02,  1.52s/it, loss=3.42, v_num=0, train/loss_step=3.410, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  53%|#####3    | 1980/3714 [50:17<44:02,  1.52s/it, loss=3.43, v_num=0, train/loss_step=3.440, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 0:   9%|8         | 330/3714 [03:15<33:25,  1.69it/s, loss=1.01, v_num=0, train/loss_step=1.160, train/acc_step=0.125]Epoch 0:   9%|8         | 330/3714 [03:15<33:25,  1.69it/s, loss=1.04, v_num=0, train/loss_step=1.270, train/acc_step=0.500]Epoch 1:  58%|#####7    | 2145/3714 [51:56<37:59,  1.45s/it, loss=3.43, v_num=0, train/loss_step=3.440, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  58%|#####7    | 2145/3714 [51:56<37:59,  1.45s/it, loss=3.28, v_num=0, train/loss_step=3.400, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 0:  13%|#3        | 495/3714 [04:50<31:30,  1.70it/s, loss=1.04, v_num=0, train/loss_step=1.270, train/acc_step=0.500]Epoch 0:  13%|#3        | 495/3714 [04:50<31:30,  1.70it/s, loss=1.09, v_num=0, train/loss_step=1.450, train/acc_step=0.500]Epoch 0:  18%|#7        | 660/3714 [06:25<29:44,  1.71it/s, loss=1.09, v_num=0, train/loss_step=1.450, train/acc_step=0.500]Epoch 0:  18%|#7        | 660/3714 [06:25<29:44,  1.71it/s, loss=0.992, v_num=0, train/loss_step=1.250, train/acc_step=0.375]Epoch 1:  62%|######2   | 2310/3714 [53:36<32:34,  1.39s/it, loss=3.28, v_num=0, train/loss_step=3.400, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  62%|######2   | 2310/3714 [53:36<32:34,  1.39s/it, loss=3.38, v_num=0, train/loss_step=3.860, train/acc_step=0.125, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 0:  22%|##2       | 825/3714 [08:01<28:04,  1.71it/s, loss=0.992, v_num=0, train/loss_step=1.250, train/acc_step=0.375]Epoch 0:  22%|##2       | 825/3714 [08:01<28:04,  1.71it/s, loss=0.913, v_num=0, train/loss_step=0.915, train/acc_step=0.500]Epoch 1:  67%|######6   | 2475/3714 [55:15<27:39,  1.34s/it, loss=3.38, v_num=0, train/loss_step=3.860, train/acc_step=0.125, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  67%|######6   | 2475/3714 [55:15<27:39,  1.34s/it, loss=3.32, v_num=0, train/loss_step=3.620, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 0:  27%|##6       | 990/3714 [09:37<26:30,  1.71it/s, loss=0.913, v_num=0, train/loss_step=0.915, train/acc_step=0.500]Epoch 0:  27%|##6       | 990/3714 [09:37<26:30,  1.71it/s, loss=0.814, v_num=0, train/loss_step=0.702, train/acc_step=0.875]Epoch 1:  71%|#######1  | 2640/3714 [56:54<23:09,  1.29s/it, loss=3.32, v_num=0, train/loss_step=3.620, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  71%|#######1  | 2640/3714 [56:54<23:09,  1.29s/it, loss=3.3, v_num=0, train/loss_step=3.260, train/acc_step=0.125, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649] Epoch 0:  31%|###1      | 1155/3714 [11:14<24:54,  1.71it/s, loss=0.814, v_num=0, train/loss_step=0.702, train/acc_step=0.875]Epoch 0:  31%|###1      | 1155/3714 [11:14<24:54,  1.71it/s, loss=0.775, v_num=0, train/loss_step=0.732, train/acc_step=0.500]Epoch 1:  76%|#######5  | 2805/3714 [58:35<18:59,  1.25s/it, loss=3.3, v_num=0, train/loss_step=3.260, train/acc_step=0.125, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  76%|#######5  | 2805/3714 [58:35<18:59,  1.25s/it, loss=3.22, v_num=0, train/loss_step=3.390, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 0:  36%|###5      | 1320/3714 [12:51<23:19,  1.71it/s, loss=0.775, v_num=0, train/loss_step=0.732, train/acc_step=0.500]Epoch 0:  36%|###5      | 1320/3714 [12:51<23:19,  1.71it/s, loss=0.824, v_num=0, train/loss_step=0.730, train/acc_step=0.375]Epoch 1:  80%|#######9  | 2970/3714 [1:00:15<15:05,  1.22s/it, loss=3.22, v_num=0, train/loss_step=3.390, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  80%|#######9  | 2970/3714 [1:00:15<15:05,  1.22s/it, loss=3.29, v_num=0, train/loss_step=3.430, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 0:  40%|###9      | 1485/3714 [14:28<21:43,  1.71it/s, loss=0.824, v_num=0, train/loss_step=0.730, train/acc_step=0.375]Epoch 0:  40%|###9      | 1485/3714 [14:28<21:43,  1.71it/s, loss=0.962, v_num=0, train/loss_step=1.290, train/acc_step=0.500]Epoch 1:  84%|########4 | 3135/3714 [1:01:55<11:26,  1.19s/it, loss=3.29, v_num=0, train/loss_step=3.430, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  84%|########4 | 3135/3714 [1:01:55<11:26,  1.19s/it, loss=3.43, v_num=0, train/loss_step=3.350, train/acc_step=0.250, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 0:  44%|####4     | 1650/3714 [16:04<20:06,  1.71it/s, loss=0.962, v_num=0, train/loss_step=1.290, train/acc_step=0.500]Epoch 0:  44%|####4     | 1650/3714 [16:04<20:06,  1.71it/s, loss=0.921, v_num=0, train/loss_step=0.859, train/acc_step=0.500]Epoch 1:  89%|########8 | 3300/3714 [1:03:36<07:58,  1.16s/it, loss=3.43, v_num=0, train/loss_step=3.350, train/acc_step=0.250, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  89%|########8 | 3300/3714 [1:03:36<07:58,  1.16s/it, loss=3.26, v_num=0, train/loss_step=3.040, train/acc_step=0.250, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  89%|########8 | 3302/3714 [1:03:37<07:56,  1.16s/it, loss=3.26, v_num=0, train/loss_step=3.040, train/acc_step=0.250, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1:  89%|########8 | 3302/3714 [1:03:37<07:56,  1.16s/it, loss=3.24, v_num=0, train/loss_step=3.400, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:05<?, ?it/s][Atensor([[[43.6467, 16.2464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[45.1467, 17.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1507, 17.2434],
         [45.1467, 17.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1519, 14.2344]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 18.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [43.1550, 17.2484]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.4536, -0.5110],
        [-0.8674, -0.2147],
        [ 0.1621, -2.1094],
        [-0.7492, -0.7480],
        [ 0.2587, -1.2099],
        [ 0.3625,  1.4681],
        [ 0.0958, -1.7024],
        [-1.4347, -0.0421]], device='cuda:0', dtype=torch.float64)
1.8732353329063407
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [45.1467, 13.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 15.2464],
         [45.1519, 14.2344],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1078, -0.8528],
        [ 0.7962, -0.2346],
        [ 0.7837,  0.8777],
        [ 0.8792, -0.4274],
        [ 0.1462, -0.4190],
        [ 1.2544, -0.4323],
        [-1.9628,  0.4181],
        [-1.0136, -0.8380]], device='cuda:0', dtype=torch.float64)
1.445319147585484
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [44.1467, 15.2464]],

        [[46.1467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[45.1467, 17.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [43.1550, 17.2484]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2413, -2.1113],
        [ 0.9926,  0.2697],
        [ 0.0976,  2.3395],
        [ 1.3225,  0.0676],
        [-1.5464, -0.1797],
        [ 0.4102,  1.7095],
        [-0.3140, -1.1814],
        [ 0.3012, -1.8287]], device='cuda:0', dtype=torch.float64)
1.3972603250988502
tensor([[[44.6467, 15.2464],
         [43.1550, 17.2484],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 16.2464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [45.1467, 14.7464]],

        [[44.1467, 15.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.7890,  1.2350],
        [-0.6766, -0.3577],
        [-0.1151, -1.0881],
        [ 0.5385, -0.7559],
        [ 1.0532,  0.0147],
        [ 1.3337,  0.3725],
        [ 0.8366,  0.4535],
        [ 0.6778, -0.0117]], device='cuda:0', dtype=torch.float64)
1.4847130873458085
tensor([[[45.1467, 17.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 18.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9621, -0.1213],
        [ 0.7829,  0.9165],
        [ 0.2242,  0.2339],
        [ 0.9213,  0.1590],
        [ 0.6498,  1.3218],
        [ 1.1717,  0.0559],
        [ 0.2661, -0.8986],
        [-2.7922,  1.2387]], device='cuda:0', dtype=torch.float64)
1.132437625790168
tensor([[[45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[45.1467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1320, -1.0486],
        [-2.4988,  0.7018],
        [ 0.3058,  1.7219],
        [ 1.2663, -0.3834],
        [ 1.5009,  0.0154],
        [ 1.4130,  0.0184],
        [-1.4248,  0.0539],
        [ 0.2887,  1.5399]], device='cuda:0', dtype=torch.float64)
1.3072830904175106
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.7579, 15.7739],
         [44.1467, 15.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6900,  1.0074],
        [-1.3187, -0.0636],
        [ 1.0360,  0.3933],
        [ 0.0199,  1.3594],
        [ 1.0542, -0.5214],
        [ 0.4469,  1.4569],
        [ 0.8172,  1.7833],
        [-1.6002, -0.1177]], device='cuda:0', dtype=torch.float64)
1.4603294759253003
tensor([[[45.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [43.6467, 16.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [46.1467, 16.2464],
         [45.5636, 14.6820]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.1507, 17.2434],
         [45.1467, 17.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1519, 14.2344]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2942,  0.0307],
        [-1.8989,  0.2848],
        [ 0.4958, -0.7730],
        [-0.0215, -0.9269],
        [ 0.8748,  1.8573],
        [ 0.7731,  1.3047],
        [ 0.1053, -1.2766],
        [-1.3657,  0.0113]], device='cuda:0', dtype=torch.float64)
1.5645068107547515
tensor([[[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 17.2464]],

        [[45.1467, 18.7464],
         [45.1467, 18.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [44.1467, 15.2464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [43.6467, 16.7464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 16.7464]],

        [[45.1467, 18.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.1507, 17.2434],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5013,  1.1856],
        [ 0.0161,  1.5654],
        [ 0.2957, -0.7725],
        [-1.4646, -0.6425],
        [-1.0619, -0.5397],
        [ 0.2886,  0.9864],
        [ 0.4408, -0.4293],
        [ 0.5404,  1.6272]], device='cuda:0', dtype=torch.float64)
1.6694940459524261
tensor([[[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 17.7464],
         [45.1467, 17.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [43.6467, 16.7464],
         [45.6467, 17.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3880, -0.0941],
        [-0.6165, -0.5758],
        [-1.3897, -0.5363],
        [ 0.1110,  2.0200],
        [-0.1925, -1.0112],
        [-2.2510,  0.7434],
        [ 0.5293,  1.0353],
        [-0.7487, -0.3016]], device='cuda:0', dtype=torch.float64)
1.802804325520547
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464],
         [45.1467, 18.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [43.6467, 16.7464],
         [46.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0258,  2.0574],
        [ 0.5586,  1.2899],
        [ 0.1963, -1.3711],
        [-2.4527,  0.9205],
        [-1.3787, -0.5247],
        [ 0.3122, -1.9537],
        [ 0.3513, -0.7954],
        [ 1.1443, -0.4129]], device='cuda:0', dtype=torch.float64)
1.5131405462768863
tensor([[[45.1467, 14.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.5636, 14.6820]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[43.1550, 17.2484],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.5438, -1.0308],
        [ 0.3133,  0.6078],
        [ 0.3337, -0.6794],
        [ 0.6698, -0.3566],
        [ 0.6746,  0.9503],
        [-0.7260, -0.5669],
        [ 0.2358,  1.0769],
        [-0.2471, -1.1551]], device='cuda:0', dtype=torch.float64)
1.6280941267215572
tensor([[[43.6467, 16.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484]],

        [[45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.3201,  0.8836],
        [-1.8170,  0.0850],
        [ 1.4017,  0.1638],
        [-1.9073,  0.4692],
        [ 0.6792,  0.8018],
        [ 1.3591, -0.3216],
        [ 0.9259,  0.5919],
        [-0.0359, -0.0747]], device='cuda:0', dtype=torch.float64)
1.5638730532094836
tensor([[[46.1467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [44.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.1467, 14.7464],
         [45.1519, 14.2344],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.1336, -1.8095],
        [ 0.3763,  0.9687],
        [-0.0494, -0.8126],
        [-0.9232, -0.4267],
        [ 0.2486, -1.9069],
        [ 0.2808, -0.8602],
        [ 0.1969,  1.1230],
        [ 0.1457, -1.3400]], device='cuda:0', dtype=torch.float64)
1.6939800641701739
tensor([[[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.1467, 17.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [44.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [45.1467, 15.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7647,  0.9545],
        [-1.2433, -0.2102],
        [ 0.8535,  0.1716],
        [-1.7887, -0.2351],
        [ 0.1595, -0.9831],
        [ 0.4019,  0.0430],
        [ 1.0495, -0.0769],
        [ 0.4367,  0.5245]], device='cuda:0', dtype=torch.float64)
1.5735378752777622
tensor([[[45.1467, 17.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464],
         [46.1467, 15.7464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 17.7464]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1519, 14.2344]],

        [[45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.7652, -0.3666],
        [ 0.7268, -0.5841],
        [-1.9690,  0.4850],
        [ 0.5232,  1.6238],
        [ 0.8852,  0.4793],
        [ 1.4582,  0.2279],
        [ 1.1394,  0.5921],
        [ 0.4221,  0.2910]], device='cuda:0', dtype=torch.float64)
1.3539161556085553
tensor([[[45.6467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [43.6467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 17.2464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1519, 14.2344]],

        [[44.1467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.2716, -0.8732],
        [-0.6814, -0.8003],
        [ 0.4150,  1.2946],
        [-1.9776,  0.4699],
        [ 0.1451,  0.5899],
        [-1.2472, -0.4473],
        [-1.8822,  0.1278],
        [ 0.4192,  1.5686]], device='cuda:0', dtype=torch.float64)
2.0089458715837463
tensor([[[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[44.1467, 15.2464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [45.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.7464],
         [45.1467, 18.7464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2910, -0.2111],
        [ 0.8908, -0.0455],
        [ 0.4126,  0.5827],
        [ 0.3329,  0.3395],
        [ 0.2920, -0.6884],
        [ 0.5439,  0.3583],
        [ 0.3790,  0.7324],
        [ 0.2597,  2.0319]], device='cuda:0', dtype=torch.float64)
1.219867146906926
tensor([[[45.1467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [43.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 2.5250e-01, -2.0008e+00],
        [ 6.3923e-01, -4.4912e-01],
        [ 2.2396e-01,  1.6896e-01],
        [ 3.9787e-01,  6.6903e-01],
        [ 2.0584e-01, -1.9714e+00],
        [ 2.8603e-01, -9.7736e-04],
        [-1.2161e+00, -1.5192e-01],
        [ 6.1954e-01,  1.8027e+00]], device='cuda:0', dtype=torch.float64)
1.5439925160060541
tensor([[[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1519, 14.2344],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 17.7464]],

        [[45.6467, 17.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1962, -0.3099],
        [-1.3745, -0.3989],
        [ 0.1671, -1.7980],
        [ 0.3159,  1.5176],
        [ 0.8951,  0.2675],
        [ 0.7268,  0.4006],
        [ 0.2411,  0.1643],
        [ 0.8230,  0.5090]], device='cuda:0', dtype=torch.float64)
1.3808587147185079
tensor([[[45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [44.1467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0316, -2.0689],
        [ 0.4969, -0.4071],
        [ 0.1318,  1.0181],
        [ 0.7154,  0.7117],
        [ 1.3195,  0.2155],
        [-1.5707,  0.0069],
        [ 0.4492,  1.2462],
        [ 0.1998, -0.1790]], device='cuda:0', dtype=torch.float64)
1.4551276022883932
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 18.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8885,  0.1445],
        [ 0.2212, -0.4610],
        [ 0.3800, -0.2072],
        [ 0.7742, -0.0368],
        [ 0.8137, -0.0432],
        [ 0.0977, -1.2413],
        [ 0.9206,  0.1978],
        [-1.9036,  0.1640]], device='cuda:0', dtype=torch.float64)
1.2710671732865735
tensor([[[45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2721,  0.4466],
        [-0.6261, -0.9119],
        [-1.2460, -0.4964],
        [ 0.5439, -0.2573],
        [ 0.8751, -0.2933],
        [ 0.6205,  0.7568],
        [ 0.8927,  0.4483],
        [ 0.7984,  0.1354]], device='cuda:0', dtype=torch.float64)
1.469549738442659
tensor([[[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3465, -0.0685],
        [ 0.3492, -1.6301],
        [ 0.3474, -0.6458],
        [ 0.2051,  0.6392],
        [-2.7064,  1.1264],
        [ 0.1332,  1.8609],
        [-0.0683, -1.0928],
        [ 0.4377, -1.8881]], device='cuda:0', dtype=torch.float64)
1.3993904953530305
tensor([[[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [44.6467, 15.2464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861]],

        [[45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.6164, -1.1056],
        [ 0.4791, -0.7745],
        [ 0.5646,  1.5006],
        [-1.9603,  0.6286],
        [ 0.3366, -0.4593],
        [ 0.2072,  1.4920],
        [ 0.9458, -0.4537],
        [ 0.6059,  1.5990]], device='cuda:0', dtype=torch.float64)
1.4756022156825572
tensor([[[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1507, 17.2434]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [43.6467, 16.7464],
         [45.1467, 14.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0139, -0.6422],
        [-1.9740,  0.3803],
        [ 0.0693, -0.6180],
        [ 0.8048,  0.2202],
        [ 0.3015,  0.0113],
        [ 0.2818,  1.5806],
        [ 1.0941, -0.0964],
        [ 0.2095, -1.9754]], device='cuda:0', dtype=torch.float64)
1.4280482455774648
tensor([[[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[45.1467, 17.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 18.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1507, 17.2434],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.9217,  0.6520],
        [ 0.2683, -0.4709],
        [ 0.4958,  0.2253],
        [ 0.2791,  1.1036],
        [-0.0097,  1.3503],
        [ 0.7502,  0.5434],
        [ 0.2184, -1.2026],
        [ 1.0319, -0.2538]], device='cuda:0', dtype=torch.float64)
1.3927090942899882
tensor([[[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[44.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0319, -1.1338],
        [-0.0158, -2.0486],
        [ 0.9204, -0.1880],
        [ 0.1830, -1.7879],
        [ 0.8550, -0.2814],
        [ 0.0083, -0.6674],
        [ 0.3794, -1.5029],
        [-0.0981,  1.8759]], device='cuda:0', dtype=torch.float64)
1.359541792762585
tensor([[[45.6467, 16.2464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1519, 14.2344],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.1467, 16.2464],
         [44.6467, 15.7464]],

        [[45.1467, 14.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 18.2464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3835,  1.8381],
        [ 0.0621, -1.2758],
        [ 0.0155, -2.0085],
        [-1.7175,  0.0708],
        [ 1.2161,  0.3085],
        [-0.0727, -0.6155],
        [ 1.2023, -0.0158],
        [ 0.4926,  1.7518]], device='cuda:0', dtype=torch.float64)
1.4421628612905921
tensor([[[44.1467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [43.1550, 17.2484]],

        [[45.1467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1190, 17.2123]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.4133,  0.3044],
        [ 0.0811,  1.5216],
        [ 0.0698,  1.7988],
        [-0.1452, -1.1354],
        [-0.2429, -0.5427],
        [ 0.7365, -0.3198],
        [-0.0209, -1.8359],
        [ 1.2850, -0.0652]], device='cuda:0', dtype=torch.float64)
1.2554337701792622
tensor([[[44.1467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1519, 14.2344],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.8448, -0.1457],
        [ 0.7009,  0.5924],
        [ 1.2379, -0.0261],
        [-0.6480, -0.8484],
        [ 0.9601,  0.1765],
        [ 0.4770,  1.3150],
        [ 0.3810, -1.8413],
        [-0.0606, -0.0469]], device='cuda:0', dtype=torch.float64)
1.3621875676034085
tensor([[[46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 18.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[43.1550, 17.2484],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[43.1550, 17.2484],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.1883,  0.4469],
        [ 0.7496,  0.7808],
        [ 0.5554,  0.4167],
        [ 0.6029, -0.2324],
        [-1.7050,  0.3536],
        [-0.6580, -1.0411],
        [ 1.0483,  0.1118],
        [ 0.9278,  0.4548]], device='cuda:0', dtype=torch.float64)
1.4379304377960267
tensor([[[44.6467, 15.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 17.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [45.6467, 16.2464],
         [43.1550, 17.2484]],

        [[45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0136, -0.9004],
        [ 0.0760,  2.0692],
        [-1.4079, -0.5888],
        [ 0.6630,  0.0638],
        [ 0.8965,  0.5051],
        [-2.4248,  0.8884],
        [-0.9650, -0.4122],
        [ 0.2579,  1.3054]], device='cuda:0', dtype=torch.float64)
1.7208958099765383
tensor([[[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[45.1467, 17.7464],
         [45.1467, 18.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [43.1550, 17.2484],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.1519, 14.2344]],

        [[46.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.6594, -0.5305],
        [ 1.5485, -0.0349],
        [-0.0201, -2.1014],
        [ 1.2046, -0.0852],
        [ 0.3110, -0.1877],
        [-1.8797, -0.1668],
        [ 1.1830, -0.3594],
        [ 0.4468,  0.0212]], device='cuda:0', dtype=torch.float64)
1.4133149147093522
tensor([[[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[43.6467, 16.7464],
         [45.1467, 17.7464],
         [44.1467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.1467, 13.7464],
         [45.1519, 14.2344]],

        [[46.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[45.6467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4420,  0.6270],
        [-0.3493, -0.9828],
        [-1.3041, -0.0507],
        [ 0.0832, -0.5254],
        [-0.1166, -1.8180],
        [ 0.2964, -1.1321],
        [ 1.2494,  0.1861],
        [ 0.0370, -0.7009]], device='cuda:0', dtype=torch.float64)
1.5074055821760768
tensor([[[43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6923, 15.2861]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [44.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 17.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [43.6467, 16.7464]],

        [[45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.1519, 14.2344]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.4650, -0.6417],
        [ 0.0503, -1.1323],
        [-0.4662, -0.7464],
        [ 0.4173,  1.6944],
        [ 1.2221, -0.0034],
        [ 0.7891, -0.4099],
        [ 0.0261, -1.0547],
        [ 0.2202, -0.4741]], device='cuda:0', dtype=torch.float64)
1.6421465368727566
tensor([[[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4081, -1.6175],
        [-1.3394, -0.5913],
        [ 0.6079,  0.0714],
        [ 0.9247, -0.0338],
        [ 0.6006,  0.2859],
        [ 0.1270,  1.7810],
        [ 0.1019,  0.9617],
        [ 0.4427,  0.6427]], device='cuda:0', dtype=torch.float64)
1.3063687337518353
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [45.1467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.7464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.9018,  1.4224],
        [-1.4174, -0.1741],
        [ 0.2808, -1.3113],
        [ 0.0466,  1.0776],
        [ 0.5658,  1.3073],
        [ 0.3117, -1.8971],
        [-0.3906, -0.8074],
        [-1.5955, -0.2253]], device='cuda:0', dtype=torch.float64)
1.850199910423151
tensor([[[46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 17.7464],
         [45.6467, 18.7464],
         [45.1467, 18.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1519, 14.2344],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6227,  1.4555],
        [ 1.6358,  0.0384],
        [ 1.2377, -0.0503],
        [-0.1291, -0.8677],
        [ 0.3812, -0.6973],
        [-0.3937, -0.9670],
        [-1.1162, -0.4822],
        [ 1.0199, -0.3928]], device='cuda:0', dtype=torch.float64)
1.360506817570874
tensor([[[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [43.1550, 17.2484]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.5185,  0.1404],
        [-1.7382, -0.1377],
        [ 0.4858,  1.2575],
        [-2.5414,  0.9092],
        [-0.9309, -0.5114],
        [ 0.2366, -0.7925],
        [-1.6477, -0.0696],
        [ 0.4145, -1.6895]], device='cuda:0', dtype=torch.float64)
1.9219982052597646
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6025,  1.2551],
        [ 1.2007, -0.2779],
        [ 1.1764,  0.5145],
        [ 0.6051, -0.0882],
        [ 0.7693,  1.7067],
        [ 1.2074, -0.4439],
        [ 0.4533,  1.6675],
        [-0.1633, -0.7213]], device='cuda:0', dtype=torch.float64)
0.7602653915506696
tensor([[[43.6467, 16.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [44.1467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 17.7464],
         [45.1467, 18.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464]],

        [[45.1467, 14.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6923, 15.2861],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]],

        [[45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.7682,  1.2349],
        [ 0.1958,  1.5156],
        [-0.0087, -0.9110],
        [-0.3476, -1.0742],
        [-1.9476,  0.3481],
        [ 1.1292, -0.1683],
        [ 0.1672, -0.1642],
        [ 1.3755,  0.0641]], device='cuda:0', dtype=torch.float64)
1.597308662550013
tensor([[[45.1467, 17.7464],
         [45.6467, 16.2464],
         [44.1467, 15.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 14.7464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5264,  0.4329],
        [ 0.6165,  0.7104],
        [ 1.2516,  0.3979],
        [-0.5535, -0.6814],
        [-1.7305, -0.0412],
        [ 0.4713, -0.6746],
        [ 0.9534, -0.3400],
        [-1.5019,  0.0872]], device='cuda:0', dtype=torch.float64)
1.5731093846998085
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2118, -0.5692],
        [ 0.3866,  0.8420],
        [ 1.1930,  0.3376],
        [-0.0544,  1.8308],
        [-1.8415,  0.0211],
        [ 0.3521, -0.6135],
        [ 0.3628, -0.6478],
        [ 0.4697,  2.0084]], device='cuda:0', dtype=torch.float64)
1.2617207350463986
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [43.7579, 15.7739]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[45.6467, 17.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7977,  0.4427],
        [-3.0976,  1.6008],
        [ 0.1721,  0.6811],
        [-0.7037, -0.4247],
        [-0.2135, -2.0022],
        [ 0.3743, -0.1620],
        [ 0.9107, -0.2839],
        [ 0.2397, -2.0177]], device='cuda:0', dtype=torch.float64)
1.54450306303564
tensor([[[43.6467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [43.1550, 17.2484],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.8934, -0.7201],
        [-1.7942,  0.2582],
        [-1.1569, -0.6343],
        [ 0.1952, -0.9635],
        [ 0.3344,  1.5755],
        [-0.0246, -2.1297],
        [ 0.7718, -0.5984],
        [ 0.6867, -0.3085]], device='cuda:0', dtype=torch.float64)
1.7895560413998055
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 14.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0311,  1.1262],
        [ 0.2854, -1.4015],
        [ 0.6626,  1.5909],
        [-1.4069, -0.2403],
        [ 0.1395, -1.0494],
        [ 0.4826,  0.0227],
        [ 1.2106, -0.3593],
        [ 0.1773, -0.3948]], device='cuda:0', dtype=torch.float64)
1.423381476347489
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [45.1467, 17.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.1747, -0.2148],
        [ 0.6523, -0.1236],
        [ 0.1007,  1.9425],
        [ 0.2617, -0.2138],
        [-0.3651, -0.6587],
        [-1.8109, -0.2446],
        [-1.1027, -0.7596],
        [ 0.0281, -1.0647]], device='cuda:0', dtype=torch.float64)
1.657267345532517
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464]],

        [[43.6467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [43.1550, 17.2484],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 14.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9286,  0.3113],
        [ 0.3835, -0.4707],
        [-1.4917, -0.6078],
        [-0.3410, -1.9886],
        [-1.6904, -0.1930],
        [ 0.7359, -0.2626],
        [ 0.3580, -2.2348],
        [ 0.4673, -0.7026]], device='cuda:0', dtype=torch.float64)
1.5546842198004915
tensor([[[45.1467, 13.7464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.0274,  0.6183],
        [-0.5695, -0.5797],
        [ 0.3403,  1.6927],
        [-1.7934, -0.2743],
        [-1.6636,  0.0503],
        [ 0.3689,  0.0712],
        [ 0.7287,  1.8011],
        [ 1.4053,  0.1487]], device='cuda:0', dtype=torch.float64)
1.746186923092662
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464]],

        [[44.1467, 15.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2285, -0.2805],
        [-2.3747,  0.8324],
        [-0.0487, -0.6434],
        [ 0.4696,  1.0244],
        [-0.1527, -1.7999],
        [ 0.5512,  1.1600],
        [ 0.7716, -0.3680],
        [ 1.2351, -0.4881]], device='cuda:0', dtype=torch.float64)
1.4422949217632945
tensor([[[45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1507, 17.2434],
         [45.1467, 17.7464],
         [45.6467, 17.2464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1519, 14.2344]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[44.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6290,  0.5782],
        [-1.6017, -0.2126],
        [ 0.4163, -2.2715],
        [ 0.7958, -0.2439],
        [-0.1572, -1.7574],
        [ 0.2895, -1.5115],
        [ 0.8588, -0.1935],
        [ 1.3694, -0.2210]], device='cuda:0', dtype=torch.float64)
1.4035645872834808
tensor([[[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484],
         [46.1467, 16.2464]],

        [[45.1467, 18.7464],
         [45.1467, 17.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.1710,  0.5229],
        [ 1.2113,  0.3612],
        [ 0.8168, -0.2078],
        [-1.8329, -0.3156],
        [ 0.0788, -1.1707],
        [ 0.2951,  0.4117],
        [-1.7960,  0.3986],
        [ 0.1287,  2.0960]], device='cuda:0', dtype=torch.float64)
1.5040138196340793
tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[43.6467, 16.7464],
         [46.1467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [43.1550, 17.2484]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.1467, 17.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8113,  0.8737],
        [-0.2362, -0.9667],
        [ 1.2530,  0.4087],
        [-0.3634, -1.0368],
        [-1.3597, -0.4176],
        [ 0.2768, -2.1762],
        [ 1.1465, -0.0836],
        [ 0.0288, -0.1859]], device='cuda:0', dtype=torch.float64)
1.4202432050925624
tensor([[[45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.1519, 14.2344],
         [44.6467, 15.2464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.1636,  1.9045],
        [ 0.0925, -1.8956],
        [-0.5910, -0.8126],
        [-0.7602, -0.2894],
        [ 0.7344,  0.9655],
        [-1.7270, -0.1583],
        [ 1.3878,  0.0832],
        [ 0.0764, -2.1779]], device='cuda:0', dtype=torch.float64)
1.661488426586921
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 17.7464],
         [45.1507, 17.2434]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9715, -0.1470],
        [ 0.0658,  1.2554],
        [ 1.5432,  0.0150],
        [ 0.4703, -0.3607],
        [ 0.0871, -2.0737],
        [ 1.3126,  0.1217],
        [-0.7589, -0.7145],
        [-0.6795, -0.8021]], device='cuda:0', dtype=torch.float64)
1.324259848139775
tensor([[[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 13.7464],
         [43.7579, 15.7739]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 14.7464],
         [45.6923, 15.2861],
         [45.1519, 14.2344],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]],

        [[45.6467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7377, -0.3257],
        [-1.6066, -0.4317],
        [ 0.4328,  1.5960],
        [ 0.6460,  1.3211],
        [-0.1875, -1.0818],
        [ 0.6134,  1.9090],
        [ 0.2714,  0.2802],
        [ 1.2894, -0.1175]], device='cuda:0', dtype=torch.float64)
1.317761768760545
tensor([[[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.1507, 17.2434]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[45.1467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [43.6467, 16.7464],
         [45.1467, 18.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8111,  0.4379],
        [ 0.4756,  1.7585],
        [ 0.3422,  0.4247],
        [-0.3137, -0.7510],
        [ 1.2417,  0.0134],
        [ 0.3589,  0.4038],
        [ 0.1304,  2.2983],
        [-0.6606, -1.0084]], device='cuda:0', dtype=torch.float64)
1.3668198138042915
tensor([[[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 15.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6007,  1.3679],
        [ 1.2234, -0.4425],
        [ 0.4228,  1.8633],
        [ 0.7240,  0.4407],
        [-0.5948, -0.8048],
        [ 0.2682,  1.0139],
        [ 0.8648, -0.2319],
        [ 0.7157,  1.4079]], device='cuda:0', dtype=torch.float64)
1.0061486182176194
tensor([[[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 17.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 15.7464],
         [45.6467, 17.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0953,  0.1328],
        [ 0.4473, -0.3473],
        [ 0.0892,  1.5750],
        [-0.3938, -0.8204],
        [ 1.2427, -0.5339],
        [ 0.9948, -0.4093],
        [ 0.3596,  1.1485],
        [-0.1826, -0.6908]], device='cuda:0', dtype=torch.float64)
1.099276646026106
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 15.2464]],

        [[45.1467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.2464]],

        [[45.1467, 14.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [44.6467, 15.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1507, 17.2434],
         [45.6467, 17.2464],
         [45.1467, 17.7464]],

        [[44.1467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0470, -0.2649],
        [ 0.3425,  0.9565],
        [-0.3947, -0.8064],
        [-1.7368,  0.0253],
        [-1.2031, -0.3988],
        [-1.4254,  0.0062],
        [-0.5916, -0.7739],
        [-1.1482, -0.8522]], device='cuda:0', dtype=torch.float64)
2.0098820749806148
tensor([[[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.1467, 17.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.7464],
         [45.1467, 17.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.6344, -0.2190],
        [ 0.1061, -1.2459],
        [-1.9564,  0.1998],
        [ 0.3295, -2.1615],
        [-1.5867, -0.2748],
        [-0.0113,  1.4008],
        [ 1.1768, -0.3987],
        [ 0.8398,  1.9358]], device='cuda:0', dtype=torch.float64)
1.6688634801462205
tensor([[[46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[45.1467, 17.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[44.1467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4353, -0.3952],
        [ 1.1843,  0.2005],
        [ 0.0269, -2.0490],
        [-1.9672,  0.3689],
        [ 0.1551,  2.1565],
        [ 0.4469, -1.9067],
        [-2.2338,  0.8003],
        [ 0.3011, -0.2151]], device='cuda:0', dtype=torch.float64)
1.546618351727997
tensor([[[44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.1507, 17.2434],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6923, 15.2861]],

        [[45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.8724,  0.5292],
        [ 0.1517,  0.5968],
        [-1.2001, -0.5453],
        [-0.4816, -0.9464],
        [-0.6763, -0.8624],
        [ 0.2928, -1.1371],
        [ 0.7522,  0.6836],
        [-1.8227, -0.0278]], device='cuda:0', dtype=torch.float64)
1.9998476487769845
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 17.2464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484]],

        [[45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2487, -2.0081],
        [ 0.4239, -0.7202],
        [-2.4328,  0.9023],
        [ 0.7573, -0.3082],
        [ 0.4923,  1.4661],
        [-3.1119,  1.6124],
        [ 0.6085, -0.8272],
        [ 1.2831, -0.2486]], device='cuda:0', dtype=torch.float64)
1.2612703614634697
tensor([[[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[45.1467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [45.1467, 17.7464],
         [43.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7854,  1.8999],
        [-1.8866,  0.2556],
        [-1.1902, -0.7967],
        [-1.8978,  0.5783],
        [ 0.1899, -0.1013],
        [ 0.5741,  1.4526],
        [ 0.1983,  0.1247],
        [-1.7829, -0.2992]], device='cuda:0', dtype=torch.float64)
1.958144808320031
tensor([[[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1921,  1.6616],
        [ 0.9305, -0.3879],
        [ 1.4642,  0.1976],
        [ 0.2315,  0.1453],
        [ 0.0712, -0.7301],
        [ 1.1270,  0.2297],
        [ 1.1183, -0.0600],
        [-1.7377, -0.2295]], device='cuda:0', dtype=torch.float64)
1.1701363553567163
tensor([[[43.1550, 17.2484],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 15.7464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [44.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.1467, 15.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 13.7464],
         [45.1467, 14.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2780, -1.6021],
        [-2.9124,  1.4091],
        [-1.5664, -0.0423],
        [ 0.1305,  0.1617],
        [ 0.0624,  1.8152],
        [-1.9791,  0.4752],
        [ 0.2168,  2.0732],
        [ 0.2246,  1.9117]], device='cuda:0', dtype=torch.float64)
1.7234715618103955
tensor([[[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 15.2464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.1467, 17.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6923, 15.2861]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0975,  0.9682],
        [ 0.3129, -1.8271],
        [ 0.2001, -2.2145],
        [ 1.0760,  0.5717],
        [ 0.4320, -0.4807],
        [ 0.4604,  0.4079],
        [ 0.3314, -1.2580],
        [-0.4597, -0.8781]], device='cuda:0', dtype=torch.float64)
1.3823743811445848
tensor([[[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6923, 15.2861]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5115, -0.8183],
        [-1.4471, -0.3084],
        [ 0.2793, -2.0167],
        [-1.2817, -0.6118],
        [ 1.5941,  0.0804],
        [ 0.2772,  1.0256],
        [ 0.5314, -0.7674],
        [ 0.4220, -0.3088]], device='cuda:0', dtype=torch.float64)
1.50807876992498
tensor([[[45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.1467, 15.7464]],

        [[45.6467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.1550, 17.2484],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.1502, -0.4148],
        [ 0.5634,  0.9319],
        [ 0.2692, -1.5565],
        [ 0.0553, -1.8429],
        [ 0.7768,  1.8505],
        [ 0.3384,  0.0311],
        [ 0.3901,  0.2776],
        [-0.7157, -1.0010]], device='cuda:0', dtype=torch.float64)
1.654829272517801
tensor([[[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 18.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4116, -0.6202],
        [ 0.3941,  1.9737],
        [-2.6924,  1.0920],
        [ 0.2593,  1.0758],
        [ 0.2905, -1.0305],
        [ 0.1923,  1.5110],
        [-0.4895, -1.1477],
        [ 0.9773, -0.0297]], device='cuda:0', dtype=torch.float64)
1.4660159105137207
tensor([[[45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464]],

        [[43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0241,  1.3513],
        [-1.7055,  0.3503],
        [-1.9324,  0.5141],
        [-0.0679, -1.9482],
        [ 1.0397, -0.4211],
        [-1.3818, -0.4416],
        [ 0.5659, -0.5933],
        [ 0.3283,  1.9870]], device='cuda:0', dtype=torch.float64)
1.7663360986740313
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 17.7464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [44.1467, 15.7464]],

        [[43.1550, 17.2484],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.8285, -0.5662],
        [-1.5971,  0.1452],
        [ 0.3901,  1.6738],
        [ 0.2780, -1.3827],
        [ 0.2287, -0.2824],
        [ 0.6345,  1.0251],
        [ 0.4999,  0.2643],
        [ 0.3442, -0.1517]], device='cuda:0', dtype=torch.float64)
1.7038201519011702
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4590, -1.3780],
        [-0.9847, -0.6568],
        [ 0.3914,  1.7202],
        [-1.3155, -0.0368],
        [ 0.6923,  0.2333],
        [ 0.2054, -0.2030],
        [ 0.9794,  0.5687],
        [-1.0879, -0.8917]], device='cuda:0', dtype=torch.float64)
1.7110671126352022
tensor([[[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 15.2464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 17.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.4097, -0.2189],
        [ 0.1596, -0.8811],
        [ 1.0358,  0.1714],
        [ 0.5387,  0.4908],
        [ 0.0932,  1.7790],
        [ 1.2670, -0.5246],
        [ 0.7124,  0.1873],
        [-1.7108,  0.1558]], device='cuda:0', dtype=torch.float64)
1.458887166062464
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 14.7464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[45.1467, 18.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 7.7462e-01,  9.5314e-01],
        [ 2.4448e-01,  1.5988e+00],
        [ 6.1577e-01,  8.5744e-02],
        [ 5.0289e-01, -8.1248e-01],
        [-1.1165e+00, -4.0978e-01],
        [ 7.4132e-01, -1.9333e-01],
        [ 8.9422e-01, -4.2559e-01],
        [ 1.4185e-03,  1.6212e+00]], device='cuda:0', dtype=torch.float64)
1.3724499780837538
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464]],

        [[45.1467, 14.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 15.2464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1519, 14.2344]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9414, -0.0588],
        [ 0.7137,  0.6536],
        [-1.8652, -0.2689],
        [ 0.0360,  2.0775],
        [ 0.8309, -0.0776],
        [ 0.4607,  0.6972],
        [-1.6424, -0.1129],
        [-0.6540, -0.5551]], device='cuda:0', dtype=torch.float64)
1.686858869042938
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.1467, 15.2464]],

        [[44.1467, 15.7464],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5466, -0.1550],
        [-1.4067, -0.5320],
        [ 0.1005, -1.3315],
        [ 1.5555, -0.0756],
        [-0.1283, -0.9785],
        [ 0.2408,  0.0467],
        [ 0.1983,  1.8067],
        [ 0.7315, -0.4278]], device='cuda:0', dtype=torch.float64)
1.4628013278167133
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484]],

        [[45.1467, 15.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1306, -2.1143],
        [ 1.3596, -0.3114],
        [ 0.4916, -0.3861],
        [-1.8710, -0.2270],
        [ 0.2215,  1.4968],
        [-0.1308, -1.9466],
        [-0.0301, -2.0112],
        [-2.9917,  1.5524]], device='cuda:0', dtype=torch.float64)
1.512417988201126
tensor([[[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.6329, -0.2217],
        [ 0.1089,  1.7506],
        [-0.9817, -0.8576],
        [-1.0812, -0.2715],
        [-0.0797, -1.1118],
        [ 0.2838,  1.5211],
        [ 0.3976, -0.5924],
        [ 1.3999,  0.1574]], device='cuda:0', dtype=torch.float64)
1.758555977068685
tensor([[[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.7464],
         [43.1550, 17.2484]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [44.1467, 15.2464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 13.7464],
         [43.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3242,  0.8991],
        [-0.0520,  1.2022],
        [-0.6951, -1.0088],
        [ 0.2840, -1.0263],
        [-1.3585, -0.6247],
        [ 1.3459, -0.2828],
        [ 0.3916,  0.8079],
        [ 0.5836,  1.3341]], device='cuda:0', dtype=torch.float64)
1.587471007880473
tensor([[[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 17.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 17.7464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1519, 14.2344],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.1467, 15.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2293,  0.5090],
        [ 0.1650, -1.8897],
        [-0.6668, -0.5152],
        [ 0.2583,  1.0757],
        [-0.0597, -2.1728],
        [ 0.7523,  0.7804],
        [ 0.9428,  0.4438],
        [ 0.2528, -1.8233]], device='cuda:0', dtype=torch.float64)
1.4613133171725843
tensor([[[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 18.2464]],

        [[43.6467, 16.2464],
         [43.1550, 17.2484],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1519, 14.2344],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2072,  0.5194],
        [-1.1410, -0.4013],
        [ 0.4062, -0.0581],
        [ 0.0185, -1.0231],
        [ 0.0587,  1.3518],
        [-2.1531,  0.7109],
        [ 1.0436, -0.3629],
        [ 0.6328,  1.0028]], device='cuda:0', dtype=torch.float64)
1.5733793858689662
tensor([[[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.1467, 15.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [44.1467, 15.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.6267,  0.8932],
        [ 0.0537,  1.2369],
        [-1.2664, -0.0890],
        [-1.9210,  0.1788],
        [-1.4371, -0.0589],
        [ 0.0997,  0.2545],
        [ 0.6437, -0.7367],
        [-1.1320, -0.6625]], device='cuda:0', dtype=torch.float64)
2.053906545619288
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [43.6467, 16.2464]],

        [[45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 17.7464],
         [45.1467, 15.2464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861],
         [45.6467, 15.7464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4407,  1.2374],
        [ 1.5124,  0.2458],
        [ 0.3349,  0.5354],
        [ 0.3565,  1.5916],
        [-0.9207, -0.5090],
        [ 0.5157, -0.3357],
        [-0.7134, -0.9291],
        [ 1.6191, -0.0619]], device='cuda:0', dtype=torch.float64)
1.2473116859666296
tensor([[[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 17.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0911, -1.0928],
        [ 0.4082, -0.3494],
        [-0.2636, -2.0184],
        [ 0.6065,  0.3218],
        [ 0.1832, -2.0967],
        [ 0.3322,  1.9247],
        [ 0.1332,  1.0262],
        [ 0.3979, -0.8162]], device='cuda:0', dtype=torch.float64)
1.3882238225165462
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6923, 15.2861]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.4698, -0.3628],
        [ 0.4704,  2.0847],
        [-0.3101, -0.8453],
        [ 1.2271, -0.2677],
        [ 0.3750, -0.0827],
        [ 0.6026,  1.2552],
        [-0.9568, -0.4241],
        [ 0.7060,  1.6735]], device='cuda:0', dtype=torch.float64)
1.5081956372163268
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1519, 14.2344]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 17.7464],
         [45.1467, 17.7464],
         [45.6467, 18.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 14.7464]],

        [[44.1467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 17.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0759, -0.7464],
        [ 0.9337,  0.2153],
        [ 0.3934,  1.5046],
        [-2.3507,  0.7620],
        [ 0.5469,  1.2317],
        [ 0.6318,  1.6316],
        [-1.0020, -0.8174],
        [ 0.2454,  1.9521]], device='cuda:0', dtype=torch.float64)
1.515576943122134
tensor([[[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 17.7464]],

        [[43.1550, 17.2484],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [42.7950, 17.7353],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1169, -2.0256],
        [ 0.6138,  1.5565],
        [ 0.6534, -0.5045],
        [-1.2964, -0.5840],
        [-2.5340,  0.6965],
        [-0.0402, -2.0631],
        [-1.7581,  0.3968],
        [ 0.0646, -0.0367]], device='cuda:0', dtype=torch.float64)
1.6649851548093184
tensor([[[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [43.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.1550, 17.2484]],

        [[45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9090,  0.1864],
        [ 0.5280,  1.5957],
        [ 0.0905,  1.3047],
        [ 0.3914,  0.5197],
        [ 0.4145,  0.5098],
        [ 0.3483,  0.8755],
        [ 0.9426,  0.5643],
        [-0.7497, -0.4839]], device='cuda:0', dtype=torch.float64)
1.3290053454060333
tensor([[[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [43.6467, 16.2464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6142,  1.3898],
        [ 0.2408,  1.7401],
        [ 0.7748,  0.3002],
        [-0.0866, -0.7757],
        [ 1.0861,  0.5248],
        [ 0.0062, -2.0378],
        [-0.0969, -0.7705],
        [ 1.2660, -0.4651]], device='cuda:0', dtype=torch.float64)
1.1459791810165
tensor([[[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2365,  0.2459],
        [ 0.4529, -0.7133],
        [ 0.5927, -0.3553],
        [ 0.1279,  0.9975],
        [ 0.2414,  1.5112],
        [ 0.0078, -0.4917],
        [-0.4556, -1.0517],
        [ 1.1445,  0.1348]], device='cuda:0', dtype=torch.float64)
1.1385708381309438
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 15.2464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 18.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [45.6467, 18.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1928, -0.8457],
        [-0.3446, -0.6623],
        [-1.2419, -0.1743],
        [ 1.0534, -0.0432],
        [-1.7991,  0.4471],
        [ 0.3821,  1.4384],
        [ 0.9936, -0.2365],
        [ 0.1488, -1.0809]], device='cuda:0', dtype=torch.float64)
1.6265311666074491
tensor([[[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464]],

        [[45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.1282, -2.0385],
        [-0.0564, -1.8934],
        [ 1.2708,  0.0891],
        [ 0.7563, -0.5334],
        [-2.5004,  0.8991],
        [ 1.1323, -0.4398],
        [ 0.0924,  1.8809],
        [ 0.2812, -1.5006]], device='cuda:0', dtype=torch.float64)
1.2996853833131101
tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [44.1467, 15.2464],
         [43.1550, 17.2484]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[45.1467, 14.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.1179, -0.0313],
        [ 0.0519,  0.7399],
        [-2.0714,  0.5824],
        [ 0.5893,  1.4516],
        [ 0.1944,  2.1510],
        [-2.0540,  0.4482],
        [ 0.6241,  0.1413],
        [ 0.2642, -1.7979]], device='cuda:0', dtype=torch.float64)
1.499429772864537
tensor([[[44.1467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1519, 14.2344],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.1195, -0.6527],
        [ 0.2250,  0.1289],
        [ 0.2164,  0.4430],
        [ 0.9993,  0.0038],
        [-0.1561, -0.5772],
        [ 0.4151, -0.0119],
        [ 1.1546,  0.0579],
        [-1.8170,  0.4569]], device='cuda:0', dtype=torch.float64)
1.6711389263132015
tensor([[[46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [46.1467, 16.7464],
         [44.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1479, -0.8438],
        [ 0.9163,  0.6403],
        [-1.1168, -0.8611],
        [ 0.0013, -0.0232],
        [ 0.3832,  0.6522],
        [ 0.7908, -0.3690],
        [-1.2088, -0.0679],
        [ 0.3185,  0.8960]], device='cuda:0', dtype=torch.float64)
1.5726126125368538
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]],

        [[44.1467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1519, 14.2344]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.1351, -1.7696],
        [-1.4309, -0.3823],
        [-0.1196, -1.8438],
        [ 0.8476, -0.1763],
        [ 1.0503, -0.1382],
        [ 0.2945, -0.8227],
        [ 1.0044, -0.5348],
        [ 0.9578, -0.4731]], device='cuda:0', dtype=torch.float64)
1.4947937756599585
tensor([[[43.6467, 16.7464],
         [43.1550, 17.2484],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.6464,  0.9568],
        [ 0.9557, -0.3818],
        [ 1.2787, -0.1623],
        [ 0.0733, -1.9853],
        [ 1.4614,  0.1579],
        [ 0.8620, -0.0774],
        [ 0.6176, -0.7036],
        [ 0.1907, -0.9537]], device='cuda:0', dtype=torch.float64)
1.2015172957137066
tensor([[[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[45.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [43.7579, 15.7739],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1374,  2.2641],
        [-1.9586,  0.1936],
        [ 0.8913,  0.0737],
        [ 0.3013, -0.6648],
        [-0.8547, -0.3979],
        [ 1.1547, -0.0811],
        [-2.5259,  0.7313],
        [-0.5159, -1.0182]], device='cuda:0', dtype=torch.float64)
1.6836344849628233
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464]],

        [[45.6467, 17.7464],
         [43.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.1467, 14.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8011, -0.5118],
        [ 0.9093,  0.9002],
        [ 0.1766, -0.6025],
        [ 1.3896, -0.1055],
        [ 0.4940,  1.4894],
        [ 1.4619,  0.0239],
        [-0.0510, -1.8071],
        [ 1.0345,  0.0922]], device='cuda:0', dtype=torch.float64)
0.8534176021285838
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[45.1467, 17.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0990,  0.9903],
        [-1.5448, -0.3403],
        [-1.1743, -0.5091],
        [ 0.5968,  0.3144],
        [ 0.6628,  1.4895],
        [ 1.0081,  0.6492],
        [ 0.5459,  0.5942],
        [ 1.0420,  0.1229]], device='cuda:0', dtype=torch.float64)
1.5124288380458677
tensor([[[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3350,  0.5814],
        [ 0.0904,  1.1442],
        [ 1.5358,  0.1742],
        [ 0.8108,  1.8586],
        [ 0.0275,  0.0286],
        [-1.1146, -0.6190],
        [-0.0916,  1.8700],
        [ 0.9858,  0.4065]], device='cuda:0', dtype=torch.float64)
1.2855452073501352
tensor([[[44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 17.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 13.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464]],

        [[45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.8499,  1.3249],
        [ 0.6526,  1.4204],
        [ 0.3167, -1.3326],
        [-1.8512, -0.2646],
        [ 0.7981, -0.7129],
        [ 0.7452,  1.7417],
        [-2.0189,  0.5027],
        [-0.8157, -0.2231]], device='cuda:0', dtype=torch.float64)
1.6649953535078497
tensor([[[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [43.1550, 17.2484]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4858, -0.7743],
        [-1.0691, -0.4421],
        [ 0.4413, -0.0462],
        [ 0.9447,  0.8681],
        [-0.4415, -0.7931],
        [ 1.0139, -0.4187],
        [-1.4548, -0.5282],
        [ 0.2871,  1.3413]], device='cuda:0', dtype=torch.float64)
1.7074590759702313
tensor([[[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [43.1550, 17.2484],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]],

        [[43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6380,  1.8621],
        [ 1.4653,  0.1699],
        [-0.0045, -2.0764],
        [ 0.6412,  0.6781],
        [ 1.5533, -0.0960],
        [ 0.7044, -0.2073],
        [-1.0631, -0.5516],
        [-1.3285, -0.2676]], device='cuda:0', dtype=torch.float64)
1.4088803489897672
tensor([[[46.1467, 16.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[45.1467, 14.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5141,  1.5707],
        [ 0.2666,  0.6234],
        [ 0.5902, -0.0842],
        [ 0.2703, -1.0169],
        [ 0.7982,  0.4422],
        [ 0.4863, -1.3372],
        [ 0.8628,  0.8436],
        [ 0.3245, -1.1694]], device='cuda:0', dtype=torch.float64)
1.091530703257347
tensor([[[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 18.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2610, -2.0108],
        [ 0.5068, -0.4197],
        [ 1.1969, -0.4978],
        [-3.0408,  1.5541],
        [ 0.4016, -1.6499],
        [ 0.3203, -0.6554],
        [ 0.4358, -1.3778],
        [ 0.1057,  2.0119]], device='cuda:0', dtype=torch.float64)
1.3337948116713774
tensor([[[44.1467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 17.7464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1280, -0.3658],
        [ 0.1116, -1.8457],
        [ 0.1953, -0.8647],
        [ 0.5138, -0.2894],
        [ 0.1739, -1.7128],
        [-0.0258, -2.1354],
        [-0.1183, -0.7724],
        [ 0.3343,  1.6114]], device='cuda:0', dtype=torch.float64)
1.5219519821562169
tensor([[[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 15.7464]],

        [[45.6467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464]],

        [[43.1550, 17.2484],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 15.2464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2086, -1.4830],
        [-0.3196, -0.5576],
        [ 0.3923, -1.2312],
        [ 0.0658, -1.9412],
        [-0.6962, -0.8809],
        [ 0.5716,  1.3820],
        [ 1.4679,  0.1697],
        [ 0.6311,  1.5517]], device='cuda:0', dtype=torch.float64)
1.3801426280509694
tensor([[[45.1467, 13.7464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 17.7464],
         [44.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 18.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1519, 14.2344]],

        [[44.1467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1240, -1.9181],
        [ 1.3767,  0.0876],
        [-1.1156, -0.6559],
        [ 0.1029, -1.9842],
        [ 0.0153, -1.2386],
        [-0.9401, -0.5478],
        [-0.7526, -0.6497],
        [ 0.4965, -0.4250]], device='cuda:0', dtype=torch.float64)
1.7079905672871107
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 17.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1139,  2.1990],
        [ 0.4147,  0.8892],
        [ 0.1528,  0.9012],
        [-0.1310,  1.8669],
        [ 1.0243, -0.4645],
        [ 0.5934,  1.6069],
        [ 0.0203, -2.0495],
        [ 0.5708,  0.1389]], device='cuda:0', dtype=torch.float64)
1.2303819050134595
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [44.1467, 16.2464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2841,  1.4662],
        [ 0.3990, -0.5944],
        [ 0.3845, -0.5430],
        [ 0.7190, -0.4897],
        [ 0.8920,  0.2895],
        [ 0.3133,  0.3299],
        [ 0.4778, -0.3655],
        [ 0.0353, -1.9602]], device='cuda:0', dtype=torch.float64)
1.2673635829675933
tensor([[[45.1467, 17.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 18.2464],
         [45.6467, 16.2464]],

        [[45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 18.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.9817,  0.6423],
        [-0.1278, -0.9041],
        [ 0.6482, -0.7492],
        [ 0.4133,  1.6529],
        [ 0.4514, -0.0801],
        [ 1.4829, -0.1064],
        [ 0.9461,  0.3793],
        [ 0.4007, -0.0856]], device='cuda:0', dtype=torch.float64)
1.2543527503767895
tensor([[[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464]],

        [[45.1467, 17.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [43.6467, 16.7464],
         [45.1467, 18.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [43.1550, 17.2484]],

        [[45.6467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7272,  1.6576],
        [-1.7728,  0.1513],
        [-1.9126,  0.5419],
        [ 0.2523,  2.0082],
        [ 0.1153, -0.4636],
        [ 0.5924,  1.1078],
        [-1.0514, -0.9682],
        [-2.4699,  0.6580]], device='cuda:0', dtype=torch.float64)
1.8408452609582602
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 17.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[45.1467, 18.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2017, -1.4777],
        [-0.1366, -1.1801],
        [-1.6669,  0.2256],
        [-1.6922, -0.2569],
        [ 0.3992, -1.0112],
        [-1.5981, -0.3973],
        [ 0.8604,  0.6545],
        [ 1.0153,  0.4084]], device='cuda:0', dtype=torch.float64)
1.7602703102589605
tensor([[[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6923, 15.2861],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 18.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9767, -0.3752],
        [ 1.3203, -0.2851],
        [ 1.0490, -0.3688],
        [ 0.3497,  1.8072],
        [ 0.4251, -0.8134],
        [ 0.0786,  0.8095],
        [ 0.4470,  0.4836],
        [ 0.6655, -0.6063]], device='cuda:0', dtype=torch.float64)
0.8552686899239064
tensor([[[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1507, 17.2434],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8289, -0.5534],
        [-0.0986, -1.1645],
        [ 0.2329, -2.1527],
        [ 0.3799,  1.4000],
        [-0.9618, -0.4350],
        [ 1.0855, -0.2426],
        [-1.3044, -0.1853],
        [ 0.7878,  0.7389]], device='cuda:0', dtype=torch.float64)
1.4849251248284145
tensor([[[43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[45.1467, 17.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 18.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6923, 15.2861]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.1519, 14.2344]],

        [[43.6467, 16.2464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.1325,  0.6199],
        [-0.1014, -2.0200],
        [ 0.5166,  1.5105],
        [-1.7873, -0.2346],
        [ 0.1089, -1.3503],
        [-1.7851,  0.0697],
        [ 0.2638, -0.4776],
        [ 0.8098, -0.2537]], device='cuda:0', dtype=torch.float64)
1.7657240322209269
tensor([[[43.6467, 16.2464],
         [45.6467, 17.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [44.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 15.7464],
         [45.1467, 17.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.5350,  0.1154],
        [-0.7695, -0.4641],
        [ 0.3986, -1.1051],
        [ 0.3665,  1.8802],
        [-1.6043, -0.1114],
        [ 0.2526,  0.3086],
        [ 1.2939, -0.0050],
        [ 0.4536, -0.5433]], device='cuda:0', dtype=torch.float64)
1.742645273953123
tensor([[[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.1467, 18.7464],
         [43.6467, 16.2464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464]],

        [[43.1550, 17.2484],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 17.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.3976, -0.1471],
        [-0.3335, -1.9017],
        [ 0.6521,  1.7857],
        [-0.9734, -0.4011],
        [ 0.1869, -0.6424],
        [-1.0119, -0.2839],
        [-2.5414,  0.9092],
        [ 0.1437,  0.8426]], device='cuda:0', dtype=torch.float64)
1.8577847843009208
tensor([[[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [44.6467, 15.2464]],

        [[45.1467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 18.7464],
         [45.1519, 14.2344],
         [46.1467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6923, 15.2861]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 18.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 16.2464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.7709,  1.2429],
        [-0.6603, -0.5288],
        [ 0.1260,  2.3484],
        [ 0.7968,  1.0509],
        [ 0.2688, -0.2774],
        [ 0.9454, -0.0363],
        [ 0.0220,  1.5153],
        [ 0.0772, -1.3558]], device='cuda:0', dtype=torch.float64)
1.6099966438540987
tensor([[[44.1467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464]],

        [[43.6467, 16.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0056, -0.9040],
        [ 0.2254, -1.8300],
        [ 0.7478,  0.6058],
        [ 1.1212, -0.3341],
        [ 0.2296,  0.5178],
        [ 0.6865,  1.0390],
        [ 0.9489,  0.6530],
        [ 0.7928,  0.9709]], device='cuda:0', dtype=torch.float64)
1.0674920478024503
tensor([[[44.6467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 18.7464],
         [45.1467, 13.7464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]],

        [[45.1467, 14.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 17.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.3511,  0.7666],
        [ 0.1274, -0.8347],
        [ 0.7675,  0.2969],
        [ 1.2952, -0.0938],
        [ 0.3301, -1.3335],
        [ 0.0692, -2.1013],
        [ 0.5618,  0.2412],
        [ 1.3860, -0.0896]], device='cuda:0', dtype=torch.float64)
1.2332397351099422
tensor([[[44.6467, 15.2464],
         [45.6467, 15.7464],
         [43.1550, 17.2484],
         [45.1467, 14.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [44.1467, 15.2464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1154, -1.3320],
        [ 0.7542, -0.4814],
        [-0.6082, -0.7428],
        [ 0.0627, -1.7029],
        [ 0.0865, -1.1868],
        [ 0.1517,  2.1903],
        [ 1.3359,  0.2828],
        [ 0.2985, -1.1368]], device='cuda:0', dtype=torch.float64)
1.4026456586989167
tensor([[[43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1519, 14.2344]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [43.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.6770, -0.9814],
        [ 0.1623,  0.4085],
        [ 0.3128, -1.2445],
        [-0.4121, -1.1766],
        [ 0.9699,  0.2874],
        [-0.1920, -1.9252],
        [-0.5108, -0.7561],
        [-0.8124, -0.9296]], device='cuda:0', dtype=torch.float64)
1.8868043986905891
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.1467, 14.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 18.2464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.1467, 18.7464],
         [45.1467, 17.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.4184, -0.1189],
        [-2.8081,  1.3225],
        [-2.1843,  0.6558],
        [-1.2422, -0.1667],
        [ 0.6519,  0.0485],
        [ 0.5931,  1.8762],
        [ 0.2880,  0.3391],
        [-1.5634,  0.1337]], device='cuda:0', dtype=torch.float64)
1.6926866476456472
tensor([[[43.1550, 17.2484],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [44.6467, 15.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.8190,  0.2090],
        [ 1.0403, -0.2073],
        [ 0.2255, -0.1190],
        [ 1.0082, -0.3945],
        [-0.4410, -0.9161],
        [-0.0582,  1.1911],
        [ 0.6084,  0.7358],
        [ 1.4629,  0.1504]], device='cuda:0', dtype=torch.float64)
1.470134519514418
tensor([[[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.5636, 14.6820],
         [45.6467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.7579, 15.7739],
         [44.1467, 15.2464],
         [43.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464]],

        [[44.1467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484]],

        [[45.1467, 18.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464],
         [45.1467, 14.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0432, -0.9569],
        [-1.6267, -0.4283],
        [ 1.3524, -0.1420],
        [-1.8296, -0.3377],
        [ 0.6772,  1.7160],
        [-1.3750, -0.4401],
        [-1.5543,  0.2105],
        [ 1.1322, -0.5616]], device='cuda:0', dtype=torch.float64)
1.804171032107194
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.1507, 17.2434],
         [45.6467, 16.7464],
         [45.6467, 17.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 14.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.2303, -0.1379],
        [ 0.1652, -2.1921],
        [ 0.0235, -1.8047],
        [ 0.1353,  1.1333],
        [ 0.8193,  0.7422],
        [ 1.0201, -0.3946],
        [ 0.1380, -1.0166],
        [ 0.6668,  0.0171]], device='cuda:0', dtype=torch.float64)
1.3453688849712293
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [45.1467, 18.7464]],

        [[45.6467, 18.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [43.1550, 17.2484],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 14.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7439,  1.9003],
        [ 1.2414,  0.2221],
        [ 0.4414,  1.3658],
        [-0.2471, -1.1551],
        [-2.4400,  0.9824],
        [ 0.0360, -0.1904],
        [ 0.3398, -0.6753],
        [-1.8591, -0.2009]], device='cuda:0', dtype=torch.float64)
1.6008816859916908
tensor([[[45.6467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6923, 15.2861]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [45.1467, 17.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0439,  1.8236],
        [ 0.3285,  0.9015],
        [ 0.6017,  0.5298],
        [ 0.1163,  2.3375],
        [ 0.9645,  0.5931],
        [-1.3663, -0.7406],
        [-1.0221, -0.7289],
        [-0.7520, -0.6513]], device='cuda:0', dtype=torch.float64)
1.687886681220491
tensor([[[45.6467, 17.2464],
         [45.1467, 14.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[44.1467, 15.2464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0671,  1.2199],
        [ 0.7612, -0.5975],
        [-1.1816, -0.9024],
        [ 0.8974,  0.3272],
        [ 1.2798, -0.3318],
        [-0.9576, -0.8715],
        [ 1.2416, -0.4651],
        [ 0.3575, -1.4443]], device='cuda:0', dtype=torch.float64)
1.4189641305422285
tensor([[[45.6467, 17.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1519, 14.2344]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484]],

        [[45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 17.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.5908, -0.4166],
        [ 0.6951, -0.6258],
        [ 0.1836,  0.3750],
        [ 0.8594, -0.5522],
        [-2.7217,  1.1526],
        [-1.2510, -0.5433],
        [ 0.2253, -2.0806],
        [ 0.3809, -1.4120]], device='cuda:0', dtype=torch.float64)
1.6779788480083873
tensor([[[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 17.2464]],

        [[45.1467, 17.7464],
         [44.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1507, 17.2434]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.1550, 17.2484]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7870,  0.4380],
        [ 0.2529, -0.2798],
        [ 0.4694,  0.4111],
        [ 0.8394,  0.1483],
        [ 0.7755, -0.3031],
        [ 0.2299, -0.2668],
        [-1.5808, -0.0722],
        [ 0.3006, -1.5398]], device='cuda:0', dtype=torch.float64)
1.50240949854427
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464]],

        [[45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[43.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6923, 15.2861],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3730, -1.1481],
        [-2.9417,  1.5079],
        [ 0.6921, -0.3884],
        [ 0.7940, -0.2156],
        [ 1.0436, -0.1651],
        [ 1.2265,  0.2350],
        [-1.2141, -0.2266],
        [ 0.1164,  0.8900]], device='cuda:0', dtype=torch.float64)
1.3912993381135998
tensor([[[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 17.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[45.1467, 18.7464],
         [45.1467, 14.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[45.6467, 17.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0653,  0.8870],
        [ 0.6981,  1.9495],
        [-0.2730,  1.9169],
        [-1.3567, -0.6268],
        [ 0.2758, -2.2384],
        [-1.6743,  0.2517],
        [ 0.4200,  0.8928],
        [ 0.0045, -0.8692]], device='cuda:0', dtype=torch.float64)
1.7541380176666213
tensor([[[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0101,  1.8240],
        [ 0.0803,  1.5905],
        [ 1.1662,  0.1468],
        [ 0.0250, -1.2523],
        [-0.5150, -1.1296],
        [-1.4029, -0.7048],
        [ 0.4861,  0.1422],
        [ 0.2816, -1.0012]], device='cuda:0', dtype=torch.float64)
1.6648562525140438
tensor([[[44.1467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [44.1467, 15.2464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0254, -1.1716],
        [ 0.6784, -0.1418],
        [ 0.5503,  0.9452],
        [-1.3745, -0.5824],
        [ 0.4154, -0.1714],
        [ 0.4210, -1.3612],
        [-2.7060,  1.1258],
        [-0.0105, -2.0761]], device='cuda:0', dtype=torch.float64)
1.61821041676215
tensor([[[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464]],

        [[45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1251,  2.0225],
        [ 0.4412,  0.2674],
        [ 0.6420, -0.1161],
        [ 0.5099,  1.2044],
        [-0.4437, -0.7982],
        [ 0.3334,  0.9359],
        [ 0.0536,  0.9707],
        [ 0.9874,  0.6236]], device='cuda:0', dtype=torch.float64)
1.1880699714187617
tensor([[[45.1467, 17.7464],
         [43.6467, 16.2464],
         [45.1467, 18.2464],
         [46.1467, 16.7464],
         [43.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1507, 17.2434]],

        [[44.1467, 15.7464],
         [43.1550, 17.2484],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [43.7579, 15.7739]],

        [[46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.6413, -0.7700],
        [ 0.2303,  0.5107],
        [ 0.3906,  0.4364],
        [-0.6015, -0.7318],
        [ 0.1439,  1.5305],
        [-1.3878, -0.3986],
        [-1.4555, -0.2348],
        [ 0.7472,  0.5141]], device='cuda:0', dtype=torch.float64)
1.8762927055267813
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [43.7579, 15.7739],
         [43.6467, 16.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.2958, -0.6741],
        [-1.6813,  0.3132],
        [ 0.2298, -0.2698],
        [ 0.1015, -0.8928],
        [ 0.0404,  1.2643],
        [ 1.2492, -0.0728],
        [-0.7153, -0.7595],
        [ 1.5427, -0.0179]], device='cuda:0', dtype=torch.float64)
1.682007055483665
tensor([[[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2714,  1.8478],
        [ 0.3632, -0.2031],
        [ 0.3990, -1.3454],
        [ 0.9142,  0.8356],
        [ 0.6673,  1.5306],
        [-0.9286, -0.7222],
        [ 0.8325, -0.0666],
        [ 0.8430, -0.4009]], device='cuda:0', dtype=torch.float64)
1.1719470362084397
tensor([[[45.1507, 17.2434],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 18.2464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1519, 14.2344],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.5797, -0.3244],
        [-0.3103, -2.0211],
        [ 1.2524,  0.0706],
        [-1.8032,  0.2806],
        [ 1.2577, -0.2995],
        [ 0.4741,  1.1461],
        [ 0.2626, -1.4003],
        [-0.6540, -0.9981]], device='cuda:0', dtype=torch.float64)
1.6406445938216643
tensor([[[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.1507, 17.2434],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.1653, -1.0442],
        [-0.2292, -0.6388],
        [ 0.6766,  0.6125],
        [ 1.2960, -0.1887],
        [ 1.2728, -0.4841],
        [ 0.7723,  0.3109],
        [-1.6355, -0.2163],
        [-0.0368, -1.8917]], device='cuda:0', dtype=torch.float64)
1.5275140414543669
tensor([[[45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 17.7464],
         [45.1467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 18.2464]],

        [[43.6467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [45.6467, 18.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3265,  0.1271],
        [ 1.3629,  0.2296],
        [ 0.2747,  0.4434],
        [ 0.6066,  0.3218],
        [ 0.7487,  1.2895],
        [-1.0814, -0.5822],
        [-1.7019, -0.0958],
        [ 0.3296,  0.6557]], device='cuda:0', dtype=torch.float64)
1.3524950200590131
tensor([[[45.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 14.7464]],

        [[43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [44.1467, 15.2464],
         [45.1467, 13.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.1550, 17.2484],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1507, 17.2434]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.4360,  0.9107],
        [ 0.2863, -1.3631],
        [-1.2136, -0.7583],
        [ 0.4669, -0.7905],
        [ 1.2120,  0.5263],
        [ 0.4838, -0.3784],
        [ 0.2861, -1.9807],
        [-1.4989, -0.1615]], device='cuda:0', dtype=torch.float64)
1.6793829241180993
tensor([[[45.1467, 18.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.1467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 14.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464]],

        [[45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.0199, -0.6215],
        [ 0.7328,  1.6328],
        [-0.6243, -0.9128],
        [-0.9902, -0.3789],
        [ 0.7596,  0.9701],
        [ 0.2029, -2.0685],
        [ 0.7306,  0.9289],
        [ 0.1921,  1.7849]], device='cuda:0', dtype=torch.float64)
1.5518874071084436
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1190, 17.2123],
         [45.6467, 17.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464]],

        [[45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 18.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9931, -0.0937],
        [ 0.2828,  0.1559],
        [ 0.6032, -1.4348],
        [-2.4225,  0.8324],
        [-2.0000,  0.4582],
        [ 0.8564,  0.1757],
        [ 0.6198,  0.7659],
        [-1.8802, -0.3139]], device='cuda:0', dtype=torch.float64)
1.590057982456282
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.9028, -0.5955],
        [ 0.2365, -0.2083],
        [-0.6847, -0.7384],
        [ 0.8814,  0.6300],
        [ 1.2219,  0.5362],
        [ 0.6876, -0.2985],
        [ 0.7163,  0.1404],
        [ 0.2930,  1.5133]], device='cuda:0', dtype=torch.float64)
1.199781907562902
tensor([[[45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2726,  0.9711],
        [ 0.4612,  0.2360],
        [ 0.8466, -0.1624],
        [ 0.2658,  1.1853],
        [ 0.2060,  1.6039],
        [ 0.6197,  0.5910],
        [-0.1657,  1.9991],
        [-1.7355,  0.3712]], device='cuda:0', dtype=torch.float64)
1.5080830143121045
tensor([[[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [45.6467, 17.7464],
         [45.1467, 15.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1150, -0.9266],
        [-0.4496, -1.0490],
        [ 0.4086, -0.2890],
        [-1.4509, -0.3746],
        [ 0.3624, -2.1590],
        [-0.1764, -1.7884],
        [-0.0137, -0.9385],
        [ 1.2326,  0.1209]], device='cuda:0', dtype=torch.float64)
1.6211927621243971
tensor([[[43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1519, 14.2344],
         [45.1467, 14.7464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 16.2464]],

        [[44.1467, 15.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.4082,  0.9014],
        [ 0.2363,  1.0251],
        [ 1.3240, -0.3063],
        [ 0.4067,  0.3211],
        [-0.6521, -0.8489],
        [-1.8797,  0.5316],
        [-1.5954,  0.1824],
        [ 0.2226, -0.8711]], device='cuda:0', dtype=torch.float64)
1.821897416720763
tensor([[[45.1467, 14.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.1467, 17.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [43.1550, 17.2484]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3681, -1.9197],
        [-1.7063,  0.1986],
        [ 0.3686, -0.1484],
        [ 0.5208, -0.6153],
        [ 0.0072, -1.9922],
        [-0.1460, -0.5842],
        [-1.9447,  0.6489],
        [ 0.3110,  1.0120]], device='cuda:0', dtype=torch.float64)
1.747189293798138
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 17.7464],
         [44.1467, 15.2464]],

        [[45.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464]],

        [[43.7579, 15.7739],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1507, 17.2434]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[43.6467, 16.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 17.7464],
         [43.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2400, -0.0693],
        [ 0.1787,  1.9237],
        [ 0.5385, -0.6039],
        [ 0.1988,  1.7800],
        [ 0.1687, -1.9945],
        [-0.0295,  1.9388],
        [ 0.7182,  0.9552],
        [-0.1562, -2.0442]], device='cuda:0', dtype=torch.float64)
1.3092910936514222
tensor([[[46.1467, 16.2464],
         [45.1467, 17.7464],
         [43.6467, 16.2464],
         [44.1467, 16.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.7464],
         [46.1467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 15.7464],
         [43.1550, 17.2484],
         [43.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.4098, -0.1460],
        [ 0.4491, -0.2734],
        [ 0.4520,  0.7545],
        [-0.0282,  1.1534],
        [ 0.0281,  0.0238],
        [-1.1959, -0.7965],
        [ 1.5057,  0.2733],
        [ 0.9709,  0.1663]], device='cuda:0', dtype=torch.float64)
1.5412114429596675
tensor([[[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 17.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 13.7464],
         [45.1467, 14.7464]],

        [[45.1467, 17.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1149, -0.5702],
        [ 0.2559, -2.2361],
        [-1.1823, -0.8056],
        [ 0.3452, -0.4687],
        [ 0.5496, -0.8646],
        [ 1.4084, -0.2028],
        [ 0.4373,  0.9033],
        [ 0.6534, -0.0325]], device='cuda:0', dtype=torch.float64)
1.3317750889433597
tensor([[[45.1467, 18.7464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [45.1467, 17.7464]],

        [[45.1467, 17.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.7800, -0.3089],
        [-1.5889, -0.0370],
        [ 0.3513, -0.6520],
        [ 1.5050,  0.2724],
        [ 0.5634, -0.6037],
        [ 0.4270,  1.8178],
        [ 0.7640,  0.8371],
        [ 0.4268,  0.8005]], device='cuda:0', dtype=torch.float64)
1.5574906386722005
tensor([[[45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 17.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8773,  0.8930],
        [-2.5322,  0.7367],
        [ 1.1325,  0.5163],
        [-0.0128, -0.9130],
        [ 1.3558,  0.1950],
        [-0.4814, -0.9956],
        [-0.0451,  1.8165],
        [ 0.1764, -1.9728]], device='cuda:0', dtype=torch.float64)
1.3316615140344328
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 17.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6923, 15.2861]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1519, 14.2344]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8062, -0.3507],
        [ 0.4355, -1.1069],
        [-1.1906, -0.1872],
        [ 0.8851,  0.1640],
        [ 0.3443, -0.9203],
        [ 0.7846, -0.3906],
        [-0.1840, -1.1069],
        [ 0.0403, -1.9964]], device='cuda:0', dtype=torch.float64)
1.4905506313952737
tensor([[[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 18.7464]],

        [[45.1467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [44.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1236,  0.8416],
        [ 0.2306, -1.3866],
        [ 0.0887, -1.0722],
        [-0.7566, -0.7796],
        [ 0.1868,  0.3411],
        [ 0.2794,  0.0318],
        [-2.2012,  0.5826],
        [ 0.8577, -0.1261]], device='cuda:0', dtype=torch.float64)
1.6092299437907016
tensor([[[45.1467, 18.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[44.1467, 15.7464],
         [45.6467, 17.7464],
         [46.1467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 18.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 14.7464],
         [45.5636, 14.6820]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0694,  1.5899],
        [ 0.1048,  0.7736],
        [-2.6298,  0.9928],
        [ 0.7580,  0.5068],
        [ 0.2463, -1.2610],
        [ 0.9628,  0.8425],
        [ 0.5744,  0.2168],
        [-1.2554, -0.2563]], device='cuda:0', dtype=torch.float64)
1.5397312398610654
tensor([[[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.2464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [43.6467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4065,  0.4934],
        [ 0.5374,  1.3171],
        [ 0.1882,  0.7989],
        [ 0.2739, -0.6181],
        [-2.4780,  0.9749],
        [ 0.2714,  0.2802],
        [ 0.1991, -0.2499],
        [-1.0624, -0.9172]], device='cuda:0', dtype=torch.float64)
1.6447608809606717
tensor([[[46.1467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[45.6467, 16.2464],
         [45.1467, 17.7464],
         [43.6467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 17.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.1467, 14.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6923, 15.2861]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9367, -0.2912],
        [ 0.6304, -0.4825],
        [ 0.5484, -0.2747],
        [ 0.5102,  1.7136],
        [ 1.0820,  0.3007],
        [ 0.1082,  1.2914],
        [-2.5056,  0.7298],
        [-0.3979, -0.9559]], device='cuda:0', dtype=torch.float64)
1.262341559132816

Validation DataLoader 0:  40%|####      | 165/412 [00:44<01:06,  3.72it/s][AEpoch 1:  93%|#########3| 3467/3714 [1:04:22<04:35,  1.11s/it, loss=3.24, v_num=0, train/loss_step=3.400, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 18.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1519, 14.2344]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [43.6467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4889,  1.3081],
        [-1.4218,  0.0047],
        [ 0.6138, -0.7709],
        [-0.1999, -1.9169],
        [ 1.3609,  0.3440],
        [ 0.1735, -0.4144],
        [-0.9556, -0.7545],
        [-1.7870,  0.1563]], device='cuda:0', dtype=torch.float64)
1.7955760107895335
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [43.6467, 16.7464],
         [43.7579, 15.7739]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [45.1467, 15.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 13.7464],
         [45.1467, 14.7464]],

        [[45.1467, 14.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464]],

        [[45.6467, 18.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.1837, -0.7756],
        [ 0.5988, -0.4555],
        [-1.4448,  0.0783],
        [-2.2348,  0.6307],
        [-0.5831, -0.5726],
        [ 0.2715,  0.4055],
        [-0.7777, -0.4514],
        [ 0.2205,  1.1193]], device='cuda:0', dtype=torch.float64)
1.9985788014343422
tensor([[[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861],
         [45.1467, 14.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 17.7464],
         [45.1467, 17.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 18.2464],
         [44.1467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 18.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.9409, -0.7195],
        [ 0.7029,  1.8922],
        [-0.7244, -0.7442],
        [-0.6502, -0.7931],
        [ 0.5061,  1.0402],
        [ 0.0592, -1.8269],
        [ 0.1432,  0.0750],
        [-3.0413,  1.5522]], device='cuda:0', dtype=torch.float64)
1.727757145321865
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464],
         [45.1467, 14.7464]],

        [[44.1467, 15.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.4459, -0.7780],
        [-1.5096, -0.5610],
        [ 0.5824,  0.9110],
        [ 0.7730,  0.2634],
        [-0.2975, -2.0104],
        [ 0.4715,  1.6731],
        [-1.4516, -0.3830],
        [ 0.3816,  1.4000]], device='cuda:0', dtype=torch.float64)
1.7517972737070537
tensor([[[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]],

        [[43.1550, 17.2484],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.1467, 17.7464],
         [46.1190, 17.2123],
         [45.1467, 18.7464],
         [45.6467, 16.7464],
         [45.1507, 17.2434]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4065,  1.5424],
        [-2.1352,  0.6848],
        [ 0.2806, -2.1513],
        [-1.8700,  0.3949],
        [-0.5994, -0.5156],
        [ 0.3716,  0.5595],
        [ 0.5397,  1.6991],
        [-0.3246, -0.9615]], device='cuda:0', dtype=torch.float64)
1.7516603842668974
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [45.1467, 17.7464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 17.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[45.6467, 17.7464],
         [45.1467, 17.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[43.6467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.4663, -0.0606],
        [-0.5469, -0.6731],
        [ 0.2571,  1.5291],
        [-1.5288,  0.2367],
        [ 1.1889, -0.1867],
        [-2.2545,  0.7725],
        [ 0.7266,  0.4384],
        [-1.0347, -0.8150]], device='cuda:0', dtype=torch.float64)
1.6462855873559312
tensor([[[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 18.2464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [43.1550, 17.2484],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 18.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1519, 14.2344],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6539, -0.2231],
        [-1.7695, -0.1163],
        [ 0.0776,  1.3857],
        [ 0.8000, -0.5555],
        [ 0.4885,  1.2608],
        [ 1.1679, -0.6122],
        [ 0.7945,  1.7901],
        [-2.4010,  0.8807]], device='cuda:0', dtype=torch.float64)
1.346671614222124
tensor([[[45.1467, 13.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 18.2464],
         [45.1467, 17.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]],

        [[45.1467, 14.7464],
         [43.6467, 16.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.1380, -2.0338],
        [-0.0421, -0.5755],
        [ 0.4007, -1.6370],
        [-0.7402, -0.6697],
        [ 0.6317,  0.4914],
        [ 0.5772,  1.4932],
        [ 0.2042, -0.3894],
        [-1.2917, -0.6877]], device='cuda:0', dtype=torch.float64)
1.696441338626125
tensor([[[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [46.1467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5045, -1.3422],
        [ 0.1177, -2.0311],
        [ 0.1061, -0.5649],
        [-1.3553, -0.3171],
        [ 1.2806,  0.3585],
        [ 0.1964,  1.4769],
        [ 1.5474,  0.0313],
        [ 0.8065,  0.0900]], device='cuda:0', dtype=torch.float64)
1.196604478019145
tensor([[[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 15.2464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [43.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 15.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3565, -0.1731],
        [-1.0424, -0.7936],
        [ 0.2016, -0.3134],
        [-0.7229, -0.6566],
        [ 1.1388,  0.0953],
        [ 0.4920,  0.4648],
        [-0.0357, -0.0468],
        [ 0.7844,  0.2409]], device='cuda:0', dtype=torch.float64)
1.3521607005702743
tensor([[[45.1467, 13.7464],
         [45.1467, 14.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[45.1467, 17.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [44.1467, 15.7464],
         [43.7579, 15.7739]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1519, 14.2344],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[45.6467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0920, -0.6635],
        [ 0.7042,  0.3475],
        [-0.0895,  2.0748],
        [ 0.0600,  1.3385],
        [-1.8330,  0.4219],
        [ 1.2325, -0.0845],
        [ 1.1744,  0.3979],
        [ 0.8398,  0.4970]], device='cuda:0', dtype=torch.float64)
1.4364159511968686
tensor([[[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.2464],
         [45.1467, 18.7464]],

        [[45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[45.1467, 14.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464]],

        [[45.1467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3534,  1.7741],
        [ 0.3303,  0.6544],
        [ 0.8098, -0.2011],
        [-0.0460, -2.0241],
        [ 0.3635, -0.7926],
        [ 0.2757,  1.2580],
        [-0.6964, -0.8002],
        [-1.6618,  0.3144]], device='cuda:0', dtype=torch.float64)
1.671664183340367
tensor([[[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 18.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 17.7464],
         [43.1550, 17.2484]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.3181, -0.9682],
        [ 0.5944,  1.5830],
        [-2.7302,  1.1716],
        [ 0.7543, -0.3613],
        [-1.6500,  0.0605],
        [-1.3066, -0.4573],
        [ 0.2898,  1.4159],
        [ 0.8019,  0.7802]], device='cuda:0', dtype=torch.float64)
1.7032179006874268
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[43.1550, 17.2484],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[45.1467, 17.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.1467, 18.2464]],

        [[45.6467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2673, -0.7753],
        [ 0.0311, -0.0109],
        [-1.7205,  0.1723],
        [ 0.3325,  1.0534],
        [ 1.2748, -0.2640],
        [ 0.1412, -1.8548],
        [ 0.2151, -0.3143],
        [ 0.0334,  0.8850]], device='cuda:0', dtype=torch.float64)
1.6900728667146745
tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0317, -0.5996],
        [ 0.6733, -0.4694],
        [-0.5076, -0.8170],
        [-0.8135, -0.8757],
        [-0.7233, -0.7700],
        [ 0.7820, -0.4441],
        [ 0.0637,  1.1574],
        [-1.3710, -0.2383]], device='cuda:0', dtype=torch.float64)
1.8587175833454985
tensor([[[45.6467, 15.7464],
         [45.1519, 14.2344],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [43.1550, 17.2484],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8411, -0.2413],
        [ 0.1844,  1.7437],
        [ 0.0234, -1.8016],
        [-2.2040,  0.5607],
        [ 0.1957, -2.1237],
        [-1.6558,  0.2675],
        [ 0.4682,  0.6220],
        [ 0.4126,  1.4759]], device='cuda:0', dtype=torch.float64)
1.5912679419222293
tensor([[[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464]],

        [[44.1467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 17.7464]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.1467, 18.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.1467, 14.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.1467, 14.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4941,  0.0210],
        [ 0.0942,  0.9261],
        [ 0.1321,  1.5285],
        [-0.2416, -1.9764],
        [-1.5791, -0.0700],
        [-0.6828, -0.7997],
        [ 1.2898, -0.1074],
        [ 0.2860, -0.8220]], device='cuda:0', dtype=torch.float64)
1.6189888811555446
tensor([[[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.7567,  0.2639],
        [ 0.6004, -0.6757],
        [ 1.3575,  0.1045],
        [-0.0316, -2.0105],
        [ 0.8050,  1.7869],
        [-0.5952, -1.1160],
        [-1.9706,  0.2946],
        [-1.4862, -0.1896]], device='cuda:0', dtype=torch.float64)
1.7695174019652893
tensor([[[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [43.1550, 17.2484],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[43.6467, 16.7464],
         [45.1467, 17.7464],
         [43.6467, 16.2464],
         [45.6467, 17.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.4639, -0.3470],
        [ 0.0657,  0.6553],
        [ 1.0921,  0.1052],
        [-1.3472, -0.1227],
        [ 0.0611, -0.4855],
        [ 1.4873,  0.3174],
        [-2.1964,  0.7428],
        [ 0.0903,  1.0081]], device='cuda:0', dtype=torch.float64)
1.7430102357273025
tensor([[[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 17.7464],
         [44.1467, 15.2464]],

        [[43.6467, 16.2464],
         [44.6986, 14.8933],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [43.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 15.7464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1519, 14.2344],
         [44.1467, 15.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0604, -0.6134],
        [ 0.5118,  1.7155],
        [-0.5450, -1.1355],
        [ 0.6319,  0.1503],
        [ 1.4384,  0.2226],
        [-1.2561, -0.3879],
        [ 0.8290, -0.1365],
        [ 0.6214, -0.7252]], device='cuda:0', dtype=torch.float64)
1.6031105401634098
tensor([[[46.1467, 16.2464],
         [45.1519, 14.2344],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5684,  0.2089],
        [-0.1125, -1.1462],
        [ 0.6840, -0.8009],
        [ 1.0783,  0.0109],
        [-1.4943, -0.4878],
        [-1.7705,  0.1580],
        [ 0.0078, -0.8557],
        [ 1.2924, -0.1021]], device='cuda:0', dtype=torch.float64)
1.6078147512010292
tensor([[[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [45.1467, 18.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [44.1467, 15.2464],
         [44.1467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.1507, 17.2434]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5200,  1.7011],
        [ 0.1125,  0.6492],
        [ 0.3741, -0.6357],
        [-0.6819, -0.9129],
        [ 0.7976, -0.0512],
        [-0.6582, -0.7961],
        [-2.7191,  1.1655],
        [-0.7024, -0.4606]], device='cuda:0', dtype=torch.float64)
1.7100864157359998
tensor([[[43.6467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [43.1550, 17.2484]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.1077, -0.6676],
        [-1.8795, -0.2398],
        [ 1.4436, -0.0187],
        [-1.5629, -0.1995],
        [ 0.7214, -0.7284],
        [ 0.5624,  0.4267],
        [ 0.1998,  1.2426],
        [-2.0417,  0.5440]], device='cuda:0', dtype=torch.float64)
1.8024290867464168
tensor([[[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0854,  0.0743],
        [ 0.2589,  0.2536],
        [ 0.1837,  0.8175],
        [ 0.1939, -0.3103],
        [-0.3211, -0.7601],
        [-1.1942, -0.7228],
        [ 0.0696, -0.8846],
        [ 0.9240,  0.5417]], device='cuda:0', dtype=torch.float64)
1.7857938939373725
tensor([[[45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 13.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0802, -1.1923],
        [-0.0486, -1.1885],
        [-0.4821, -0.9940],
        [ 0.4628, -0.1184],
        [ 0.6929,  0.4856],
        [ 0.6066,  0.6623],
        [ 0.2665, -1.3985],
        [-0.0909,  1.9488]], device='cuda:0', dtype=torch.float64)
1.4171121143676553
tensor([[[46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 17.7464],
         [44.1467, 15.7464],
         [45.1467, 17.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861]],

        [[45.6467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.3307, -0.6882],
        [ 0.1613,  0.3755],
        [-2.4378,  0.9577],
        [-0.0368,  1.8173],
        [ 0.1290, -0.8813],
        [-0.5045, -1.0081],
        [ 0.6539, -0.5583],
        [ 0.3133,  0.3299]], device='cuda:0', dtype=torch.float64)
1.6716026921460836
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.5636, 14.6820]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9100, -0.4221],
        [ 0.3635,  0.6148],
        [ 0.7888,  0.2542],
        [ 0.2708,  0.6573],
        [ 0.5744, -0.3497],
        [-0.9108, -0.7205],
        [ 0.6189, -0.1032],
        [ 0.2159, -1.7158]], device='cuda:0', dtype=torch.float64)
1.424811621194674
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 15.2464],
         [44.1467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1519, 14.2344]],

        [[45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.2877,  1.9503],
        [ 0.7243,  1.4478],
        [-1.7254, -0.2003],
        [-0.6567, -0.7404],
        [ 0.6310,  1.3654],
        [ 0.2818,  1.5207],
        [ 0.4268, -1.7093],
        [ 0.3853,  0.8425]], device='cuda:0', dtype=torch.float64)
1.5724026078925906
tensor([[[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [44.1467, 15.2464],
         [45.1467, 18.7464]],

        [[45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.1467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464]],

        [[45.6467, 17.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.0425, -0.9451],
        [ 0.1167, -1.0748],
        [-1.7829,  0.2449],
        [-0.0368,  1.6483],
        [-1.5215,  0.1636],
        [-1.3699, -0.7206],
        [ 0.8084, -0.6925],
        [ 0.0464,  1.1534]], device='cuda:0', dtype=torch.float64)
2.0375929253421146
tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [44.6467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3087, -0.6133],
        [ 0.3805, -2.2261],
        [ 1.0429,  0.0356],
        [ 0.6934,  0.4966],
        [-0.2723, -0.8797],
        [ 0.0250,  1.5216],
        [ 0.0870,  1.9320],
        [ 0.3910,  0.6367]], device='cuda:0', dtype=torch.float64)
1.238034520343237
tensor([[[45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 13.7464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.6223, -0.7835],
        [ 0.2127,  1.5393],
        [ 0.4246, -1.1311],
        [-0.5137, -0.7765],
        [ 0.1492,  1.1741],
        [ 0.3081, -0.7407],
        [-0.8186, -0.6743],
        [ 0.4229, -2.2511]], device='cuda:0', dtype=torch.float64)
1.675416894791367
tensor([[[45.1467, 18.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 15.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6923, 15.2861],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.0656, -0.7459],
        [-1.2527, -0.1482],
        [ 0.7198,  0.2069],
        [ 1.1554, -0.4165],
        [ 0.4422, -0.4638],
        [ 0.7164, -0.4859],
        [ 0.2188, -2.1076],
        [ 0.4021, -0.8150]], device='cuda:0', dtype=torch.float64)
1.365153404368289
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.1467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.5912,  0.2742],
        [ 0.4146, -1.6894],
        [ 0.9102, -0.4572],
        [ 0.0774,  2.3379],
        [ 0.2356,  1.5616],
        [-0.0650, -0.6253],
        [-1.3558, -0.2324],
        [-1.1825, -0.6666]], device='cuda:0', dtype=torch.float64)
1.797618732072616
tensor([[[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 17.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8869,  0.9357],
        [ 1.4502,  0.0190],
        [-1.0091, -0.8479],
        [-0.4033, -0.7969],
        [ 0.6144,  1.5590],
        [ 0.8211, -0.2045],
        [-0.8228, -0.5761],
        [ 0.7548, -0.4607]], device='cuda:0', dtype=torch.float64)
1.3853995984734584
tensor([[[45.1467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2970,  1.5317],
        [ 0.0177,  1.5897],
        [-2.2200,  0.7616],
        [ 0.0106, -0.0370],
        [-1.3949, -0.4288],
        [ 0.0535,  0.7366],
        [-0.2699, -1.1090],
        [ 0.7379,  1.4212]], device='cuda:0', dtype=torch.float64)
1.7456580467448122
tensor([[[45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2005, -0.2606],
        [-0.0404, -1.8548],
        [ 1.0858, -0.5103],
        [-1.3029, -0.3178],
        [ 1.3678, -0.0282],
        [ 0.9408, -0.2393],
        [ 0.6805,  1.3299],
        [ 0.9086,  0.8627]], device='cuda:0', dtype=torch.float64)
1.3276024849185655
tensor([[[45.1467, 17.7464],
         [45.1467, 18.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[43.1550, 17.2484],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.7464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7864, -0.5038],
        [ 0.2739, -0.4845],
        [-1.8549,  0.3776],
        [-0.0797, -1.7847],
        [ 1.1707, -0.2167],
        [ 0.2492, -2.0010],
        [ 0.7301,  1.6312],
        [ 0.8258, -0.1325]], device='cuda:0', dtype=torch.float64)
1.3414723808235132
tensor([[[45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [43.7579, 15.7739],
         [45.1467, 18.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [43.6467, 16.7464]],

        [[45.1467, 17.7464],
         [44.1467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.2773, -0.1680],
        [ 0.1781,  1.7470],
        [-0.0371,  1.8575],
        [ 0.2188,  1.0068],
        [-1.6416, -0.3192],
        [-0.3903, -0.8072],
        [ 0.1595, -0.8811],
        [ 0.4441,  1.6725]], device='cuda:0', dtype=torch.float64)
1.8489437813621556
tensor([[[44.1467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 14.7464],
         [44.1467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [43.1550, 17.2484]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9627,  0.2104],
        [-0.1496,  1.9200],
        [-2.0915,  0.4644],
        [ 1.4193, -0.2113],
        [ 0.5424,  0.6507],
        [ 0.1035,  1.0249],
        [ 0.1182, -2.0326],
        [-0.4919, -0.5934]], device='cuda:0', dtype=torch.float64)
1.51973569216865
tensor([[[43.6467, 16.2464],
         [43.1550, 17.2484],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [43.7579, 15.7739]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 14.7464],
         [45.6467, 16.2464]],

        [[45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.5636, 14.6820],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.5339,  0.6962],
        [-1.3395, -0.2263],
        [-0.0150, -0.6176],
        [-1.6792, -0.3577],
        [-1.3647, -0.5354],
        [ 0.1098, -1.2784],
        [ 0.7629, -0.6401],
        [-1.5941,  0.2654]], device='cuda:0', dtype=torch.float64)
2.0382534804428043
tensor([[[45.1467, 17.7464],
         [45.1467, 18.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6923, 15.2861]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [44.1467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.1467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [44.1467, 15.2464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5185,  0.1469],
        [ 0.1171, -0.2047],
        [-1.4804, -0.4992],
        [-0.1909, -1.9873],
        [-0.0630, -1.9625],
        [ 1.2860, -0.1479],
        [-0.2647, -1.9189],
        [ 0.0583,  1.3624]], device='cuda:0', dtype=torch.float64)
1.5815337557744948
tensor([[[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1961,  0.1988],
        [-0.6409, -0.8605],
        [ 1.1461,  0.0905],
        [ 0.1620,  1.4322],
        [ 1.0187,  0.6603],
        [ 0.2283,  1.5905],
        [ 0.6845, -0.1268],
        [ 0.3895,  0.5418]], device='cuda:0', dtype=torch.float64)
1.0938837109878032
tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.1467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3605,  0.1316],
        [-2.4521,  0.9200],
        [ 1.2051,  0.0379],
        [ 0.0122, -2.0695],
        [ 0.0157, -0.9344],
        [-2.1598,  0.6567],
        [ 0.2767, -0.0847],
        [ 0.0941, -1.2375]], device='cuda:0', dtype=torch.float64)
1.472078580236289
tensor([[[45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.7464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2344, -1.3768],
        [ 0.0291,  1.9866],
        [-0.3111, -1.9691],
        [-1.3857, -0.4163],
        [ 0.4833,  0.1397],
        [ 0.0381,  0.9652],
        [ 0.1398, -2.0823],
        [ 0.7132, -0.3776]], device='cuda:0', dtype=torch.float64)
1.5894243794620841
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1519, 14.2344]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3680, -1.9194],
        [-0.7069, -0.8139],
        [ 0.5140,  1.0992],
        [ 0.5131,  1.7685],
        [-2.4877,  0.8674],
        [-2.8847,  1.3532],
        [ 0.0514, -1.2055],
        [ 0.5492,  1.6388]], device='cuda:0', dtype=torch.float64)
1.5641596931489867
tensor([[[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484],
         [45.1467, 14.7464],
         [45.6923, 15.2861]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464]],

        [[45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3998, -0.0833],
        [ 0.5760, -0.8429],
        [-3.0267,  1.5960],
        [ 0.1221,  0.2839],
        [ 1.1731, -0.0814],
        [ 0.3402, -0.6187],
        [ 0.2630,  1.6554],
        [ 0.0471,  1.2070]], device='cuda:0', dtype=torch.float64)
1.2865901490621807
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 17.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[45.1467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [45.1467, 15.2464]],

        [[44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1497,  0.8988],
        [-1.1869, -0.1654],
        [ 0.5097, -0.0117],
        [ 0.2655,  0.9301],
        [ 0.2021, -1.1843],
        [-1.0348, -0.9810],
        [ 0.1128, -1.8939],
        [ 0.4414, -0.3444]], device='cuda:0', dtype=torch.float64)
1.7706142592260554
tensor([[[43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 13.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6923, 15.2861]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [45.1467, 14.7464]],

        [[45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0060, -1.2619],
        [ 0.3188, -0.1543],
        [ 1.1971, -0.0234],
        [-2.0303,  0.5840],
        [-0.7370, -0.5533],
        [ 0.3944, -1.3164],
        [-1.8755, -0.2498],
        [ 0.4268,  0.0508]], device='cuda:0', dtype=torch.float64)
1.7916045517684975
tensor([[[45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [43.1550, 17.2484]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 18.7464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.1382, -0.1801],
        [-1.3909, -0.2249],
        [-1.7914,  0.4221],
        [ 0.8326,  0.0990],
        [ 0.6420,  0.8163],
        [ 0.3287,  1.2440],
        [ 0.9504,  0.7326],
        [ 0.1708,  1.7959]], device='cuda:0', dtype=torch.float64)
1.6945848418901905
tensor([[[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464],
         [45.1467, 17.7464]],

        [[45.1467, 17.7464],
         [43.6467, 16.2464],
         [45.1467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [44.1467, 15.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7260,  0.2052],
        [ 0.2726, -1.3028],
        [ 1.2759,  0.3993],
        [ 1.0948, -0.0111],
        [-0.6955, -0.7379],
        [ 0.2710,  2.0371],
        [ 0.3194, -0.8953],
        [ 0.2048,  1.4366]], device='cuda:0', dtype=torch.float64)
1.222005620857356
tensor([[[45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [42.7950, 17.7353]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1671, -0.6440],
        [ 0.2689, -0.4564],
        [-1.0388, -0.8595],
        [ 0.3185, -2.1943],
        [ 0.4497, -0.6757],
        [ 0.4550, -1.3524],
        [ 0.4925,  1.5304],
        [-2.2694,  0.8132]], device='cuda:0', dtype=torch.float64)
1.5239188069132286
tensor([[[45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.1467, 14.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [46.1467, 16.7464],
         [43.1550, 17.2484]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.2464]],

        [[44.1467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3905,  0.3060],
        [ 0.7140,  1.5910],
        [ 0.2922, -0.4810],
        [ 0.1400,  1.3370],
        [-1.2618, -0.4775],
        [ 0.3063,  1.8160],
        [-1.5019, -0.3831],
        [-0.6905, -0.9944]], device='cuda:0', dtype=torch.float64)
1.724754180835588
tensor([[[43.6467, 16.7464],
         [45.1467, 14.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [44.1467, 15.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [45.1467, 17.7464],
         [45.6467, 18.7464]],

        [[45.1467, 14.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.9166,  0.4117],
        [-1.4908,  0.0489],
        [ 0.5557, -0.2249],
        [ 0.5306,  1.4567],
        [-0.4832, -0.9286],
        [ 0.1627,  0.1044],
        [-2.0215,  0.5197],
        [ 0.6305, -0.1539]], device='cuda:0', dtype=torch.float64)
1.8774220346531127
tensor([[[45.1467, 18.7464],
         [45.1467, 17.7464],
         [45.1467, 18.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464]],

        [[44.6467, 15.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [45.1467, 13.7464]],

        [[44.1467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [43.6467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6799,  0.3670],
        [-0.0863, -2.0932],
        [-2.5999,  0.9075],
        [ 0.0609, -1.3319],
        [ 0.0826,  0.8098],
        [-0.0421, -1.7659],
        [ 0.1538,  0.1567],
        [ 0.7598,  0.8719]], device='cuda:0', dtype=torch.float64)
1.5366474876326355
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 17.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2223, -0.3102],
        [ 0.2840,  0.9329],
        [ 0.4102,  0.3021],
        [-1.7805, -0.3674],
        [ 1.3953,  0.2887],
        [-1.9829,  0.6265],
        [-0.3886, -0.6407],
        [ 0.8823, -0.2396]], device='cuda:0', dtype=torch.float64)
1.439470186334061
tensor([[[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1507, 17.2434]],

        [[45.1467, 17.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [43.1550, 17.2484]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.7579, 15.7739],
         [45.6467, 16.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6829,  0.7149],
        [-0.6364, -0.7894],
        [-1.6120, -0.1592],
        [ 0.5249, -0.6877],
        [-1.8147, -0.1754],
        [ 0.6716,  1.1457],
        [-1.2144, -0.7798],
        [-1.3157, -0.3231]], device='cuda:0', dtype=torch.float64)
1.999257725594127
tensor([[[43.6467, 16.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [45.1467, 15.2464]],

        [[45.1467, 17.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.7464],
         [45.1467, 18.7464]],

        [[43.1550, 17.2484],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.1958,  0.6901],
        [-1.3982, -0.3779],
        [ 1.3924,  0.3635],
        [-0.8968, -0.7545],
        [ 0.4811, -0.3510],
        [ 0.7149, -0.4024],
        [ 0.2172,  1.6210],
        [ 0.2348,  1.1153]], device='cuda:0', dtype=torch.float64)
1.6516519348524223
tensor([[[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 18.7464]],

        [[43.6467, 16.2464],
         [45.1467, 14.7464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [43.6467, 16.7464]],

        [[43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 17.7464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.5038,  0.1995],
        [-2.4717,  0.4924],
        [-0.1764, -1.1314],
        [ 0.7149,  1.5892],
        [ 0.6192, -0.3780],
        [-1.6520,  0.0562],
        [ 0.2427, -2.2139],
        [ 1.0816,  0.5868]], device='cuda:0', dtype=torch.float64)
1.3989575875314872
tensor([[[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[44.1467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9368,  0.6980],
        [-0.5905, -0.7521],
        [ 0.3358, -0.7417],
        [-1.6830, -0.0694],
        [ 0.1284,  2.2776],
        [ 0.1188,  1.1636],
        [ 1.5438,  0.0920],
        [ 0.3378,  0.7119]], device='cuda:0', dtype=torch.float64)
1.4788917204669654
tensor([[[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.2718, -0.8713],
        [ 0.2923, -0.6895],
        [ 0.0087,  1.9755],
        [ 0.1963,  2.0955],
        [ 0.2853, -1.8736],
        [ 1.2582,  0.3020],
        [ 0.8423, -0.2040],
        [-0.0339, -0.6024]], device='cuda:0', dtype=torch.float64)
1.259713899736394
tensor([[[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [46.1467, 15.7464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.8510, -0.6321],
        [ 0.1410, -1.9868],
        [ 0.1546,  1.0027],
        [ 0.2591, -1.5715],
        [ 1.3237,  0.0366],
        [ 0.6816,  0.5384],
        [ 0.2672,  1.1446],
        [ 0.0262, -1.8374]], device='cuda:0', dtype=torch.float64)
1.3576621470351182
tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7372,  0.4320],
        [-0.0093,  1.1767],
        [-2.7533,  1.1923],
        [ 0.5270, -0.6675],
        [ 0.9642, -0.1212],
        [ 0.0995,  0.8898],
        [ 1.0041, -0.1075],
        [ 0.4412, -0.6968]], device='cuda:0', dtype=torch.float64)
1.2040493503742822
tensor([[[45.6467, 18.2464],
         [45.6467, 17.7464],
         [45.1467, 17.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6923, 15.2861]],

        [[45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.6923, 15.2861]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1284,  2.2687],
        [-0.5377, -0.9790],
        [ 1.2313,  0.1263],
        [ 0.5415, -0.3968],
        [ 0.6145,  0.7459],
        [ 0.2818,  1.6069],
        [ 0.1374,  1.3365],
        [ 0.6200,  0.8736]], device='cuda:0', dtype=torch.float64)
1.2809435877902542
tensor([[[45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6467, 17.7464]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.1519, 14.2344],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [43.1550, 17.2484]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4890,  0.7163],
        [ 0.4269, -1.8582],
        [ 0.0286, -0.8616],
        [ 0.1605, -0.8437],
        [-0.9014, -0.1810],
        [-0.0461, -1.1851],
        [-1.3240, -0.6212],
        [-0.0383, -1.8443]], device='cuda:0', dtype=torch.float64)
1.8946235371264775
tensor([[[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[45.1467, 14.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.2678,  1.9257],
        [-1.3861, -0.6597],
        [ 0.4517, -0.1416],
        [ 0.8515,  0.9015],
        [ 0.4924,  1.5273],
        [ 0.3837, -0.7127],
        [ 0.4016, -2.2186],
        [-1.9089,  0.1845]], device='cuda:0', dtype=torch.float64)
1.5967519820480995
tensor([[[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.1467, 13.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[44.1467, 15.7464],
         [44.1467, 15.2464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 17.7464],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 13.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3994,  0.0504],
        [ 0.8466, -0.0625],
        [-2.4158,  0.8635],
        [-1.9868,  0.5982],
        [-0.0237, -2.1275],
        [-1.7491,  0.1533],
        [ 0.8443,  1.8964],
        [ 0.4989,  1.2862]], device='cuda:0', dtype=torch.float64)
1.6243968766845083
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464]],

        [[44.1467, 15.7464],
         [43.1550, 17.2484],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 17.7464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [43.1550, 17.2484],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5813,  0.9314],
        [-2.0557,  0.6809],
        [ 0.4500,  2.1068],
        [ 0.5188,  1.7280],
        [-1.5536,  0.1822],
        [ 0.1954, -0.2011],
        [ 0.7780,  0.2619],
        [ 0.4941,  1.8071]], device='cuda:0', dtype=torch.float64)
1.5618440331491272
tensor([[[46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484],
         [44.6467, 15.2464]],

        [[45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5459,  1.3662],
        [ 1.3223,  0.3174],
        [ 0.7672, -0.0848],
        [ 0.2231,  1.9414],
        [ 0.4069,  1.3143],
        [ 0.5666,  1.6553],
        [-1.6319,  0.3331],
        [ 0.0972,  0.7250]], device='cuda:0', dtype=torch.float64)
1.2595788627845301
tensor([[[44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[45.6467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.0599, -0.5390],
        [ 1.3576,  0.1043],
        [ 0.4751,  1.2837],
        [ 1.4128,  0.0244],
        [ 1.5136,  0.2394],
        [ 0.1490,  1.7652],
        [ 0.4829, -0.6751],
        [ 0.0880,  1.9328]], device='cuda:0', dtype=torch.float64)
1.1135324342014523
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464],
         [45.1519, 14.2344],
         [44.6467, 15.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0770, -0.3292],
        [ 0.1036, -2.0802],
        [ 0.0074, -1.9914],
        [ 1.3369,  0.1704],
        [ 0.5473,  0.6254],
        [-1.4516, -0.3829],
        [-2.7596,  1.1900],
        [ 0.2247, -1.8269]], device='cuda:0', dtype=torch.float64)
1.4437294310840398
tensor([[[45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 17.7464]],

        [[45.1467, 18.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.7389, -0.8534],
        [ 0.1496,  1.9318],
        [ 0.8783,  0.0225],
        [ 1.0432,  0.5130],
        [ 0.0858, -0.8891],
        [ 0.0442,  1.2617],
        [ 0.6494, -0.5016],
        [-0.0395, -0.0831]], device='cuda:0', dtype=torch.float64)
1.2646594505908673
tensor([[[45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1519, 14.2344],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.1829, -0.7944],
        [-0.9305, -0.5905],
        [ 0.0598,  2.1577],
        [ 1.1147, -0.1451],
        [ 0.4313,  0.6563],
        [-0.1233, -1.8896],
        [ 1.3697,  0.0554],
        [-1.6918, -0.1107]], device='cuda:0', dtype=torch.float64)
1.6063316773053404
tensor([[[45.6467, 18.7464],
         [45.1467, 17.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.1519, 14.2344]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [44.1467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 18.7464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 15.2464]],

        [[44.1467, 15.7464],
         [45.1467, 17.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1117, -1.7717],
        [ 0.2593, -2.0454],
        [ 0.8601,  1.8576],
        [ 1.0736, -0.4999],
        [-1.6829,  0.0982],
        [ 0.3052, -0.9545],
        [ 0.1467, -1.0803],
        [-1.2614, -0.4044]], device='cuda:0', dtype=torch.float64)
1.535001026179985
tensor([[[46.1467, 16.2464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 17.7464]],

        [[45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [43.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.1550, 17.2484],
         [45.1467, 17.7464],
         [44.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3510,  1.4563],
        [-2.0076,  0.3521],
        [-1.4641, -0.2016],
        [ 0.1397, -0.8154],
        [ 0.0273, -1.2170],
        [ 1.0793,  0.5968],
        [ 1.0569, -0.4886],
        [-1.1865, -0.4520]], device='cuda:0', dtype=torch.float64)
1.719641284242612
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1519, 14.2344]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464]],

        [[45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.5636, 14.6820]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.1550, 17.2484]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2111, -0.0151],
        [ 0.2665, -1.5556],
        [ 0.8016, -0.1766],
        [ 0.1228,  1.2511],
        [ 0.9602,  0.5492],
        [ 0.4545, -1.2964],
        [ 1.0248,  0.6399],
        [-0.2891, -1.9171]], device='cuda:0', dtype=torch.float64)
1.2052184878340015
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]],

        [[45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 15.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.1467, 15.7464],
         [44.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3828, -0.5538],
        [ 0.0415, -0.9422],
        [ 0.6482,  0.3693],
        [ 0.7618,  1.2702],
        [-1.9485,  0.5048],
        [ 1.1984, -0.3453],
        [-1.9480,  0.6672],
        [-1.9550,  0.2538]], device='cuda:0', dtype=torch.float64)
1.6709111930302123
tensor([[[45.1467, 13.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.7464]],

        [[43.1550, 17.2484],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2858, -0.8122],
        [-2.5118,  0.8876],
        [-0.2286, -1.0411],
        [-0.6861, -0.7243],
        [ 0.4927,  1.5313],
        [ 0.8857, -0.5303],
        [ 0.3379, -1.4480],
        [ 0.4692, -0.4077]], device='cuda:0', dtype=torch.float64)
1.577759209281689
tensor([[[45.1467, 14.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.8692,  0.5259],
        [ 0.2719,  0.9835],
        [-0.0240, -1.7673],
        [-1.4457, -0.3507],
        [-0.3635, -1.0074],
        [ 0.3376, -2.0420],
        [ 0.4526, -0.4484],
        [ 0.7405,  1.1367]], device='cuda:0', dtype=torch.float64)
1.759762020337329
tensor([[[44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 17.7464]],

        [[45.1467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 17.7464],
         [45.1467, 17.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.1103,  0.4820],
        [ 0.2981, -2.1839],
        [ 1.2134,  0.5818],
        [-1.2629, -0.8472],
        [ 0.6130, -0.5576],
        [ 0.7443, -0.1245],
        [ 0.2927,  1.7048],
        [-0.7389, -0.8534]], device='cuda:0', dtype=torch.float64)
1.557127889653887
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1190, 17.2123],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[43.6467, 16.7464],
         [45.1519, 14.2344],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [43.1550, 17.2484]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [43.1550, 17.2484]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1519, 14.2344]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6883, -0.5226],
        [ 1.3856, -0.0517],
        [ 0.0510, -1.8835],
        [ 0.1539,  1.9626],
        [ 0.4877,  0.0215],
        [-1.6309, -0.3388],
        [ 0.8284, -0.4257],
        [-1.5613,  0.2009]], device='cuda:0', dtype=torch.float64)
1.5800122857931198
tensor([[[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [44.1467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [43.6467, 16.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.4399, -0.8119],
        [ 0.2521, -1.6692],
        [ 0.1515,  1.9855],
        [ 0.5833, -0.4140],
        [ 0.3095,  0.0713],
        [ 0.5828, -0.6575],
        [ 1.1956, -0.5218],
        [-1.6796, -0.0707]], device='cuda:0', dtype=torch.float64)
1.5127604035747826
tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[45.1467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3729e+00, -1.3905e-03],
        [ 7.4466e-01,  9.9100e-01],
        [ 5.9376e-01, -2.5953e-01],
        [ 4.1730e-01, -5.1964e-02],
        [ 1.1989e-01, -8.3581e-01],
        [ 1.9349e-01,  1.8013e+00],
        [ 6.5093e-02,  1.8085e+00],
        [-6.4246e-01, -6.0104e-01]], device='cuda:0', dtype=torch.float64)
1.2218142229335043
tensor([[[45.1467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.1467, 15.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [43.7579, 15.7739]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 18.7464],
         [43.1550, 17.2484]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.3719, -0.9862],
        [ 0.0394, -2.1133],
        [ 0.1207,  2.3182],
        [ 0.1460, -1.2817],
        [-2.3485,  0.8308],
        [ 0.4360,  1.8452],
        [-1.6570, -0.3031],
        [-1.3396, -0.6080]], device='cuda:0', dtype=torch.float64)
1.7956675543620502
tensor([[[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 17.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 17.7464]],

        [[43.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1507, 17.2434],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4331,  1.2784],
        [ 0.0350, -0.8975],
        [ 0.2799,  0.9025],
        [ 0.2272, -1.3466],
        [ 1.1474, -0.0970],
        [-1.9506,  0.5018],
        [ 0.2535,  1.0091],
        [ 0.1231,  1.5906]], device='cuda:0', dtype=torch.float64)
1.4318519858972136
tensor([[[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [45.6467, 17.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.3571, -0.4091],
        [ 0.9322,  0.4905],
        [ 0.8117,  1.8301],
        [-1.6176, -0.3980],
        [ 0.0182,  1.3935],
        [ 1.0905, -0.5035],
        [-0.1733, -1.9387],
        [-1.2947, -0.6688]], device='cuda:0', dtype=torch.float64)
1.7577507800310683
tensor([[[46.1467, 16.7464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[45.1467, 17.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1519, 14.2344]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.4102, -0.4408],
        [ 0.7218,  0.4435],
        [ 1.0482,  0.4008],
        [ 1.3207,  0.2097],
        [ 1.4812,  0.1258],
        [ 0.4073, -1.8508],
        [ 1.0803,  0.2133],
        [ 1.2457,  0.1127]], device='cuda:0', dtype=torch.float64)
0.8885335144517615
tensor([[[45.1467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1190, 17.2123]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.2814, -0.5243],
        [ 0.0574,  1.3044],
        [-0.1531, -1.0497],
        [-1.4959,  0.0518],
        [-0.7765, -0.9626],
        [ 0.1008,  0.9635],
        [-0.1414, -1.1665],
        [ 1.0599,  0.2417]], device='cuda:0', dtype=torch.float64)
1.9302345263204275
tensor([[[45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1019, -1.9224],
        [ 1.3317,  0.1440],
        [-1.4831, -0.3581],
        [-1.3288, -0.3313],
        [ 0.1037,  0.9044],
        [-1.1705, -0.7295],
        [ 0.8815, -0.3559],
        [ 0.4551,  1.9974]], device='cuda:0', dtype=torch.float64)
1.697590204700084
tensor([[[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.7464],
         [43.6467, 16.7464],
         [44.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [43.6467, 16.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]],

        [[45.1467, 14.7464],
         [45.1519, 14.2344],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1519, 14.2344],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2901, -0.4317],
        [ 0.5440,  1.4542],
        [-1.0859, -0.7918],
        [-2.4771,  0.8726],
        [ 1.3902, -0.1101],
        [ 0.4195,  1.1469],
        [ 0.5389,  0.7258],
        [ 0.7980, -0.3159]], device='cuda:0', dtype=torch.float64)
1.2653829419551552
tensor([[[45.1467, 17.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [43.7579, 15.7739],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.3252, -0.7085],
        [ 0.5758, -0.3021],
        [ 0.3835, -1.8722],
        [ 0.4134,  0.3552],
        [-0.0224, -0.9101],
        [-0.0613,  1.8916],
        [-1.3139, -0.0599],
        [-1.0842, -0.8959]], device='cuda:0', dtype=torch.float64)
1.7749083870971842
tensor([[[45.6467, 17.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.6467, 16.7464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0239,  0.6361],
        [-1.1673, -0.8713],
        [-1.2289, -0.4340],
        [ 0.8808,  0.3423],
        [ 0.3862,  0.4126],
        [-1.7520, -0.2041],
        [ 0.1093,  1.8417],
        [-1.5661, -0.3838]], device='cuda:0', dtype=torch.float64)
1.842009560966877
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 17.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [43.1550, 17.2484],
         [44.1467, 15.7464]],

        [[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.5234,  0.1005],
        [ 0.6481,  1.1391],
        [ 0.4336, -0.0093],
        [ 0.2509, -1.0098],
        [ 0.3221,  0.9921],
        [-2.7278,  1.1568],
        [ 0.5235, -0.6578],
        [ 0.6608,  0.1574]], device='cuda:0', dtype=torch.float64)
1.5063357147394303
tensor([[[43.6467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464]],

        [[44.1467, 15.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.7464]],

        [[45.1467, 18.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.1024, -0.6772],
        [ 0.0039, -0.6622],
        [-1.8106, -0.3669],
        [ 0.7538, -0.1412],
        [ 0.0068, -1.7873],
        [ 0.1465, -1.7739],
        [-1.8762,  0.0771],
        [-0.7334, -0.6399]], device='cuda:0', dtype=torch.float64)
1.929108919572511
tensor([[[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0636,  1.8332],
        [-0.0047,  1.6867],
        [ 0.0775, -1.0999],
        [-0.4671, -1.1784],
        [ 0.8304,  0.3070],
        [-0.6933, -0.7792],
        [-0.7001, -0.8274],
        [ 0.4116,  1.5519]], device='cuda:0', dtype=torch.float64)
1.6662954303254678
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.1467, 15.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464]],

        [[44.1467, 15.7464],
         [45.1519, 14.2344],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6033,  0.4885],
        [ 0.4368, -0.3937],
        [ 1.1501, -0.0845],
        [ 0.5017,  0.8771],
        [-0.0299, -1.9642],
        [ 0.0597,  0.0121],
        [-1.9740,  0.2459],
        [-2.9721,  1.5043]], device='cuda:0', dtype=torch.float64)
1.5558722798980955
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.1157,  0.6814],
        [ 0.7422,  1.7989],
        [-0.7543, -0.2390],
        [ 0.2090,  1.8811],
        [-0.0541, -0.5663],
        [ 0.7575, -0.4228],
        [-1.9499,  0.5388],
        [ 1.2680,  0.0766]], device='cuda:0', dtype=torch.float64)
1.591171539537852
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0528, -0.3103],
        [ 0.5256, -0.7553],
        [-1.0987, -0.7455],
        [-0.1941, -1.9873],
        [ 0.1757, -1.6880],
        [ 1.6076, -0.0925],
        [-0.1536, -0.9508],
        [ 0.3561, -0.7785]], device='cuda:0', dtype=torch.float64)
1.4794050074030416
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [45.1467, 13.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.1467, 15.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8065, -0.4751],
        [-1.5982, -0.1224],
        [ 0.4257, -0.2183],
        [ 1.4093, -0.1443],
        [ 0.2756, -2.2257],
        [ 0.0729,  1.5009],
        [ 0.4124,  1.5535],
        [-1.6917, -0.1062]], device='cuda:0', dtype=torch.float64)
1.556067855646562
tensor([[[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [43.6467, 16.7464]],

        [[44.1467, 15.7464],
         [45.1467, 17.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1507, 17.2434],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1119, -1.9898],
        [-1.4310, -0.4540],
        [-1.2609, -0.4667],
        [ 0.0742,  0.0117],
        [ 0.3234, -0.7549],
        [ 0.0747,  1.8765],
        [-1.2833, -0.6100],
        [ 0.8864, -0.2414]], device='cuda:0', dtype=torch.float64)
1.8808515445412337
tensor([[[45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [44.6467, 15.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [45.1467, 13.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [43.1550, 17.2484],
         [43.6467, 16.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8024, -0.3551],
        [ 0.5624,  1.6871],
        [ 0.8591,  0.1785],
        [-1.0332, -0.7091],
        [-1.5875, -0.4616],
        [ 0.6802, -0.5314],
        [-1.1026, -0.6929],
        [ 0.4555, -0.7337]], device='cuda:0', dtype=torch.float64)
1.7407977445836722
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1519, 14.2344]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6065, -0.4589],
        [-1.5031, -0.3821],
        [ 0.8227, -0.0353],
        [ 0.6246,  0.0942],
        [ 0.3949, -2.2629],
        [ 1.2224, -0.3150],
        [-1.7785,  0.3946],
        [-2.2858,  0.6551]], device='cuda:0', dtype=torch.float64)
1.5734167108709738
tensor([[[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.8701,  0.3950],
        [ 0.9062,  0.8481],
        [-1.1959, -0.1302],
        [ 0.4868, -0.6351],
        [ 0.1125,  2.0146],
        [ 0.5647,  0.3784],
        [ 0.6345, -0.3576],
        [-1.8646,  0.3022]], device='cuda:0', dtype=torch.float64)
1.6928376395036444
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1519, 14.2344]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464],
         [43.1550, 17.2484],
         [43.6467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9770,  0.5679],
        [ 0.1826,  1.6124],
        [-1.5328, -0.4241],
        [ 0.1253,  0.1178],
        [ 0.4249, -0.7234],
        [-1.7681,  0.1824],
        [-2.0302,  0.5342],
        [ 0.2762,  1.5951]], device='cuda:0', dtype=torch.float64)
1.7867793786085833
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 15.7464]],

        [[45.1467, 14.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [45.1467, 17.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1670, -2.1312],
        [ 0.9405,  0.0988],
        [ 1.1382,  0.2272],
        [ 0.7522,  1.8977],
        [ 0.1242, -0.7819],
        [ 0.1885,  1.2404],
        [ 0.2971,  1.4161],
        [-0.0573, -1.7965]], device='cuda:0', dtype=torch.float64)
1.1873446383528234
tensor([[[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.8801, -0.2358],
        [-1.8334, -0.0592],
        [ 0.0547, -1.1249],
        [ 0.2627,  0.1095],
        [ 0.6989,  1.9377],
        [-0.2751, -0.8056],
        [ 0.2583,  0.2771],
        [ 1.1724, -0.3301]], device='cuda:0', dtype=torch.float64)
1.7000220249288778
tensor([[[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [46.1467, 16.7464],
         [43.1550, 17.2484]],

        [[44.1467, 15.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[43.1550, 17.2484],
         [43.6467, 16.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0486, -1.7531],
        [-1.3924, -0.4493],
        [-1.7870,  0.0119],
        [ 1.1167, -0.2743],
        [-1.0403, -0.7896],
        [ 0.2160, -0.0684],
        [ 0.0761,  1.1559],
        [ 0.2683,  0.6579]], device='cuda:0', dtype=torch.float64)
1.8599412437787928
tensor([[[44.1467, 15.7464],
         [45.6467, 17.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.1467, 17.7464],
         [44.1467, 15.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6112,  1.1844],
        [ 1.2658, -0.4902],
        [-2.1952,  0.6573],
        [ 0.7486,  0.5984],
        [ 0.0343,  1.2720],
        [-1.6046,  0.2053],
        [ 1.2275,  0.3487],
        [-1.7122, -0.1200]], device='cuda:0', dtype=torch.float64)
1.5867396383637824
Epoch 0:  49%|####8     | 1815/3714 [17:39<18:28,  1.71it/s, loss=0.921, v_num=0, train/loss_step=0.859, train/acc_step=0.500]Epoch 0:  49%|####8     | 1815/3714 [17:39<18:28,  1.71it/s, loss=0.844, v_num=0, train/loss_step=0.673, train/acc_step=0.750]tensor([[[43.6467, 16.2464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 14.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1507, 17.2434]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2619, -1.4199],
        [ 0.5913,  1.4937],
        [-1.4696, -0.6340],
        [-1.8091,  0.4666],
        [-0.0494, -0.0338],
        [-0.9948, -0.4359],
        [ 0.2775, -1.4455],
        [ 0.5235, -0.2934]], device='cuda:0', dtype=torch.float64)
1.7516960940476758
tensor([[[45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.1519, 14.2344]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464]],

        [[45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 17.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1158,  0.0963],
        [ 0.3644, -1.9115],
        [ 0.3753, -1.7395],
        [ 0.5805,  0.9845],
        [-0.0253,  1.2103],
        [ 0.4588, -0.4012],
        [-0.0678, -2.0502],
        [ 0.2322, -2.0237]], device='cuda:0', dtype=torch.float64)
1.3476111498429608
tensor([[[43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.6467, 17.7464],
         [44.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.1914,  0.6900],
        [-1.6012, -0.0896],
        [-2.9890,  1.4677],
        [ 0.9712,  0.2733],
        [ 1.0196,  0.3602],
        [ 0.1425,  2.1904],
        [ 1.3278, -0.2595],
        [-1.5574, -0.4588]], device='cuda:0', dtype=torch.float64)
1.609112563748966
tensor([[[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6923, 15.2861],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[43.1550, 17.2484],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2621, -1.8470],
        [ 0.2297,  1.5829],
        [-0.3618, -0.8477],
        [ 0.3298,  1.5632],
        [ 1.1757, -0.1552],
        [ 0.5123, -0.4180],
        [ 0.9844,  0.5978],
        [ 0.1115, -0.9949]], device='cuda:0', dtype=torch.float64)
1.2172967704208337
tensor([[[45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [44.1467, 15.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.7464],
         [45.1467, 18.7464],
         [44.1467, 15.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2028,  0.5286],
        [-0.5888, -0.9446],
        [ 0.6363, -0.1653],
        [ 0.6858, -0.6346],
        [-0.7453, -0.4722],
        [-1.7905,  0.0109],
        [ 0.3041,  0.5496],
        [ 0.6466,  0.6384]], device='cuda:0', dtype=torch.float64)
1.7946326455839143
tensor([[[46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.1467, 17.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1507, 17.2434],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6923, 15.2861]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.5909, -0.0505],
        [ 0.3945,  0.7329],
        [-1.4711, -0.5105],
        [ 1.0920, -0.3800],
        [-1.1827, -0.2230],
        [-0.8686, -0.6001],
        [ 0.8295,  0.7886],
        [ 0.2090, -0.7477]], device='cuda:0', dtype=torch.float64)
1.5528129352113318
tensor([[[46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6923, 15.2861]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [44.1467, 15.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0312, -0.4972],
        [-0.1289, -1.0017],
        [ 0.7540, -0.5165],
        [ 0.5788,  1.5649],
        [ 1.1441,  0.0565],
        [ 1.2119, -0.3600],
        [-0.6129, -0.5796],
        [-0.7908, -0.6121]], device='cuda:0', dtype=torch.float64)
1.2812402650160966
tensor([[[45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.1550, 17.2484]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [43.1550, 17.2484],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4345,  0.3214],
        [-1.3515, -0.6038],
        [-0.0075, -0.0239],
        [-0.7287, -0.8736],
        [-1.0156, -0.8363],
        [-2.3490,  0.7588],
        [-0.2056, -0.6735],
        [ 0.8055,  0.8308]], device='cuda:0', dtype=torch.float64)
1.9459901268235205
tensor([[[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [43.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]],

        [[45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6923, 15.2861],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 17.7464],
         [44.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.2090, -0.5891],
        [ 0.2985, -2.1270],
        [ 0.2085,  1.2329],
        [ 0.2729, -2.0365],
        [ 1.2820,  0.3584],
        [ 1.1198, -0.1273],
        [-1.0448, -0.6241],
        [-0.0292,  1.8382]], device='cuda:0', dtype=torch.float64)
1.4919794999729121
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.1467, 15.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [43.1550, 17.2484],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5996, -0.3046],
        [ 0.3242, -1.0661],
        [ 0.8551,  0.9352],
        [ 0.4294,  0.0794],
        [ 0.6843,  1.6064],
        [ 0.5527,  1.8532],
        [-1.1895, -0.5758],
        [-1.3729, -0.7036]], device='cuda:0', dtype=torch.float64)
1.5558572094491825
tensor([[[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.1467, 15.2464],
         [45.6923, 15.2861],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1084, -1.2785],
        [-1.8529, -0.1407],
        [-1.3057, -0.7982],
        [ 0.6780, -0.7424],
        [ 0.4893,  0.8804],
        [ 0.2327,  0.1568],
        [-1.5943,  0.1493],
        [-0.9096, -0.4349]], device='cuda:0', dtype=torch.float64)
2.018154325131583
tensor([[[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 15.2464],
         [45.1519, 14.2344],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464],
         [45.6467, 16.7464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1905,  1.6339],
        [-0.6523, -0.8616],
        [ 0.1843, -1.8266],
        [-0.5869, -0.3901],
        [ 1.0668, -0.0812],
        [ 0.2952, -1.6217],
        [ 1.2745, -0.2575],
        [ 0.3845,  0.1423]], device='cuda:0', dtype=torch.float64)
1.386291350841721
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8754, -0.4730],
        [-0.5070, -0.8167],
        [ 0.0157, -0.5623],
        [ 1.0874,  0.1614],
        [ 0.8027,  0.9998],
        [ 0.9948, -0.4107],
        [ 0.6306, -0.5332],
        [ 0.4066,  1.6877]], device='cuda:0', dtype=torch.float64)
1.094001082369724
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [44.1467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1795, -1.9731],
        [-0.4077, -0.5530],
        [-1.5077,  0.1392],
        [ 0.7275,  1.8434],
        [ 0.0546, -1.1250],
        [ 1.1895,  0.4501],
        [ 0.9349, -0.0946],
        [ 0.4026, -1.7972]], device='cuda:0', dtype=torch.float64)
1.4174305929184763
tensor([[[45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464]],

        [[45.6467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3290,  0.0798],
        [ 0.2732,  0.7768],
        [ 0.3229, -1.9659],
        [-0.0110, -1.0022],
        [ 0.1042,  0.3456],
        [ 1.0257, -0.0497],
        [ 0.3483, -0.1975],
        [ 0.7576,  0.6289]], device='cuda:0', dtype=torch.float64)
1.068892608043834
tensor([[[45.1467, 17.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[46.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.7464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 17.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [46.1467, 15.7464],
         [45.6923, 15.2861],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0832,  2.1804],
        [ 1.4538, -0.2275],
        [ 0.2640, -2.0642],
        [ 0.2135,  0.0981],
        [ 0.5322, -0.6062],
        [ 0.0338, -0.5334],
        [ 0.1948,  0.7089],
        [ 0.3611,  1.3412]], device='cuda:0', dtype=torch.float64)
1.219394977152808
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [43.6467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1484, -2.0424],
        [ 0.2935, -1.0009],
        [ 0.3757,  1.4524],
        [ 0.2498, -0.8049],
        [-0.6825, -0.7292],
        [ 0.1350,  0.6305],
        [ 0.4802,  1.6779],
        [ 1.2071,  0.0472]], device='cuda:0', dtype=torch.float64)
1.4002042744396421
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 17.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.1467, 15.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.0974,  0.4708],
        [ 0.6802,  0.5025],
        [ 0.4337, -0.1664],
        [ 0.4406, -1.3350],
        [ 1.4431,  0.1990],
        [ 0.4056,  0.0520],
        [ 1.3690, -0.1699],
        [ 0.6808,  1.9540]], device='cuda:0', dtype=torch.float64)
1.1712452152385797
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.6467, 16.2464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.1593,  0.1456],
        [-2.4382,  0.8520],
        [ 1.1854,  0.3142],
        [ 1.0742, -0.2431],
        [-1.9156,  0.4099],
        [ 1.3049,  0.2934],
        [ 0.1125,  1.5293],
        [ 0.3428, -1.6383]], device='cuda:0', dtype=torch.float64)
1.2309213199947862
tensor([[[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.6467, 18.2464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3744,  0.3337],
        [ 1.4721,  0.1660],
        [ 0.8269,  1.7798],
        [ 0.0151, -1.7733],
        [ 0.6507, -0.1669],
        [ 0.5983,  0.1604],
        [ 0.4469, -0.6926],
        [ 1.1717,  0.0836]], device='cuda:0', dtype=torch.float64)
0.9379198907918695
tensor([[[45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.3236, -0.9987],
        [-0.4018, -1.0175],
        [ 0.1078, -1.7197],
        [-2.5032,  0.5940],
        [ 0.9826, -0.2668],
        [ 0.8588,  0.3569],
        [ 0.8126,  0.7748],
        [-1.9017, -0.2898]], device='cuda:0', dtype=torch.float64)
1.6175557137013112
tensor([[[45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4084,  1.5456],
        [-2.6075,  1.0207],
        [ 0.0234,  1.3527],
        [-1.2377, -0.4275],
        [ 0.7336,  1.5679],
        [ 0.4250,  0.2922],
        [ 0.0215, -1.1674],
        [-0.1499,  1.9701]], device='cuda:0', dtype=torch.float64)
1.6254005926864004
tensor([[[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.5636, 14.6820]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464]],

        [[43.6467, 16.7464],
         [46.1467, 16.2464],
         [43.1550, 17.2484],
         [45.6467, 16.7464],
         [45.1467, 14.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 15.7464]],

        [[44.6467, 15.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.1467, 18.7464],
         [45.6467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.7464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3693, -0.2083],
        [ 0.5866,  1.9090],
        [ 0.9804, -0.4059],
        [-1.2904, -0.6848],
        [ 0.1052,  1.8895],
        [ 1.1555,  0.3822],
        [-0.0156,  1.7623],
        [ 1.3302, -0.1612]], device='cuda:0', dtype=torch.float64)
1.1547368958980835
tensor([[[45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [45.6467, 17.2464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [44.1467, 15.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3009, -1.4358],
        [ 0.6844, -0.1617],
        [ 0.4830, -0.2473],
        [ 0.6873,  0.0152],
        [ 0.4574, -1.3799],
        [ 0.5538, -0.0280],
        [ 0.8095, -0.5486],
        [ 0.2962, -0.7721]], device='cuda:0', dtype=torch.float64)
1.0654021993896037
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [43.1550, 17.2484],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.1467, 17.7464],
         [45.6467, 18.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [44.1467, 15.2464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.1467, 18.7464],
         [45.1467, 17.7464],
         [45.1467, 18.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4469,  1.7173],
        [ 1.1032, -0.4201],
        [-1.9422,  0.3477],
        [ 0.8561,  1.9452],
        [ 0.8500,  0.0081],
        [ 0.8548,  0.8657],
        [ 0.8530,  0.7815],
        [-0.2291,  1.9118]], device='cuda:0', dtype=torch.float64)
1.142783044989798
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [43.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [44.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8664, -0.3231],
        [ 0.0736, -1.3476],
        [ 0.0783, -1.9641],
        [ 0.3741, -1.9426],
        [ 0.3270, -0.9491],
        [-1.1245, -0.6490],
        [ 0.3482,  0.6432],
        [-0.1276, -1.1010]], device='cuda:0', dtype=torch.float64)
1.6394678026641967
tensor([[[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6533, -0.5803],
        [ 0.2664,  0.6236],
        [ 1.1150,  0.6244],
        [ 0.9402,  0.2677],
        [ 0.6355,  0.0270],
        [-0.1491,  1.9076],
        [ 0.7419, -0.4026],
        [ 0.4533,  1.8013]], device='cuda:0', dtype=torch.float64)
0.965986936714404
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.1519, 14.2344]],

        [[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6959,  0.2480],
        [ 0.5692, -0.3071],
        [-0.6368, -1.0907],
        [-0.6671, -1.0009],
        [ 0.7640,  0.3393],
        [ 0.7040, -0.7691],
        [ 0.0613, -2.2020],
        [-0.2490, -1.9213]], device='cuda:0', dtype=torch.float64)
1.5305929009210373
tensor([[[44.1467, 15.7464],
         [43.1550, 17.2484],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 13.7464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.0789,  0.6667],
        [-1.9677,  0.4465],
        [ 0.8208, -0.6367],
        [ 0.3083, -2.0758],
        [ 0.4148,  1.1607],
        [ 0.3410, -1.6994],
        [-1.8703,  0.1816],
        [ 0.6116, -0.6057]], device='cuda:0', dtype=torch.float64)
1.6358970770078123
tensor([[[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [44.1467, 15.2464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[43.6467, 16.7464],
         [45.1467, 18.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [44.1467, 15.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6311,  1.0025],
        [ 0.0101,  1.6738],
        [ 0.2792, -1.6186],
        [ 0.1983,  1.1082],
        [-1.8618, -0.1967],
        [-0.1959, -0.9971],
        [-0.5933, -0.5874],
        [ 0.7005,  1.6858]], device='cuda:0', dtype=torch.float64)
1.6566259654902606
tensor([[[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [44.1467, 15.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.2308, -0.1348],
        [ 0.5669,  0.5592],
        [ 0.3049, -0.5061],
        [ 1.5362,  0.1746],
        [ 0.5315,  1.4566],
        [ 0.1570,  1.4610],
        [ 0.8358, -0.5450],
        [ 0.2304, -1.3625]], device='cuda:0', dtype=torch.float64)
1.3066045674552496
tensor([[[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 18.7464],
         [45.1467, 17.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [45.1467, 15.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.7464],
         [43.1550, 17.2484],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 18.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0788,  1.8712],
        [ 0.2546, -0.8247],
        [ 0.3320,  1.8060],
        [-1.9172,  0.3895],
        [-1.8881,  0.3256],
        [ 0.7778,  0.8862],
        [ 0.6074,  1.3838],
        [ 1.3702, -0.2805]], device='cuda:0', dtype=torch.float64)
1.5067494985504475
tensor([[[45.1467, 17.7464],
         [46.1467, 16.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]],

        [[44.1467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[43.1550, 17.2484],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [45.1467, 18.2464],
         [45.1467, 17.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [44.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 18.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5442,  1.5085],
        [-0.9389, -0.7103],
        [-0.4971, -0.7413],
        [-2.1153,  0.6193],
        [-1.1684, -0.9013],
        [ 0.3118,  1.6251],
        [ 0.1791,  1.0967],
        [-2.0651,  0.5668]], device='cuda:0', dtype=torch.float64)
1.933316292420629
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 18.7464],
         [45.6467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8697,  0.1343],
        [ 0.1275,  0.6115],
        [ 0.6993,  1.9254],
        [-1.7794,  0.2114],
        [-1.7486,  0.2522],
        [-0.0160,  1.8031],
        [ 0.8352, -0.3087],
        [ 1.0688, -0.1703]], device='cuda:0', dtype=torch.float64)
1.4229851668166982
tensor([[[45.6467, 17.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 17.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.7464],
         [45.1467, 14.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6923, 15.2861]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0992, -0.1526],
        [-1.6312, -0.3407],
        [ 0.3089, -1.9458],
        [-0.5554, -1.0597],
        [ 0.8768,  0.6766],
        [ 0.3520, -1.4953],
        [ 0.1626,  1.1934],
        [ 0.2924, -1.9569]], device='cuda:0', dtype=torch.float64)
1.5214123415366678
tensor([[[44.6467, 15.2464],
         [45.1467, 17.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1507, 17.2434],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[44.1467, 15.7464],
         [44.1467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3051, -1.1773],
        [ 0.5594,  1.5433],
        [ 0.4592,  0.4079],
        [ 1.2557,  0.3299],
        [-1.2387, -0.7772],
        [-0.0594, -1.1366],
        [-1.2198, -0.7925],
        [ 1.3709,  0.0842]], device='cuda:0', dtype=torch.float64)
1.543353517837323
tensor([[[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[45.1467, 14.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.1550, 17.2484]],

        [[44.6467, 15.2464],
         [45.1467, 18.7464],
         [43.6467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 14.7464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 14.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1507, 17.2434]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7226, -0.2942],
        [-0.2901, -1.1133],
        [-0.0722, -0.9460],
        [-2.4729,  0.8555],
        [-0.5462, -0.7905],
        [-1.6082, -0.1057],
        [-2.1890,  0.6861],
        [-0.6373, -0.8396]], device='cuda:0', dtype=torch.float64)
1.853551392587741
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464]],

        [[45.6467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 18.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [44.1467, 15.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3486,  0.0213],
        [ 0.3775, -1.8609],
        [ 0.7236,  1.6627],
        [ 0.6770,  0.3676],
        [-0.1025,  1.9833],
        [ 0.7263,  0.8524],
        [ 0.7343,  0.3423],
        [ 0.7335,  1.9003]], device='cuda:0', dtype=torch.float64)
0.9450580616978997
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [45.1467, 13.7464]],

        [[43.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2788, -0.2485],
        [-0.1980,  2.0281],
        [ 0.9433, -0.3815],
        [ 0.9567, -0.3255],
        [ 0.4078,  1.3591],
        [-1.7757, -0.2678],
        [-0.9451, -0.4665],
        [ 0.9700,  0.0452]], device='cuda:0', dtype=torch.float64)
1.530155112374438
tensor([[[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 15.7464],
         [45.6923, 15.2861]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7817, -0.2140],
        [ 0.4415, -0.1190],
        [ 0.8553,  0.9355],
        [ 0.3926, -1.2342],
        [ 0.1402, -0.9600],
        [ 0.8959, -0.3477],
        [ 0.3754, -0.2043],
        [-1.6305, -0.0779]], device='cuda:0', dtype=torch.float64)
1.404669253128581
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.1735, -0.1999],
        [ 0.0077,  0.0196],
        [ 1.3443,  0.3699],
        [-0.5585, -0.3415],
        [ 1.4088,  0.3050],
        [-0.8316, -0.9166],
        [ 0.7976,  0.9244],
        [ 0.2772, -0.8589]], device='cuda:0', dtype=torch.float64)
1.341256796693858
tensor([[[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [43.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2410,  0.1097],
        [ 0.6773,  0.9286],
        [ 0.8052,  0.2454],
        [ 0.3976, -0.6543],
        [-1.1914, -0.7522],
        [ 0.6650,  0.9866],
        [ 0.3821, -1.9090],
        [ 0.2606, -0.1958]], device='cuda:0', dtype=torch.float64)
1.4254009614913654
tensor([[[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464]],

        [[44.1467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [43.1550, 17.2484],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9809, -0.5169],
        [ 1.1973,  0.1810],
        [-0.4057, -0.9821],
        [-0.2248, -0.5464],
        [ 0.3663, -1.2037],
        [-1.2000, -0.8504],
        [ 0.4400, -0.4797],
        [ 0.2649,  0.9488]], device='cuda:0', dtype=torch.float64)
1.5532354636044197
tensor([[[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 14.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 14.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [45.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.4073, -0.1484],
        [-1.4726, -0.1386],
        [ 1.1046,  0.2727],
        [-1.5013,  0.0855],
        [ 1.4595,  0.0791],
        [-0.2346, -0.9172],
        [ 0.9752, -0.4725],
        [ 0.6317,  1.6256]], device='cuda:0', dtype=torch.float64)
1.2848713147114474
tensor([[[43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6923, 15.2861]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 17.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 14.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.7566, -0.1106],
        [-0.1770, -1.1308],
        [ 0.4115, -0.1502],
        [-1.1458, -0.2521],
        [ 0.5373,  0.2463],
        [ 0.3518,  0.6012],
        [-2.1975,  0.7220],
        [ 0.0378, -0.5152]], device='cuda:0', dtype=torch.float64)
1.8659064919087331
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]],

        [[45.1467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 18.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 14.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0661,  0.9659],
        [ 0.7718,  0.9725],
        [ 0.1249, -0.5702],
        [-1.8410,  0.4501],
        [ 0.4640,  1.6976],
        [ 0.0132, -0.4940],
        [ 0.1772, -1.8341],
        [ 0.4784,  1.4222]], device='cuda:0', dtype=torch.float64)
1.5049099510278774
tensor([[[46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 15.7464]],

        [[45.1467, 17.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464]],

        [[45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4369,  1.6074],
        [ 1.2834,  0.0611],
        [-2.0080,  0.5147],
        [ 0.2444,  1.9492],
        [ 0.8565,  0.8597],
        [ 0.3398,  1.1574],
        [ 0.8467, -0.4478],
        [ 1.2624,  0.1979]], device='cuda:0', dtype=torch.float64)
1.0478353776942693
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 14.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [44.1467, 15.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6923, 15.2861]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 17.7464]],

        [[45.1467, 18.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 18.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4814,  0.2283],
        [ 0.3780, -1.1298],
        [ 0.6379, -0.7243],
        [-1.2936, -0.4909],
        [ 0.1501,  1.9317],
        [ 0.1573,  1.4415],
        [ 0.3633,  0.6503],
        [-1.2062, -0.4557]], device='cuda:0', dtype=torch.float64)
1.741456141193707
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1507, 17.2434]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[45.1467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 15.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.7000,  0.0806],
        [ 0.8699,  0.7128],
        [ 0.6317, -0.3320],
        [-0.0513, -0.9286],
        [ 0.6349, -0.3669],
        [ 0.5581,  1.1335],
        [ 0.2607,  0.4687],
        [-0.2386, -0.9094]], device='cuda:0', dtype=torch.float64)
1.4709395568632573
tensor([[[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6923, 15.2861]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.1467, 14.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[45.1467, 17.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0357, -0.9611],
        [ 0.4403,  1.5223],
        [ 0.3290, -1.9892],
        [-1.6383, -0.3067],
        [ 1.2661, -0.4676],
        [-0.4578, -0.8245],
        [ 1.0954, -0.3822],
        [ 1.0261,  0.3633]], device='cuda:0', dtype=torch.float64)
1.456985349571052
tensor([[[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 14.7464],
         [46.1467, 16.7464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1507, 17.2434]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1507, 17.2434],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.4962, -0.5080],
        [ 0.7075,  1.3548],
        [ 0.2723,  1.3345],
        [ 0.8858,  0.7071],
        [ 0.1744, -0.3401],
        [-0.1629, -1.1479],
        [ 1.0983, -0.1616],
        [ 0.5190,  0.6885]], device='cuda:0', dtype=torch.float64)
1.2599964071616796
tensor([[[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.6923, 15.2861]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[44.1467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 18.7464],
         [44.1467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.1467, 17.7464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.8102,  0.3626],
        [ 0.2529, -0.5139],
        [-0.2057, -0.6735],
        [ 0.3112,  0.1232],
        [-1.9237,  0.5856],
        [ 0.2767,  1.9804],
        [ 0.8735,  0.3920],
        [ 0.4916, -0.2642]], device='cuda:0', dtype=torch.float64)
1.7241899877612188
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [43.1550, 17.2484],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.1467, 15.7464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6347, -0.7891],
        [-1.2316, -0.5485],
        [-0.5562, -0.6975],
        [-1.4098, -0.4462],
        [ 0.2074,  1.6705],
        [-0.2849, -1.1704],
        [ 0.8562,  0.3316],
        [ 0.3663, -0.6673]], device='cuda:0', dtype=torch.float64)
1.8211024795717408
tensor([[[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.1467, 18.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.1467, 17.7464],
         [45.1467, 18.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9390, -0.2064],
        [-2.2621,  0.6501],
        [ 0.3853, -0.7538],
        [ 0.1311,  1.2607],
        [ 0.5129,  1.7702],
        [ 0.7028, -0.3795],
        [ 0.2658, -2.0773],
        [ 0.9218,  0.3066]], device='cuda:0', dtype=torch.float64)
1.262306998159344
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.7464]],

        [[44.1467, 15.7464],
         [43.1550, 17.2484],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [43.1550, 17.2484]],

        [[46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 17.7464],
         [43.6467, 16.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [44.1467, 15.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.1625,  0.6420],
        [-1.1886, -0.4490],
        [-1.4494, -0.3070],
        [-1.4998, -0.1594],
        [ 0.1955, -1.9159],
        [ 1.2138,  0.4537],
        [ 0.2418, -1.9500],
        [-1.6095, -0.0677]], device='cuda:0', dtype=torch.float64)
1.763734347753271
tensor([[[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4314, -0.0743],
        [ 0.3369,  0.5836],
        [ 1.4439, -0.1337],
        [ 0.5327, -0.3377],
        [ 0.5167,  1.1029],
        [-0.0877, -0.6024],
        [ 1.0629,  0.1953],
        [-1.8456,  0.4481]], device='cuda:0', dtype=torch.float64)
1.2645300637779067
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [44.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 15.2464],
         [45.1519, 14.2344]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 17.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.2631, -0.5719],
        [ 0.6809,  1.0099],
        [-0.3261, -0.7054],
        [ 1.3241, -0.3048],
        [ 0.7814,  0.8572],
        [ 0.3989,  0.4079],
        [-2.2492,  0.7126],
        [ 0.5012,  1.6927]], device='cuda:0', dtype=torch.float64)
1.5221001486646346
tensor([[[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [43.6467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [46.1190, 17.2123]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [43.6467, 16.2464],
         [45.1507, 17.2434]],

        [[43.6467, 16.2464],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.0983,  0.6113],
        [-0.0855, -1.1473],
        [-1.4520, -0.2323],
        [ 0.3709, -1.2219],
        [-0.2310,  2.0919],
        [-1.6930, -0.2833],
        [ 0.8917, -0.2075],
        [ 1.3044,  0.3244]], device='cuda:0', dtype=torch.float64)
1.739676664215131

Validation DataLoader 0:  80%|########  | 330/412 [01:21<00:20,  4.03it/s][AEpoch 1:  98%|#########7| 3632/3714 [1:05:00<01:28,  1.07s/it, loss=3.24, v_num=0, train/loss_step=3.400, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]tensor([[[45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6062,  0.4269],
        [-1.3442, -0.4183],
        [ 0.8820,  0.9510],
        [-0.4684, -0.7095],
        [ 0.3189,  0.2112],
        [-1.0457, -0.6118],
        [ 1.4638,  0.1462],
        [ 0.2376,  0.5773]], device='cuda:0', dtype=torch.float64)
1.672463357898795
tensor([[[45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [44.6467, 15.2464],
         [45.1467, 14.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [44.1467, 15.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7750,  0.9201],
        [ 1.2674,  0.0205],
        [ 0.0938, -0.7702],
        [-1.1351, -0.9245],
        [-0.0103, -2.0759],
        [-1.0006, -0.3379],
        [-2.1529,  0.5209],
        [-1.4721, -0.3614]], device='cuda:0', dtype=torch.float64)
1.8558973096717073
tensor([[[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [45.1467, 18.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.9963, -0.2729],
        [-1.1861, -0.3492],
        [ 1.4829,  0.1270],
        [ 0.9300, -0.0400],
        [ 0.2810,  1.9948],
        [ 0.0059, -1.8457],
        [-0.0704, -1.8591],
        [ 0.7158, -0.5710]], device='cuda:0', dtype=torch.float64)
1.5604869120746898
tensor([[[44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.6467, 18.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[43.1550, 17.2484],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [44.1467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.1213, -0.4517],
        [ 0.5596,  1.7056],
        [-0.1341, -1.8094],
        [-2.5196,  0.7897],
        [ 0.0907,  0.8896],
        [ 0.8307, -0.2717],
        [ 0.0754,  0.6510],
        [ 0.8966, -0.1749]], device='cuda:0', dtype=torch.float64)
1.6626353120060575
tensor([[[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464],
         [45.1467, 18.7464]],

        [[45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464]],

        [[44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.5406, -0.8196],
        [ 1.0694, -0.4202],
        [-1.2753, -0.2712],
        [ 1.1294, -0.1684],
        [ 0.4585,  0.2037],
        [ 0.7656, -0.6401],
        [-2.8001,  1.2907],
        [ 0.6019,  0.2895]], device='cuda:0', dtype=torch.float64)
1.5486619101161723
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[44.1467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 18.7464],
         [43.6467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[43.1550, 17.2484],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0661, -2.1333],
        [ 0.5615,  0.8994],
        [ 1.1942,  0.1423],
        [ 0.4552, -0.7199],
        [ 0.9539, -0.4059],
        [-2.0744,  0.5852],
        [ 1.3644, -0.0147],
        [-2.2438,  0.7845]], device='cuda:0', dtype=torch.float64)
1.3321051966099775
tensor([[[45.1467, 17.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[45.1467, 14.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [43.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1428, -0.8349],
        [ 0.3159, -1.7946],
        [ 1.1628, -0.4076],
        [ 0.3928,  0.6191],
        [ 0.0391,  1.5550],
        [ 0.3262, -2.0231],
        [ 0.8548,  0.9069],
        [ 0.7971, -0.2918]], device='cuda:0', dtype=torch.float64)
1.1857447332498476
tensor([[[46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [43.7579, 15.7739]],

        [[46.1467, 16.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3646,  0.1367],
        [ 1.2803, -0.0834],
        [ 1.1965, -0.3511],
        [ 1.1666, -0.2571],
        [ 0.5283, -0.3726],
        [ 0.5296, -0.2598],
        [ 0.1803, -1.3999],
        [-1.0708, -0.9024]], device='cuda:0', dtype=torch.float64)
1.0446546181328809
tensor([[[45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[44.1467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 18.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [43.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4602,  1.9884],
        [-1.5770, -0.1695],
        [-0.0140,  1.5649],
        [ 0.1875,  0.3411],
        [ 0.6278,  0.4873],
        [ 1.0093, -0.4336],
        [ 0.3347, -1.4470],
        [ 1.0476, -0.1379]], device='cuda:0', dtype=torch.float64)
1.371310429077567
tensor([[[45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464]],

        [[45.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.1467, 15.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [44.1467, 15.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0952,  0.7704],
        [ 1.4760,  0.1407],
        [-1.7859,  0.0980],
        [ 0.1407, -1.9985],
        [ 0.4626,  1.1276],
        [-0.1563, -0.9652],
        [-1.4316, -0.2256],
        [-2.0270,  0.5804]], device='cuda:0', dtype=torch.float64)
1.8080085142544657
tensor([[[45.1467, 15.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 15.2464]],

        [[45.1467, 17.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.1467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2241, -0.8758],
        [-1.1219, -0.8923],
        [-0.1608, -0.9906],
        [ 0.2677,  0.2413],
        [-1.6684,  0.2272],
        [ 0.2789,  0.9328],
        [ 0.3638,  1.9516],
        [ 1.2677,  0.0202]], device='cuda:0', dtype=torch.float64)
1.6828343779374695
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [45.1467, 17.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 17.2464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.8932, -0.7640],
        [ 0.9142, -0.1049],
        [ 0.0183,  0.7839],
        [-2.5641,  0.7934],
        [ 0.3216, -2.1433],
        [ 0.4864,  1.8248],
        [ 1.0436, -0.5080],
        [-1.3258, -0.2057]], device='cuda:0', dtype=torch.float64)
1.6082568227190002
tensor([[[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6923, 15.2861]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.1045,  0.0765],
        [-0.2216,  2.0625],
        [ 0.6741,  1.2241],
        [ 0.2510,  1.0226],
        [-0.1794,  1.9635],
        [ 0.3133, -1.5117],
        [ 0.3140,  0.1818],
        [-1.4345, -0.3536]], device='cuda:0', dtype=torch.float64)
1.4663339131017232
tensor([[[44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.6467, 18.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0695,  0.5523],
        [ 0.6255,  0.8091],
        [ 1.3778, -0.0631],
        [ 0.1623,  1.5894],
        [ 1.3198,  0.3532],
        [ 0.2209, -0.1570],
        [-0.0409,  1.1342],
        [ 0.5260,  1.7193]], device='cuda:0', dtype=torch.float64)
1.0275896877205535
tensor([[[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 18.2464],
         [45.1467, 18.2464]],

        [[45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 14.7464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1519, 14.2344]],

        [[45.6467, 18.7464],
         [45.1467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8589,  0.7847],
        [ 0.4438, -1.8988],
        [ 0.0322, -2.0290],
        [ 1.1547,  0.2525],
        [-0.6466, -1.0056],
        [ 0.2050, -0.1992],
        [ 0.2206, -1.8866],
        [ 0.6572,  1.7605]], device='cuda:0', dtype=torch.float64)
1.2590907563562512
tensor([[[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464],
         [43.1550, 17.2484]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6177, -0.6898],
        [ 0.4303,  0.9938],
        [-2.0152,  0.6452],
        [ 0.1510,  2.1824],
        [-0.5622, -0.9078],
        [ 0.0121,  1.3827],
        [ 1.1410, -0.0308],
        [-0.9894, -0.9307]], device='cuda:0', dtype=torch.float64)
1.695586829519428
tensor([[[45.1467, 17.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [44.6467, 15.2464]],

        [[45.1467, 17.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [44.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 17.7464],
         [43.6467, 16.2464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.1550, 17.2484]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.0082,  0.5024],
        [ 1.2350, -0.4711],
        [-2.4260,  0.8278],
        [-1.2868, -0.8182],
        [-0.0486,  1.1352],
        [ 1.0523, -0.5356],
        [-0.2134,  1.9834],
        [ 1.3571, -0.3327]], device='cuda:0', dtype=torch.float64)
1.5804078112899835
tensor([[[45.6467, 18.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.7579, 15.7739]],

        [[44.6467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3339,  1.7682],
        [ 0.2181, -1.6759],
        [ 0.7963,  0.2085],
        [ 0.1243, -0.8615],
        [-1.7615,  0.0292],
        [ 0.3267,  0.8746],
        [ 0.9125,  0.4996],
        [ 0.3642,  0.7284]], device='cuda:0', dtype=torch.float64)
1.4002658124543057
tensor([[[45.1467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 17.7464],
         [44.1467, 15.7464]],

        [[43.6467, 16.7464],
         [45.1467, 14.7464],
         [43.1550, 17.2484],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [46.1467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [43.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0186, -0.9355],
        [ 1.0109,  0.6500],
        [-0.1218, -0.7721],
        [ 1.1251, -0.3378],
        [ 0.2672,  0.0180],
        [ 0.1949,  0.8492],
        [ 0.3670, -0.7348],
        [ 0.2967,  0.0632]], device='cuda:0', dtype=torch.float64)
1.345472462775915
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [46.1467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464]],

        [[45.6467, 16.2464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7744, -0.5247],
        [-2.7208,  1.1833],
        [ 1.2664,  0.1108],
        [-0.2945, -0.9440],
        [ 0.4144, -0.7691],
        [-1.2284, -0.4420],
        [ 0.7336,  0.8874],
        [ 0.2772, -0.0833]], device='cuda:0', dtype=torch.float64)
1.6262276823520085
tensor([[[44.1467, 15.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.6467, 17.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[43.1550, 17.2484],
         [45.1467, 14.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.9794, -0.9279],
        [ 1.0588, -0.1453],
        [-1.6860,  0.2021],
        [-1.1013, -0.6623],
        [ 0.3910,  2.0385],
        [ 0.2869, -1.1840],
        [-1.3336, -0.6435],
        [-2.0942,  0.6727]], device='cuda:0', dtype=torch.float64)
1.962185774050921
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 18.7464],
         [44.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [43.1550, 17.2484]],

        [[45.6467, 18.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.1467, 15.7464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8762, -0.4298],
        [-0.1846, -1.0245],
        [ 0.7418, -0.4616],
        [ 0.5471,  1.4537],
        [-2.6532,  1.0239],
        [ 1.2722,  0.4758],
        [-2.2654,  0.7953],
        [ 0.3077,  0.8573]], device='cuda:0', dtype=torch.float64)
1.4153346749630455
tensor([[[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 18.2464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 18.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3799,  1.4000],
        [ 0.5431,  1.9405],
        [ 0.1411,  2.1904],
        [ 0.3970,  0.0795],
        [ 0.4141, -1.6784],
        [ 0.8149, -0.0402],
        [ 0.0067, -0.0160],
        [ 0.9338, -0.5322]], device='cuda:0', dtype=torch.float64)
1.1229546813735491
tensor([[[45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.2464],
         [44.6986, 14.8933],
         [45.6467, 15.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [44.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6963,  1.9248],
        [ 0.4519, -0.7511],
        [-1.9248,  0.4684],
        [-0.4079, -1.1777],
        [ 1.3483,  0.3450],
        [ 0.1215, -0.8230],
        [ 0.1218, -1.3581],
        [ 0.4441, -0.1556]], device='cuda:0', dtype=torch.float64)
1.5519443560674158
tensor([[[43.1550, 17.2484],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.1467, 17.7464],
         [46.1467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.2464]],

        [[45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [45.1467, 14.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.6467, 17.7464],
         [45.6467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.5323,  0.7973],
        [ 0.0185, -1.0230],
        [-0.4825, -0.6029],
        [ 0.3792, -0.3676],
        [-1.4584, -0.2123],
        [-1.2617, -0.4503],
        [ 1.3110,  0.0537],
        [ 0.2904,  1.5382]], device='cuda:0', dtype=torch.float64)
1.7966038816756615
tensor([[[45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 17.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6923, 15.2861]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[45.6467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.4884, -0.3501],
        [ 0.5615,  0.8991],
        [ 0.3649, -0.3051],
        [ 0.5804, -0.8443],
        [ 1.0157,  0.0982],
        [ 0.3971,  1.9362],
        [ 0.7515,  1.8488],
        [ 0.9096,  0.3698]], device='cuda:0', dtype=torch.float64)
1.1582610334261294
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[43.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.3571,  0.2495],
        [ 0.1517, -0.8126],
        [ 0.1541, -0.8224],
        [-2.6323,  1.0934],
        [ 0.0911, -0.8655],
        [ 0.7022,  1.8922],
        [ 0.0745,  1.1590],
        [-1.3803,  0.0085]], device='cuda:0', dtype=torch.float64)
1.5474535933788185
tensor([[[43.6467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [43.6467, 16.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0755,  0.4424],
        [-2.0670,  0.6847],
        [ 0.6146, -0.2671],
        [-2.3439,  0.8610],
        [-0.6712, -1.0209],
        [-0.0156, -1.9242],
        [ 0.9063, -0.1436],
        [ 0.3336,  0.5801]], device='cuda:0', dtype=torch.float64)
1.6244946420392488
tensor([[[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.1507, 17.2434]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.1844,  0.4434],
        [ 0.8819, -0.1758],
        [ 0.2749, -0.8632],
        [ 0.5892, -0.6982],
        [ 0.3506, -0.5643],
        [ 0.0234,  2.0842],
        [ 0.5253,  0.6851],
        [ 0.6945,  0.6896]], device='cuda:0', dtype=torch.float64)
1.0473736939452998
tensor([[[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 18.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861],
         [43.6467, 16.2464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 17.7464],
         [43.1550, 17.2484],
         [44.1467, 15.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 13.7464],
         [44.1467, 15.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3774,  2.0285],
        [ 0.4368, -0.0099],
        [ 0.3238,  0.3909],
        [-1.9273, -0.2263],
        [ 0.2921, -1.0155],
        [-1.2113, -0.8597],
        [-1.7732, -0.3122],
        [ 0.8720,  0.4599]], device='cuda:0', dtype=torch.float64)
1.8006762633698892
tensor([[[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.6467, 16.2464]],

        [[43.1550, 17.2484],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464],
         [45.1467, 18.2464]],

        [[43.1550, 17.2484],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0959, -1.1666],
        [-1.8379,  0.0809],
        [ 0.9264,  0.8569],
        [-1.3693, -0.7184],
        [ 0.7488, -0.4728],
        [ 1.3046, -0.1728],
        [-2.1924,  0.7058],
        [-0.2964, -1.9500]], device='cuda:0', dtype=torch.float64)
1.6858610599243582
tensor([[[45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 15.7464],
         [45.1467, 18.7464]],

        [[43.1550, 17.2484],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [44.6467, 15.2464],
         [45.1519, 14.2344],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0872, -0.2422],
        [ 0.8033,  0.8398],
        [ 0.7121,  0.5102],
        [-1.1928, -0.5735],
        [-1.9541,  0.2501],
        [ 0.4675,  2.0996],
        [ 0.7649,  0.0775],
        [-0.0540, -1.1589]], device='cuda:0', dtype=torch.float64)
1.4270863268200678
tensor([[[46.1467, 16.7464],
         [44.1467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.0150,  1.2157],
        [ 1.1649, -0.5652],
        [ 0.4212,  0.5601],
        [ 0.2106,  1.5694],
        [-0.7487, -0.3015],
        [ 0.2852, -1.8725],
        [-0.0443, -0.1042],
        [ 0.0347,  1.8475]], device='cuda:0', dtype=torch.float64)
1.440451265340684
tensor([[[45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 18.2464],
         [45.1467, 18.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 18.2464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2189, -0.5951],
        [-1.3029, -0.5416],
        [ 0.1950, -2.0842],
        [ 0.8811, -0.1395],
        [-0.1828,  2.0067],
        [ 0.6412, -0.0807],
        [ 0.0983,  0.6232],
        [ 0.1811, -0.9526]], device='cuda:0', dtype=torch.float64)
1.485718173046458
tensor([[[45.6467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1519, 14.2344]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [44.6467, 15.2464]],

        [[45.1467, 18.7464],
         [45.1467, 17.7464],
         [45.1467, 18.2464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.7464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 14.7464],
         [45.1467, 13.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2236, -1.7481],
        [ 0.1528,  1.4510],
        [-0.5448, -1.0260],
        [ 0.7504, -0.6172],
        [-0.2799,  1.9470],
        [-0.0953, -0.9098],
        [-0.0639, -0.0390],
        [ 1.3386, -0.2808]], device='cuda:0', dtype=torch.float64)
1.518568128587972
tensor([[[44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [45.1467, 15.2464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [43.1550, 17.2484]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6467, 18.7464]],

        [[44.6467, 15.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.1519, 14.2344]],

        [[46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.5084, -0.5848],
        [ 0.4041, -1.8578],
        [ 0.6395, -0.7765],
        [ 0.0949, -1.0041],
        [-1.5950,  0.1793],
        [ 0.4814,  0.5958],
        [ 0.4890,  1.6837],
        [ 0.3593,  0.6227]], device='cuda:0', dtype=torch.float64)
1.5891602341850048
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1507, 17.2434]],

        [[45.1467, 15.2464],
         [45.1467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1778, -0.1831],
        [ 0.3983, -1.6474],
        [ 0.8903, -0.3015],
        [-0.2485, -0.9889],
        [ 0.0481, -2.0755],
        [ 1.3449, -0.1991],
        [ 0.7655, -0.3822],
        [-2.7187,  1.1639]], device='cuda:0', dtype=torch.float64)
1.2909701531212665
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 18.7464],
         [44.1467, 15.2464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.5636, 14.6820],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4775,  0.7042],
        [ 0.1367,  2.2659],
        [ 0.2001, -0.8994],
        [ 0.2186, -1.4507],
        [-1.0204, -0.8322],
        [-0.1533,  1.9367],
        [-0.2265, -0.8709],
        [ 0.7845, -0.4852]], device='cuda:0', dtype=torch.float64)
1.5280022543490839
tensor([[[45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [43.1550, 17.2484],
         [44.1467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.6467, 17.2464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3315, -0.1835],
        [-2.3621,  0.7751],
        [ 0.3100,  1.4020],
        [ 0.1933,  0.0415],
        [ 0.3327, -0.9599],
        [ 0.0258,  2.0571],
        [ 0.6528,  0.9758],
        [ 0.4508,  0.4524]], device='cuda:0', dtype=torch.float64)
1.563362951651265
tensor([[[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.1507, 17.2434],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2940, -1.0969],
        [-2.5777,  0.8070],
        [ 0.8017, -0.2127],
        [-1.7756,  0.1777],
        [ 0.4122,  0.3526],
        [ 0.6632, -0.6057],
        [-1.0449, -0.6202],
        [-1.0184, -0.4498]], device='cuda:0', dtype=torch.float64)
1.7579687746519514
tensor([[[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [45.1519, 14.2344],
         [45.1467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.1467, 14.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 17.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [43.6467, 16.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1397, -2.1513],
        [ 0.3177,  1.4932],
        [-1.1773, -0.7092],
        [ 0.8082,  0.7989],
        [-1.2807, -0.7799],
        [ 0.3770,  2.0230],
        [ 0.4408, -0.7574],
        [ 0.7812,  0.8568]], device='cuda:0', dtype=torch.float64)
1.4989594461634117
tensor([[[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [44.6467, 15.7464],
         [43.6467, 16.7464]],

        [[45.1467, 17.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [43.6467, 16.2464]],

        [[44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[45.1467, 17.7464],
         [45.1467, 18.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1507, 17.2434]],

        [[45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [45.1467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.7304,  1.1969],
        [-1.4529, -0.5059],
        [ 0.3478,  1.6808],
        [ 0.5975,  0.4654],
        [ 0.0746,  1.5904],
        [ 0.2018, -1.1875],
        [-0.0309,  1.1269],
        [ 0.5299,  0.3987]], device='cuda:0', dtype=torch.float64)
1.6377537995432894
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]],

        [[45.1467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [43.6467, 16.2464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6332,  0.8974],
        [ 1.3461,  0.0777],
        [ 1.3712,  0.3401],
        [ 0.6837, -0.8013],
        [ 1.1013,  0.3546],
        [ 1.4270,  0.0617],
        [ 0.1776,  0.6423],
        [ 0.4733,  1.4985]], device='cuda:0', dtype=torch.float64)
0.6341337470383465
tensor([[[46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.7464]],

        [[44.1467, 15.7464],
         [44.1467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 17.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464],
         [46.1467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 14.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7806,  1.9013],
        [-0.8832, -0.5953],
        [ 0.0972, -1.8230],
        [ 0.0135, -0.1659],
        [ 0.2713, -0.5313],
        [-1.2758, -0.5929],
        [-0.5872, -0.3463],
        [ 0.8232,  1.7680]], device='cuda:0', dtype=torch.float64)
1.7615907616262156
tensor([[[45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.6467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 13.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.1585, -1.9134],
        [-0.1084, -1.9127],
        [ 0.5029,  1.5506],
        [ 0.2573, -0.3957],
        [ 0.1003,  0.9643],
        [ 0.2810,  2.0160],
        [-1.4574, -0.1579],
        [ 0.3318, -1.6861]], device='cuda:0', dtype=torch.float64)
1.5955004201592564
tensor([[[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 17.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[44.1467, 15.2464],
         [45.6467, 16.2464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 18.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1519, 14.2344],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 14.7464],
         [46.1467, 15.7464]],

        [[45.1467, 17.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.1673, -0.8168],
        [-1.6046, -0.3447],
        [-0.0517, -1.7708],
        [-0.7635, -0.2681],
        [ 0.7671,  0.8374],
        [-0.6377, -0.5568],
        [ 0.0671, -0.6565],
        [ 0.0815,  2.0848]], device='cuda:0', dtype=torch.float64)
1.9206181652068623
tensor([[[45.1467, 18.2464],
         [45.1467, 17.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.1507, 17.2434]],

        [[46.1467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 18.7464],
         [46.1467, 15.7464],
         [45.1467, 18.2464]],

        [[45.6467, 18.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5685,  0.1206],
        [ 1.2176, -0.4029],
        [-0.9548, -0.4566],
        [ 1.1610,  0.3351],
        [ 1.0393, -0.0771],
        [ 0.5401,  1.1982],
        [ 0.8908,  0.0853],
        [-1.6510,  0.1542]], device='cuda:0', dtype=torch.float64)
1.2379759447138023
tensor([[[45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 15.7464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.7464],
         [45.6467, 18.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464]],

        [[45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2450,  0.0340],
        [-2.4926,  0.8836],
        [-1.5148, -0.5360],
        [ 0.6143,  0.7455],
        [-0.2301, -1.9918],
        [-0.2526, -1.9158],
        [ 1.3721, -0.1725],
        [ 0.2346, -2.1325]], device='cuda:0', dtype=torch.float64)
1.4662833984871848
tensor([[[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[44.1467, 15.2464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [44.1467, 15.2464],
         [44.6467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 17.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 15.2464],
         [45.1507, 17.2434],
         [45.6467, 15.7464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.5804, -0.2048],
        [-1.1481, -0.8521],
        [-0.5135, -0.8012],
        [-0.2542, -0.9737],
        [-1.7291, -0.1645],
        [ 0.8561, -0.2072],
        [ 0.2353,  1.8109],
        [ 0.6680,  1.0380]], device='cuda:0', dtype=torch.float64)
1.7887748006794215
tensor([[[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 17.7464]],

        [[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[45.1507, 17.2434],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3617, -0.7494],
        [ 0.6889, -0.2150],
        [ 1.1086,  0.1059],
        [-0.5680, -0.7953],
        [-1.9298,  0.6839],
        [ 0.2101, -1.3317],
        [-0.0720, -1.9575],
        [ 0.6575,  1.0334]], device='cuda:0', dtype=torch.float64)
1.5464053009048466
tensor([[[43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464],
         [43.1550, 17.2484]],

        [[45.1467, 14.7464],
         [45.1467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.8726, -0.2601],
        [-1.5760, -0.0484],
        [ 0.2033,  1.7097],
        [-0.5017, -0.5888],
        [ 0.2837,  0.4775],
        [ 0.2184,  0.1767],
        [-0.6739, -0.7771],
        [-0.3803, -1.9547]], device='cuda:0', dtype=torch.float64)
1.977953966419316
tensor([[[45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-2.4265,  0.8844],
        [ 0.2001,  1.4530],
        [-1.7124, -0.1060],
        [ 0.6389,  0.3116],
        [ 0.8934,  1.8164],
        [ 0.0468,  1.6491],
        [ 0.8938, -0.4244],
        [ 1.0619,  0.0710]], device='cuda:0', dtype=torch.float64)
1.3502345305204058
tensor([[[46.1467, 16.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 17.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [45.1519, 14.2344]],

        [[44.1467, 15.2464],
         [44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]],

        [[45.1467, 17.7464],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 16.7464],
         [45.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4930,  1.8610],
        [-0.0230, -1.1239],
        [-0.2352, -0.9853],
        [ 0.4378,  1.3371],
        [ 1.1262,  0.1362],
        [ 0.1801,  0.0755],
        [ 0.2777, -1.7360],
        [ 0.9641,  0.2288]], device='cuda:0', dtype=torch.float64)
1.2783475044256871
tensor([[[45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.6467, 15.2464]],

        [[45.1467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 14.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [45.5636, 14.6820]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9639, -0.5201],
        [-1.3190, -0.3246],
        [ 0.7127,  1.8421],
        [ 0.4010, -1.3475],
        [-1.7120,  0.0276],
        [ 1.0248,  0.6393],
        [ 0.2277, -1.9733],
        [-1.3440, -0.6399]], device='cuda:0', dtype=torch.float64)
1.685367680340581
tensor([[[45.1467, 17.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[45.6467, 17.2464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[45.1467, 14.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.6467, 18.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [44.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0116, -1.2810],
        [ 0.5824,  0.9372],
        [ 0.3474, -1.6426],
        [-0.6810, -0.7519],
        [-1.9787,  0.4407],
        [ 0.7238, -0.6130],
        [ 0.0170, -0.0343],
        [-0.3874, -0.9695]], device='cuda:0', dtype=torch.float64)
1.7691741757107307
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 15.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.1467, 18.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464]],

        [[44.1467, 15.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [43.6467, 16.2464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464],
         [46.1467, 15.7464]],

        [[43.6467, 16.7464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [44.6467, 15.2464]],

        [[45.1467, 18.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2142, -2.1013],
        [ 0.4599,  1.2104],
        [ 0.7147,  0.9658],
        [ 0.4185, -0.6337],
        [-0.0156,  1.6700],
        [ 0.0595,  1.7834],
        [-1.9317,  0.5119],
        [ 0.6565, -0.2514]], device='cuda:0', dtype=torch.float64)
1.4399616600867646
tensor([[[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [45.1467, 18.2464]],

        [[45.1467, 14.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [43.1550, 17.2484],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.8783,  0.6981],
        [-0.6831, -0.7319],
        [-0.3064, -0.9421],
        [-1.0927, -0.8095],
        [-0.1232, -1.9639],
        [ 0.6927, -0.4832],
        [ 0.4835,  1.3915],
        [-1.8321,  0.2869]], device='cuda:0', dtype=torch.float64)
1.7498766447465104
tensor([[[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 17.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 14.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [45.1467, 17.7464],
         [43.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.5636, 14.6820],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [45.6467, 18.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.2507, -0.9590],
        [ 0.8217,  0.1956],
        [ 0.4537,  1.8011],
        [ 0.5208, -0.4175],
        [-1.0930, -0.8093],
        [ 1.3526, -0.2132],
        [ 1.5843,  0.0318],
        [ 0.0546,  1.0032]], device='cuda:0', dtype=torch.float64)
1.3169465700084584
tensor([[[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.7464],
         [46.1467, 16.7464],
         [43.1550, 17.2484],
         [44.1467, 15.7464],
         [45.1467, 17.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 15.2464]],

        [[45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [45.1507, 17.2434],
         [45.6467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[45.1467, 17.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [43.6467, 16.2464],
         [45.1507, 17.2434]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4451, -0.3047],
        [ 1.0588, -0.0180],
        [-0.9503, -0.4839],
        [-0.4832, -0.5618],
        [-0.6567, -0.5004],
        [ 0.6323,  0.5748],
        [ 0.4794,  1.7199],
        [-1.2846, -0.7603]], device='cuda:0', dtype=torch.float64)
1.7331672104856337
tensor([[[43.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [44.1467, 15.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 17.7464],
         [45.1467, 18.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [43.6467, 16.2464],
         [44.1467, 15.2464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [44.1467, 15.7464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0300, -0.1842],
        [-1.4364, -0.0287],
        [ 0.5162,  1.5745],
        [ 0.6195, -0.5812],
        [-1.7471, -0.1488],
        [ 0.5109,  1.0771],
        [-1.4541, -0.5294],
        [-0.0910, -1.9586]], device='cuda:0', dtype=torch.float64)
1.7427180551321193
tensor([[[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 17.2464]],

        [[46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 18.2464],
         [45.6467, 18.7464],
         [45.6467, 18.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.6923, 15.2861],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6923, 15.2861],
         [45.1467, 15.2464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [45.6467, 17.2464]],

        [[45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2714, -0.8416],
        [ 0.2483,  1.5049],
        [ 0.6940,  0.6881],
        [ 0.6887, -0.0526],
        [ 0.0727, -0.7497],
        [-0.3124, -1.0887],
        [ 1.0558,  0.1792],
        [ 0.2741,  0.9094]], device='cuda:0', dtype=torch.float64)
1.222923444628106
tensor([[[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [46.1467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 15.7464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 15.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.8723,  0.0509],
        [-1.9233,  0.5910],
        [ 0.8822,  0.8485],
        [ 0.2685, -0.6188],
        [ 0.0025, -0.8664],
        [ 1.1288,  0.6309],
        [ 1.5375,  0.1756],
        [ 1.1657,  0.0913]], device='cuda:0', dtype=torch.float64)
1.383011164267193
tensor([[[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.6923, 15.2861],
         [46.1467, 16.2464],
         [45.1467, 15.7464]],

        [[45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [43.1550, 17.2484]],

        [[44.1467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.6467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7635,  0.3948],
        [ 0.2026,  0.1925],
        [ 0.8470, -0.1771],
        [-1.4748,  0.0749],
        [-0.6697, -0.7562],
        [ 0.5327,  1.2253],
        [ 0.6497,  0.5600],
        [-1.1515, -0.6006]], device='cuda:0', dtype=torch.float64)
1.664871578745434
tensor([[[45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [44.1467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [44.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464]],

        [[45.6467, 17.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-0.2732,  1.9281],
        [ 1.0887, -0.5324],
        [ 0.0356,  1.2118],
        [-0.2045, -0.5630],
        [ 0.7521,  1.2266],
        [ 1.1927, -0.3854],
        [-1.4113, -0.5907],
        [ 0.3196, -1.8627]], device='cuda:0', dtype=torch.float64)
1.434400973160693
tensor([[[45.1467, 17.7464],
         [45.1467, 18.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464]],

        [[45.1467, 13.7464],
         [43.6467, 16.7464],
         [45.1467, 15.2464],
         [44.1467, 15.7464],
         [45.6467, 17.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 17.7464]],

        [[45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1519, 14.2344],
         [45.6467, 15.7464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0332,  1.5138],
        [ 0.2445, -1.6533],
        [-1.4872, -0.1759],
        [ 0.0699, -0.9105],
        [ 0.1336,  0.3680],
        [ 0.7691,  0.6656],
        [ 0.0604,  0.7263],
        [ 0.0206, -2.1159]], device='cuda:0', dtype=torch.float64)
1.6009890422277824
tensor([[[45.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 16.2464]],

        [[45.6467, 18.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 18.7464]],

        [[45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [44.6467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.1467, 17.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 15.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.6467, 15.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7508, -0.5348],
        [ 0.6220,  1.4218],
        [ 0.6930,  0.4894],
        [ 0.7596,  1.8890],
        [ 0.6272,  1.6064],
        [ 0.5910,  0.5937],
        [-0.0332,  1.8456],
        [ 1.2651, -0.4199]], device='cuda:0', dtype=torch.float64)
0.9523701114353057
tensor([[[44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 18.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [45.1467, 15.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 16.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.6467, 16.7464],
         [45.1519, 14.2344]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.3832, -0.4008],
        [ 0.0595,  2.3320],
        [-1.0687, -0.5259],
        [ 0.1934,  0.0200],
        [ 0.0636,  1.1567],
        [ 0.5024,  1.3607],
        [-0.8821, -0.2113],
        [-1.3452, -0.2617]], device='cuda:0', dtype=torch.float64)
1.975759868567893
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464],
         [44.6467, 15.7464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464]],

        [[44.1467, 15.2464],
         [45.1467, 17.7464],
         [44.6467, 15.7464],
         [43.6467, 16.2464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 15.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [43.1550, 17.2484],
         [46.1467, 16.7464],
         [44.1467, 15.7464]],

        [[45.1467, 13.7464],
         [44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.7744,  0.1415],
        [-0.9314, -0.4128],
        [-1.5195,  0.1589],
        [ 0.3280,  1.2005],
        [ 0.2595, -0.8801],
        [ 0.6568,  1.1893],
        [-2.7912,  1.2227],
        [-0.4568, -0.8937]], device='cuda:0', dtype=torch.float64)
1.8328013713472786
tensor([[[45.6467, 18.7464],
         [45.1467, 18.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [44.6467, 15.2464],
         [44.6467, 15.7464]],

        [[45.6467, 18.7464],
         [45.6467, 17.7464],
         [45.6467, 18.2464],
         [45.1467, 18.7464],
         [46.1467, 16.2464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [43.6467, 16.7464],
         [46.1467, 16.2464],
         [44.1467, 15.2464],
         [45.1467, 13.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 18.7464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484],
         [44.6467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2495,  1.7072],
        [-0.3582, -0.6632],
        [ 0.4898,  1.6843],
        [ 0.8056, -0.1024],
        [ 0.5870,  0.1839],
        [-1.6688, -0.2938],
        [ 0.7999, -0.3384],
        [-1.4584, -0.3484]], device='cuda:0', dtype=torch.float64)
1.6636902933139872
tensor([[[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464],
         [45.6467, 15.7464]],

        [[43.6467, 16.2464],
         [43.1550, 17.2484],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.7464]],

        [[45.1467, 13.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.1467, 14.7464]],

        [[45.1467, 13.7464],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [44.6467, 15.2464]],

        [[46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 17.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 18.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6175,  0.6997],
        [-2.7128,  1.1836],
        [ 0.4674,  1.1714],
        [-1.6429, -0.1108],
        [-0.0676, -1.1509],
        [ 0.0421, -2.1199],
        [ 0.7795, -0.0381],
        [ 0.4949,  1.1919]], device='cuda:0', dtype=torch.float64)
1.5675389884488198
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.1467, 15.7464],
         [45.1467, 18.7464]],

        [[46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 17.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [45.6467, 17.2464]],

        [[44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464],
         [45.1467, 14.7464]],

        [[43.6467, 16.7464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.0784,  0.0108],
        [ 0.2881, -0.4209],
        [ 0.2400,  0.1628],
        [-0.2293, -1.9726],
        [ 0.4842,  0.2618],
        [ 0.7606,  0.6799],
        [-2.1528,  0.5212],
        [-0.8094, -0.5763]], device='cuda:0', dtype=torch.float64)
1.534774595092109
tensor([[[43.6467, 16.2464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [44.1467, 15.7464]],

        [[45.1467, 14.7464],
         [45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.1467, 15.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1519, 14.2344]],

        [[43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 13.7464],
         [43.6467, 16.2464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [45.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0341, -1.2659],
        [-0.5032, -0.8776],
        [ 0.4539, -0.4688],
        [-0.3532, -0.9282],
        [ 1.3216,  0.1990],
        [ 0.5737, -0.7306],
        [-2.6282,  0.8859],
        [ 1.1079,  0.0497]], device='cuda:0', dtype=torch.float64)
1.4973129024351677
tensor([[[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 16.7464]],

        [[44.1467, 15.7464],
         [45.6467, 16.2464],
         [43.6467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [44.1467, 15.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [45.6467, 17.7464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [44.6467, 15.2464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 17.7464],
         [43.6467, 16.7464],
         [44.6467, 15.7464],
         [44.1467, 15.7464]],

        [[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.4289,  1.3212],
        [-1.1639, -0.9186],
        [-1.8178, -0.1640],
        [ 0.3953, -0.0053],
        [ 0.9023, -0.1188],
        [ 0.7541,  0.1456],
        [-0.5678, -0.3545],
        [ 1.1452,  0.5125]], device='cuda:0', dtype=torch.float64)
1.564286811674625
tensor([[[45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[45.6467, 17.2464],
         [45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [43.6467, 16.2464]],

        [[44.1467, 15.2464],
         [45.1467, 17.7464],
         [44.1467, 15.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464]],

        [[45.1467, 15.2464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.7464]],

        [[45.1467, 13.7464],
         [44.6467, 15.2464],
         [43.6467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 14.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [46.1467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.3127, -0.5073],
        [-0.6896, -0.3214],
        [ 0.5783, -0.2283],
        [ 0.1449,  0.5894],
        [ 1.1413, -0.1761],
        [ 0.3624,  1.3409],
        [ 0.3871, -1.6384],
        [-1.4563, -0.2619]], device='cuda:0', dtype=torch.float64)
1.5982645651227494
tensor([[[45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 18.2464],
         [45.6467, 17.2464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6923, 15.2861],
         [46.1467, 15.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464]],

        [[43.1550, 17.2484],
         [43.6467, 16.7464],
         [43.6467, 16.2464],
         [45.1467, 14.7464],
         [44.1467, 15.2464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [45.6467, 17.2464],
         [45.1467, 14.7464],
         [43.6467, 16.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.1467, 15.2464],
         [45.6467, 16.7464]],

        [[45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.2234, -0.3183],
        [ 1.0391, -0.1046],
        [ 1.1779, -0.3438],
        [-2.5394,  0.9234],
        [-0.6238, -1.0980],
        [ 1.6162, -0.0635],
        [-1.7264,  0.2203],
        [ 1.4699,  0.0088]], device='cuda:0', dtype=torch.float64)
1.219621664013543
tensor([[[45.1467, 15.2464],
         [46.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 18.7464],
         [45.1467, 17.7464]],

        [[45.1467, 18.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 17.7464]],

        [[45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.6467, 17.2464]],

        [[45.1467, 17.7464],
         [45.1467, 18.2464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[43.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464]],

        [[45.1467, 15.2464],
         [44.6467, 15.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464],
         [45.6923, 15.2861]],

        [[45.6467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 17.7464],
         [45.6467, 17.2464],
         [45.1467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.1836, -0.8804],
        [-0.2647, -2.0173],
        [ 0.0781,  1.1514],
        [ 0.2393,  0.4615],
        [ 0.4998,  1.5451],
        [-0.1306, -1.9074],
        [-0.9238, -0.5516],
        [-1.8131,  0.2397]], device='cuda:0', dtype=torch.float64)
1.7793065493982432
tensor([[[45.6467, 17.2464],
         [45.6467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 17.7464],
         [45.1467, 15.2464]],

        [[46.1467, 16.2464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [45.6467, 17.7464],
         [45.6467, 16.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.2464],
         [43.1550, 17.2484],
         [43.6467, 16.7464],
         [44.1467, 15.2464]],

        [[45.6467, 15.7464],
         [45.1467, 15.2464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[45.1467, 17.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]],

        [[45.1467, 17.7464],
         [45.6467, 15.7464],
         [46.1467, 16.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464]],

        [[46.1467, 16.2464],
         [45.1467, 18.7464],
         [46.1467, 16.7464],
         [45.6467, 18.7464],
         [45.6467, 17.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0733, -0.6557],
        [-2.5309,  0.7565],
        [ 0.0208, -1.7094],
        [ 0.4171,  1.0753],
        [ 0.4555,  1.8407],
        [ 0.5500, -0.7153],
        [ 0.4226,  1.3984],
        [ 1.2990,  0.2221]], device='cuda:0', dtype=torch.float64)
1.3310296787990188
tensor([[[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 17.2464]],

        [[44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [44.6467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 15.2464],
         [45.6467, 16.2464]],

        [[45.6467, 17.2464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464]],

        [[43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [43.1550, 17.2484],
         [45.1467, 13.7464]],

        [[46.1467, 16.7464],
         [45.6467, 17.2464],
         [46.1467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464]],

        [[43.6467, 16.2464],
         [44.6467, 15.2464],
         [44.1467, 15.2464],
         [43.6467, 16.7464],
         [45.1467, 14.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.3423, -0.2420],
        [ 0.5470,  1.6532],
        [ 1.1462,  0.6617],
        [ 1.1432, -0.1635],
        [ 0.2164,  1.9068],
        [-1.4236,  0.0505],
        [ 0.6964,  0.6962],
        [-2.5542,  0.7868]], device='cuda:0', dtype=torch.float64)
1.5468324182900681
tensor([[[45.1467, 13.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 15.7464],
         [44.6467, 15.2464]],

        [[45.1467, 17.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.6467, 15.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [45.1467, 14.7464],
         [45.6467, 16.7464]],

        [[45.6467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [46.1467, 16.2464],
         [45.1467, 14.7464]],

        [[45.6467, 15.7464],
         [45.6467, 16.2464],
         [45.1467, 15.2464],
         [45.6467, 16.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.7464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 16.2464]],

        [[45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 17.7464],
         [46.1467, 16.2464]],

        [[45.1467, 17.7464],
         [44.1467, 15.7464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 17.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.6575,  1.0334],
        [ 1.4295,  0.0153],
        [ 0.1630, -1.3326],
        [ 1.1684,  0.2700],
        [ 0.6775, -0.8564],
        [ 0.3369,  0.0918],
        [ 0.7460,  0.0528],
        [ 0.6603, -0.0270]], device='cuda:0', dtype=torch.float64)
0.8602893717965396
tensor([[[43.1550, 17.2484],
         [45.1467, 15.2464],
         [45.6467, 15.7464],
         [44.1467, 15.7464],
         [44.6467, 15.2464]],

        [[44.6467, 15.2464],
         [43.6467, 16.2464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 14.7464]],

        [[45.6467, 18.7464],
         [44.1467, 15.7464],
         [43.6467, 16.7464],
         [45.1467, 18.7464],
         [46.1467, 16.7464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.6467, 15.7464],
         [45.6467, 16.7464],
         [45.1467, 15.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [46.1467, 16.2464]],

        [[46.1467, 16.2464],
         [45.6467, 16.2464],
         [45.1467, 17.7464],
         [46.1467, 16.7464],
         [45.6467, 15.7464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [45.1467, 13.7464],
         [44.6467, 15.2464],
         [45.6923, 15.2861]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.1467, 18.7464],
         [45.6467, 15.7464],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.0711, -1.8800],
        [-1.1077, -0.0848],
        [-1.8956,  0.3008],
        [-1.5821, -0.1597],
        [ 1.2165, -0.3737],
        [ 0.1090,  0.7123],
        [ 1.2056, -0.2587],
        [-2.4670,  0.9028]], device='cuda:0', dtype=torch.float64)
1.7748967721180853
tensor([[[43.6467, 16.2464],
         [43.6467, 16.7464],
         [44.1467, 15.7464],
         [44.1467, 15.2464],
         [45.1467, 15.2464]],

        [[45.1467, 17.7464],
         [46.1467, 16.2464],
         [45.6467, 16.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 15.7464],
         [45.6467, 15.7464],
         [45.1467, 15.2464]],

        [[45.6467, 17.2464],
         [45.1467, 15.2464],
         [45.1467, 17.7464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[45.1467, 17.7464],
         [45.6467, 16.2464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 16.7464]],

        [[45.6467, 18.7464],
         [46.1467, 16.7464],
         [45.1467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 18.2464]],

        [[45.1467, 15.2464],
         [45.1467, 14.7464],
         [46.1467, 16.2464],
         [45.1467, 13.7464],
         [45.6467, 15.7464]],

        [[46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 15.7464],
         [45.1467, 17.7464],
         [43.6467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[-1.5804, -0.2632],
        [-1.1860, -0.8919],
        [ 0.0701, -0.8759],
        [ 0.6691,  0.8458],
        [ 0.4717,  0.2326],
        [-1.3777, -0.6849],
        [ 0.4015, -1.0338],
        [ 1.4798, -0.0623]], device='cuda:0', dtype=torch.float64)
1.729955061267247
tensor([[[45.1467, 17.7464],
         [44.6467, 15.2464],
         [45.1467, 13.7464],
         [46.1467, 16.7464],
         [45.6467, 16.2464]],

        [[45.6467, 17.7464],
         [46.1467, 16.2464],
         [46.1467, 16.7464],
         [45.6467, 17.2464],
         [45.1467, 17.7464]],

        [[46.1467, 16.2464],
         [45.6467, 15.7464],
         [43.6467, 16.2464],
         [45.6467, 16.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.1467, 15.7464],
         [45.1467, 17.7464]],

        [[46.1467, 16.7464],
         [45.6467, 18.2464],
         [46.1467, 16.2464],
         [45.6467, 18.7464],
         [45.1467, 17.7464]],

        [[45.6467, 15.7464],
         [46.1467, 16.2464],
         [45.6467, 16.2464],
         [46.1467, 16.7464],
         [46.1467, 15.7464]],

        [[44.1467, 15.7464],
         [44.6467, 15.2464],
         [43.1550, 17.2484],
         [43.6467, 16.7464],
         [45.1467, 14.7464]],

        [[45.1467, 15.2464],
         [45.1467, 13.7464],
         [45.1467, 14.7464],
         [44.6467, 15.2464],
         [46.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.2641, -1.3743],
        [ 0.1089,  2.1774],
        [ 1.4409,  0.2043],
        [ 0.1438, -1.9812],
        [ 0.1904,  1.7321],
        [ 1.1821, -0.1334],
        [-2.0580,  0.5621],
        [ 0.7153, -0.7259]], device='cuda:0', dtype=torch.float64)
1.2980302872057277

Validation DataLoader 0: 100%|##########| 412/412 [01:41<00:00,  4.08it/s][AEpoch 1: 100%|##########| 3714/3714 [1:05:19<00:00,  1.06s/it, loss=3.24, v_num=0, train/loss_step=3.400, train/acc_step=0.000, val/loss_step=3.660, val/acc_step=0.000, val/haversine_distance_step=1.540, val/loss_epoch=3.460, val/acc_epoch=0.0931, val/haversine_distance_epoch=1.540, train/loss_epoch=3.590, train/acc_epoch=0.0649]Epoch 1: 100%|##########| 3714/3714 [1:05:19<00:00,  1.06s/it, loss=3.24, v_num=0, train/loss_step=3.400, train/acc_step=0.000, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.590, train/acc_epoch=0.0649] 
                                                                          [AMetric val/loss improved by 0.208 >= min_delta = 0.0. New best score: 3.247
Epoch 1: 100%|##########| 3714/3714 [1:05:30<00:00,  1.06s/it, loss=3.24, v_num=0, train/loss_step=3.400, train/acc_step=0.000, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109] Epoch 2: 100%|##########| 3714/3714 [1:05:31<00:00,  1.06s/it, loss=3.24, v_num=0, train/loss_step=3.400, train/acc_step=0.000, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 0:  53%|#####3    | 1980/3714 [19:14<16:51,  1.72it/s, loss=0.844, v_num=0, train/loss_step=0.673, train/acc_step=0.750]Epoch 0:  53%|#####3    | 1980/3714 [19:14<16:51,  1.72it/s, loss=0.89, v_num=0, train/loss_step=0.418, train/acc_step=0.500] Epoch 2:   4%|4         | 165/3714 [1:07:18<24:07:44, 24.48s/it, loss=3.24, v_num=0, train/loss_step=3.400, train/acc_step=0.000, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 2:   4%|4         | 165/3714 [1:07:18<24:07:44, 24.48s/it, loss=3.33, v_num=0, train/loss_step=3.020, train/acc_step=0.250, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 0:  58%|#####7    | 2145/3714 [20:52<15:16,  1.71it/s, loss=0.89, v_num=0, train/loss_step=0.418, train/acc_step=0.500]Epoch 0:  58%|#####7    | 2145/3714 [20:52<15:16,  1.71it/s, loss=0.834, v_num=0, train/loss_step=1.180, train/acc_step=0.875]Epoch 2:   9%|8         | 330/3714 [1:08:55<11:46:47, 12.53s/it, loss=3.33, v_num=0, train/loss_step=3.020, train/acc_step=0.250, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 2:   9%|8         | 330/3714 [1:08:55<11:46:47, 12.53s/it, loss=3.29, v_num=0, train/loss_step=3.520, train/acc_step=0.000, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 0:  62%|######2   | 2310/3714 [22:28<13:39,  1.71it/s, loss=0.834, v_num=0, train/loss_step=1.180, train/acc_step=0.875]Epoch 0:  62%|######2   | 2310/3714 [22:28<13:39,  1.71it/s, loss=0.863, v_num=0, train/loss_step=1.370, train/acc_step=0.375]Epoch 2:  13%|#3        | 495/3714 [1:10:33<7:38:51,  8.55s/it, loss=3.29, v_num=0, train/loss_step=3.520, train/acc_step=0.000, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109] Epoch 2:  13%|#3        | 495/3714 [1:10:33<7:38:51,  8.55s/it, loss=3.22, v_num=0, train/loss_step=3.220, train/acc_step=0.125, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 0:  67%|######6   | 2475/3714 [24:06<12:03,  1.71it/s, loss=0.863, v_num=0, train/loss_step=1.370, train/acc_step=0.375]Epoch 0:  67%|######6   | 2475/3714 [24:06<12:03,  1.71it/s, loss=0.909, v_num=0, train/loss_step=1.690, train/acc_step=0.125]Epoch 2:  18%|#7        | 660/3714 [1:12:10<5:33:56,  6.56s/it, loss=3.22, v_num=0, train/loss_step=3.220, train/acc_step=0.125, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 2:  18%|#7        | 660/3714 [1:12:10<5:33:56,  6.56s/it, loss=3.26, v_num=0, train/loss_step=3.270, train/acc_step=0.125, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 0:  71%|#######1  | 2640/3714 [25:42<10:27,  1.71it/s, loss=0.909, v_num=0, train/loss_step=1.690, train/acc_step=0.125]Epoch 0:  71%|#######1  | 2640/3714 [25:42<10:27,  1.71it/s, loss=0.68, v_num=0, train/loss_step=0.802, train/acc_step=1.000] Epoch 2:  22%|##2       | 825/3714 [1:13:45<4:18:18,  5.36s/it, loss=3.26, v_num=0, train/loss_step=3.270, train/acc_step=0.125, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 2:  22%|##2       | 825/3714 [1:13:45<4:18:18,  5.36s/it, loss=3.29, v_num=0, train/loss_step=3.490, train/acc_step=0.000, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 0:  76%|#######5  | 2805/3714 [27:21<08:51,  1.71it/s, loss=0.68, v_num=0, train/loss_step=0.802, train/acc_step=1.000]Epoch 0:  76%|#######5  | 2805/3714 [27:21<08:51,  1.71it/s, loss=0.957, v_num=0, train/loss_step=1.050, train/acc_step=0.875]Epoch 2:  27%|##6       | 990/3714 [1:15:25<3:27:30,  4.57s/it, loss=3.29, v_num=0, train/loss_step=3.490, train/acc_step=0.000, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 2:  27%|##6       | 990/3714 [1:15:25<3:27:30,  4.57s/it, loss=3.3, v_num=0, train/loss_step=3.230, train/acc_step=0.000, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109] Epoch 0:  80%|#######9  | 2970/3714 [28:59<07:15,  1.71it/s, loss=0.957, v_num=0, train/loss_step=1.050, train/acc_step=0.875]Epoch 0:  80%|#######9  | 2970/3714 [28:59<07:15,  1.71it/s, loss=0.844, v_num=0, train/loss_step=0.645, train/acc_step=0.750]Epoch 2:  31%|###1      | 1155/3714 [1:17:04<2:50:46,  4.00s/it, loss=3.3, v_num=0, train/loss_step=3.230, train/acc_step=0.000, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 2:  31%|###1      | 1155/3714 [1:17:04<2:50:46,  4.00s/it, loss=3.17, v_num=0, train/loss_step=3.570, train/acc_step=0.125, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 0:  84%|########4 | 3135/3714 [30:34<05:38,  1.71it/s, loss=0.844, v_num=0, train/loss_step=0.645, train/acc_step=0.750]Epoch 0:  84%|########4 | 3135/3714 [30:34<05:38,  1.71it/s, loss=0.795, v_num=0, train/loss_step=0.529, train/acc_step=0.625]Epoch 2:  36%|###5      | 1320/3714 [1:18:42<2:22:45,  3.58s/it, loss=3.17, v_num=0, train/loss_step=3.570, train/acc_step=0.125, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 2:  36%|###5      | 1320/3714 [1:18:42<2:22:45,  3.58s/it, loss=3.2, v_num=0, train/loss_step=3.080, train/acc_step=0.375, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109] Epoch 0:  89%|########8 | 3300/3714 [32:13<04:02,  1.71it/s, loss=0.795, v_num=0, train/loss_step=0.529, train/acc_step=0.625]Epoch 0:  89%|########8 | 3300/3714 [32:13<04:02,  1.71it/s, loss=0.826, v_num=0, train/loss_step=0.645, train/acc_step=0.625]Epoch 0:  89%|########8 | 3302/3714 [32:14<04:01,  1.71it/s, loss=0.826, v_num=0, train/loss_step=0.645, train/acc_step=0.625]Epoch 0:  89%|########8 | 3302/3714 [32:14<04:01,  1.71it/s, loss=0.855, v_num=0, train/loss_step=1.060, train/acc_step=0.750]
Validation: 0it [00:00, ?it/s][A
Validation DataLoader 0:   0%|          | 0/412 [00:04<?, ?it/s][A
Validation DataLoader 0:  40%|####      | 165/412 [00:40<01:00,  4.08it/s][AEpoch 0:  93%|#########3| 3467/3714 [32:55<02:20,  1.75it/s, loss=0.855, v_num=0, train/loss_step=1.060, train/acc_step=0.750]Epoch 2:  40%|###9      | 1485/3714 [1:20:20<2:00:36,  3.25s/it, loss=3.2, v_num=0, train/loss_step=3.080, train/acc_step=0.375, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 2:  40%|###9      | 1485/3714 [1:20:20<2:00:36,  3.25s/it, loss=3.19, v_num=0, train/loss_step=2.900, train/acc_step=0.125, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]
Validation DataLoader 0:  80%|########  | 330/412 [01:16<00:19,  4.29it/s][AEpoch 0:  98%|#########7| 3632/3714 [33:32<00:45,  1.80it/s, loss=0.855, v_num=0, train/loss_step=1.060, train/acc_step=0.750]
Validation DataLoader 0: 100%|##########| 412/412 [01:33<00:00,  4.40it/s][AEpoch 0: 100%|##########| 3714/3714 [33:49<00:00,  1.83it/s, loss=0.855, v_num=0, train/loss_step=1.060, train/acc_step=0.750]Epoch 0: 100%|##########| 3714/3714 [33:49<00:00,  1.83it/s, loss=0.855, v_num=0, train/loss_step=1.060, train/acc_step=0.750, val/loss_step=0.743, val/acc_step=0.625, val/haversine_distance_step=1.250, val/loss_epoch=0.781, val/acc_epoch=0.639, val/haversine_distance_epoch=1.260]
                                                                          [A/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `training_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Metric val/loss improved. New best score: 0.781
Epoch 0: 100%|##########| 3714/3714 [33:59<00:00,  1.82it/s, loss=0.855, v_num=0, train/loss_step=1.060, train/acc_step=0.750, val/loss_step=0.743, val/acc_step=0.625, val/haversine_distance_step=1.250, val/loss_epoch=0.781, val/acc_epoch=0.639, val/haversine_distance_epoch=1.260, train/loss_epoch=0.891, train/acc_epoch=0.583]Epoch 1: 100%|##########| 3714/3714 [34:00<00:00,  1.82it/s, loss=0.855, v_num=0, train/loss_step=1.060, train/acc_step=0.750, val/loss_step=0.743, val/acc_step=0.625, val/haversine_distance_step=1.250, val/loss_epoch=0.781, val/acc_epoch=0.639, val/haversine_distance_epoch=1.260, train/loss_epoch=0.891, train/acc_epoch=0.583]Epoch 2:  44%|####4     | 1650/3714 [1:21:56<1:42:30,  2.98s/it, loss=3.19, v_num=0, train/loss_step=2.900, train/acc_step=0.125, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 2:  44%|####4     | 1650/3714 [1:21:56<1:42:30,  2.98s/it, loss=3.08, v_num=0, train/loss_step=2.760, train/acc_step=0.500, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 1:   4%|4         | 165/3714 [35:45<12:49:03, 13.00s/it, loss=0.855, v_num=0, train/loss_step=1.060, train/acc_step=0.750, val/loss_step=0.743, val/acc_step=0.625, val/haversine_distance_step=1.250, val/loss_epoch=0.781, val/acc_epoch=0.639, val/haversine_distance_epoch=1.260, train/loss_epoch=0.891, train/acc_epoch=0.583]Epoch 1:   4%|4         | 165/3714 [35:45<12:49:03, 13.00s/it, loss=0.678, v_num=0, train/loss_step=1.000, train/acc_step=0.625, val/loss_step=0.743, val/acc_step=0.625, val/haversine_distance_step=1.250, val/loss_epoch=0.781, val/acc_epoch=0.639, val/haversine_distance_epoch=1.260, train/loss_epoch=0.891, train/acc_epoch=0.583]Epoch 2:  49%|####8     | 1815/3714 [1:23:34<1:27:26,  2.76s/it, loss=3.08, v_num=0, train/loss_step=2.760, train/acc_step=0.500, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 2:  49%|####8     | 1815/3714 [1:23:34<1:27:26,  2.76s/it, loss=3.26, v_num=0, train/loss_step=3.160, train/acc_step=0.375, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 1:   9%|8         | 330/3714 [37:22<6:23:14,  6.80s/it, loss=0.678, v_num=0, train/loss_step=1.000, train/acc_step=0.625, val/loss_step=0.743, val/acc_step=0.625, val/haversine_distance_step=1.250, val/loss_epoch=0.781, val/acc_epoch=0.639, val/haversine_distance_epoch=1.260, train/loss_epoch=0.891, train/acc_epoch=0.583] Epoch 1:   9%|8         | 330/3714 [37:22<6:23:14,  6.80s/it, loss=0.871, v_num=0, train/loss_step=1.360, train/acc_step=0.375, val/loss_step=0.743, val/acc_step=0.625, val/haversine_distance_step=1.250, val/loss_epoch=0.781, val/acc_epoch=0.639, val/haversine_distance_epoch=1.260, train/loss_epoch=0.891, train/acc_epoch=0.583]Epoch 2:  53%|#####3    | 1980/3714 [1:25:14<1:14:38,  2.58s/it, loss=3.26, v_num=0, train/loss_step=3.160, train/acc_step=0.375, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 2:  53%|#####3    | 1980/3714 [1:25:14<1:14:38,  2.58s/it, loss=3.07, v_num=0, train/loss_step=2.820, train/acc_step=0.375, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 1:  13%|#3        | 495/3714 [39:00<4:13:42,  4.73s/it, loss=0.871, v_num=0, train/loss_step=1.360, train/acc_step=0.375, val/loss_step=0.743, val/acc_step=0.625, val/haversine_distance_step=1.250, val/loss_epoch=0.781, val/acc_epoch=0.639, val/haversine_distance_epoch=1.260, train/loss_epoch=0.891, train/acc_epoch=0.583]Epoch 1:  13%|#3        | 495/3714 [39:00<4:13:42,  4.73s/it, loss=0.845, v_num=0, train/loss_step=0.798, train/acc_step=0.625, val/loss_step=0.743, val/acc_step=0.625, val/haversine_distance_step=1.250, val/loss_epoch=0.781, val/acc_epoch=0.639, val/haversine_distance_epoch=1.260, train/loss_epoch=0.891, train/acc_epoch=0.583]Epoch 2:  58%|#####7    | 2145/3714 [1:26:52<1:03:33,  2.43s/it, loss=3.07, v_num=0, train/loss_step=2.820, train/acc_step=0.375, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 2:  58%|#####7    | 2145/3714 [1:26:52<1:03:33,  2.43s/it, loss=3.25, v_num=0, train/loss_step=3.050, train/acc_step=0.125, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 1:  18%|#7        | 660/3714 [40:38<3:08:02,  3.69s/it, loss=0.845, v_num=0, train/loss_step=0.798, train/acc_step=0.625, val/loss_step=0.743, val/acc_step=0.625, val/haversine_distance_step=1.250, val/loss_epoch=0.781, val/acc_epoch=0.639, val/haversine_distance_epoch=1.260, train/loss_epoch=0.891, train/acc_epoch=0.583]Epoch 1:  18%|#7        | 660/3714 [40:38<3:08:02,  3.69s/it, loss=0.768, v_num=0, train/loss_step=1.050, train/acc_step=0.500, val/loss_step=0.743, val/acc_step=0.625, val/haversine_distance_step=1.250, val/loss_epoch=0.781, val/acc_epoch=0.639, val/haversine_distance_epoch=1.260, train/loss_epoch=0.891, train/acc_epoch=0.583]Epoch 2:  62%|######2   | 2310/3714 [1:28:31<53:48,  2.30s/it, loss=3.25, v_num=0, train/loss_step=3.050, train/acc_step=0.125, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]  Epoch 2:  62%|######2   | 2310/3714 [1:28:31<53:48,  2.30s/it, loss=3.17, v_num=0, train/loss_step=3.130, train/acc_step=0.125, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 1:  22%|##2       | 825/3714 [42:17<2:28:04,  3.08s/it, loss=0.768, v_num=0, train/loss_step=1.050, train/acc_step=0.500, val/loss_step=0.743, val/acc_step=0.625, val/haversine_distance_step=1.250, val/loss_epoch=0.781, val/acc_epoch=0.639, val/haversine_distance_epoch=1.260, train/loss_epoch=0.891, train/acc_epoch=0.583]Epoch 1:  22%|##2       | 825/3714 [42:17<2:28:04,  3.08s/it, loss=0.788, v_num=0, train/loss_step=1.110, train/acc_step=1.000, val/loss_step=0.743, val/acc_step=0.625, val/haversine_distance_step=1.250, val/loss_epoch=0.781, val/acc_epoch=0.639, val/haversine_distance_epoch=1.260, train/loss_epoch=0.891, train/acc_epoch=0.583]Epoch 2:  67%|######6   | 2475/3714 [1:30:09<45:07,  2.19s/it, loss=3.17, v_num=0, train/loss_step=3.130, train/acc_step=0.125, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 2:  67%|######6   | 2475/3714 [1:30:09<45:07,  2.19s/it, loss=3.33, v_num=0, train/loss_step=2.980, train/acc_step=0.250, val/loss_step=3.190, val/acc_step=0.000, val/haversine_distance_step=1.300, val/loss_epoch=3.250, val/acc_epoch=0.124, val/haversine_distance_epoch=1.520, train/loss_epoch=3.380, train/acc_epoch=0.109]Epoch 1:  27%|##6       | 990/3714 [43:56<2:00:53,  2.66s/it, loss=0.788, v_num=0, train/loss_step=1.110, train/acc_step=1.000, val/loss_step=0.743, val/acc_step=0.625, val/haversine_distance_step=1.250, val/loss_epoch=0.781, val/acc_epoch=0.639, val/haversine_distance_epoch=1.260, train/loss_epoch=0.891, train/acc_epoch=0.583]Epoch 1:  27%|##6       | 990/3714 [43:56<2:00:53,  2.66s/it, loss=0.755, v_num=0, train/loss_step=0.804, train/acc_step=0.625, val/loss_step=0.743, val/acc_step=0.625, val/haversine_distance_step=1.250, val/loss_epoch=0.781, val/acc_epoch=0.639, val/haversine_distance_epoch=1.260, train/loss_epoch=0.891, train/acc_epoch=0.583]Standard output piped to file:
/home/fwolf/lumen-geoguesser/reports/train-resnext101_32x8d-22-04-21-21-56-20.txt
[{'batch_size': 8,
  'cached_df': 'data/complete/data__spacing_0.5__num_class_55.csv',
  'dataset_dirs': ['data/external/', 'data/raw/'],
  'dataset_frac': 1,
  'image_size': 112,
  'load_in_ram': False,
  'lr': 1e-05,
  'models': ['resnext101_32x8d'],
  'num_workers': 32,
  'output_report': PosixPath('/home/fwolf/lumen-geoguesser/reports'),
  'pretrained': True,
  'quick': False,
  'regression': False,
  'shuffle_before_splitting': False,
  'split_ratios': [0.8, 0.1, 0.1],
  'trainer_checkpoint': None,
  'unfreeze_backbone_at_epoch': 5,
  'unfreeze_blocks': 'all',
  'use_single_images': False,
  'weight_decay': 0},
 {'accelerator': 'gpu',
  'accumulate_grad_batches': None,
  'amp_backend': 'native',
  'amp_level': None,
  'auto_lr_find': False,
  'auto_scale_batch_size': False,
  'auto_select_gpus': False,
  'benchmark': None,
  'check_val_every_n_epoch': 1,
  'checkpoint_callback': None,
  'default_root_dir': None,
  'detect_anomaly': False,
  'deterministic': False,
  'devices': '1',
  'enable_checkpointing': True,
  'enable_model_summary': True,
  'enable_progress_bar': True,
  'fast_dev_run': False,
  'flush_logs_every_n_steps': None,
  'gpus': None,
  'gradient_clip_algorithm': None,
  'gradient_clip_val': None,
  'ipus': None,
  'limit_predict_batches': None,
  'limit_test_batches': None,
  'limit_train_batches': None,
  'limit_val_batches': None,
  'log_every_n_steps': 20,
  'log_gpu_memory': None,
  'logger': True,
  'max_epochs': None,
  'max_steps': -1,
  'max_time': None,
  'min_epochs': None,
  'min_steps': None,
  'move_metrics_to_cpu': False,
  'multiple_trainloader_mode': 'max_size_cycle',
  'num_nodes': 1,
  'num_processes': None,
  'num_sanity_val_steps': 2,
  'overfit_batches': 0.0,
  'plugins': None,
  'precision': 32,
  'prepare_data_per_node': None,
  'process_position': 0,
  'profiler': None,
  'progress_bar_refresh_rate': None,
  'reload_dataloaders_every_n_epochs': 0,
  'replace_sampler_ddp': True,
  'resume_from_checkpoint': None,
  'stochastic_weight_avg': False,
  'strategy': None,
  'sync_batchnorm': False,
  'terminate_on_nan': None,
  'tpu_cores': None,
  'track_grad_norm': -1,
  'val_check_interval': None,
  'weights_save_path': None,
  'weights_summary': 'top'}]
GeoguesserDataModule init
GeoguesserDataset init
GeoguesserDataset init
GeoguesserDataset init
Train, val and test size 26417 3302 3303
Using cache found in /home/fwolf/.cache/torch/hub/pytorch_vision_v0.12.0
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py:91: PossibleUserWarning: `max_epochs` was not set. Setting it to 1000 epochs. To train without an epoch limit, set `max_epochs=-1`.
  rank_zero_warn(
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/torch/cuda/__init__.py:122: UserWarning: 
    Found GPU1 NVIDIA GeForce GTX TITAN Black which is of cuda capability 3.5.
    PyTorch no longer supports this GPU because it is too old.
    The minimum cuda capability supported by this library is 3.7.
    
  warnings.warn(old_gpu_warn % (d, name, major, minor, min_arch // 10, min_arch % 10))
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name     | Type   | Params | In sizes         | Out sizes
-------------------------------------------------------------------
0 | backbone | ResNet | 86.7 M | [8, 3, 112, 112] | [8, 2048]
1 | fc       | Linear | 434 K  | [8, 8192]        | [8, 53]  
-------------------------------------------------------------------
637 K     Trainable params
86.5 M    Non-trainable params
87.2 M    Total params
348.706   Total estimated model params size (MB)
/home/fwolf/lumen-geoguesser/src/model.py:98: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).
  outs_backbone = [self.backbone(image) for image in image_list]
Sanity Checking: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:486: PossibleUserWarning: Your `val_dataloader`'s sampler has shuffling enabled, it is strongly recommended that you turn shuffling off for val/test/predict dataloaders.
  rank_zero_warn(
Sanity Checking DataLoader 0:   0%|          | 0/2 [00:03<?, ?it/s]/home/fwolf/lumen-geoguesser/src/utils_model.py:55: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  preds, indices = torch.topk(F.softmax(y_pred), k = top_k)
tensor([[[43.6467, 16.7464],
         [43.4109, 16.7701],
         [45.1467, 18.2464],
         [45.4465, 13.7554],
         [44.1467, 16.2464]],

        [[44.1467, 16.2464],
         [45.1467, 18.2464],
         [45.1467, 13.7464],
         [43.4109, 16.7701],
         [43.4865, 17.1963]],

        [[45.1467, 18.2464],
         [45.1467, 16.2464],
         [44.1467, 16.2464],
         [43.4109, 16.7701],
         [45.4465, 13.7554]],

        [[45.1467, 18.2464],
         [44.1467, 16.2464],
         [45.1467, 17.7464],
         [45.6467, 17.7464],
         [44.6467, 15.7464]],

        [[43.1550, 17.2484],
         [44.8636, 18.8414],
         [44.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 13.7464]],

        [[43.6467, 16.7464],
         [45.1467, 18.2464],
         [43.4109, 16.7701],
         [44.1467, 15.2464],
         [45.1819, 19.2545]],

        [[43.6467, 16.7464],
         [43.4109, 16.7701],
         [44.1467, 16.2464],
         [45.4465, 13.7554],
         [43.6467, 16.2464]],

        [[44.1467, 16.2464],
         [43.4109, 16.7701],
         [45.1467, 18.7464],
         [45.1467, 13.7464],
         [43.6467, 16.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 0.9093,  0.9002],
        [ 0.5596,  1.7056],
        [ 0.6323,  0.5748],
        [ 0.8084, -0.6925],
        [ 0.1672, -0.1642],
        [ 0.1836,  0.3750],
        [ 0.8748,  1.8573],
        [-0.2730,  1.9169]], device='cuda:0', dtype=torch.float64)
1.8468562776299762
tensor([[[43.4109, 16.7701],
         [45.1467, 18.2464],
         [44.1467, 16.2464],
         [45.4465, 13.7554],
         [42.9020, 17.3889]],

        [[45.1467, 18.2464],
         [44.1467, 16.2464],
         [46.5308, 16.2925],
         [45.6467, 16.7464],
         [46.4656, 16.6611]],

        [[45.1467, 18.2464],
         [44.1467, 16.2464],
         [45.6467, 17.7464],
         [45.1467, 15.2464],
         [42.9020, 17.3889]],

        [[45.1467, 18.2464],
         [43.4109, 16.7701],
         [45.4465, 13.7554],
         [45.6467, 16.7464],
         [45.1467, 16.2464]],

        [[44.1467, 16.2464],
         [45.4465, 13.7554],
         [45.1467, 13.7464],
         [43.6467, 16.7464],
         [43.4109, 16.7701]],

        [[45.1467, 18.2464],
         [44.1467, 16.2464],
         [45.1467, 16.2464],
         [45.6467, 15.7464],
         [45.1819, 19.2545]],

        [[44.1467, 16.2464],
         [45.1467, 18.2464],
         [45.6467, 17.7464],
         [43.6467, 16.7464],
         [43.4109, 16.7701]],

        [[45.1467, 18.2464],
         [45.5219, 19.0959],
         [43.6467, 16.7464],
         [44.1467, 16.2464],
         [45.1467, 16.2464]]], device='cuda:0', dtype=torch.float64)
tensor([[ 1.4093, -0.1443],
        [-1.7382, -0.1377],
        [-0.1282, -2.0385],
        [ 0.3845,  0.1423],
        [-0.0704, -1.8591],
        [ 1.3721, -0.1725],
        [-1.4113, -0.5907],
        [-1.5536,  0.1822]], device='cuda:0', dtype=torch.float64)
1.5313615444489264
Sanity Checking DataLoader 0: 100%|##########| 2/2 [00:04<00:00,  2.17s/it]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `validation_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
                                                                           Training: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:   0%|          | 0/3714 [00:00<?, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_epoch_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Standard output piped to file:
/home/fwolf/lumen-geoguesser/reports/train-resnext101_32x8d-22-04-21-21-57-23.txt
[{'batch_size': 8,
  'cached_df': 'data/complete/data__spacing_0.5__num_class_55.csv',
  'dataset_dirs': ['data/external/', 'data/raw/'],
  'dataset_frac': 1,
  'image_size': 112,
  'load_in_ram': False,
  'lr': 1e-05,
  'models': ['resnext101_32x8d'],
  'num_workers': 32,
  'output_report': PosixPath('/home/fwolf/lumen-geoguesser/reports'),
  'pretrained': True,
  'quick': False,
  'regression': True,
  'shuffle_before_splitting': False,
  'split_ratios': [0.8, 0.1, 0.1],
  'trainer_checkpoint': None,
  'unfreeze_backbone_at_epoch': 5,
  'unfreeze_blocks': 'all',
  'use_single_images': False,
  'weight_decay': 0},
 {'accelerator': 'gpu',
  'accumulate_grad_batches': None,
  'amp_backend': 'native',
  'amp_level': None,
  'auto_lr_find': False,
  'auto_scale_batch_size': False,
  'auto_select_gpus': False,
  'benchmark': None,
  'check_val_every_n_epoch': 1,
  'checkpoint_callback': None,
  'default_root_dir': None,
  'detect_anomaly': False,
  'deterministic': False,
  'devices': '1',
  'enable_checkpointing': True,
  'enable_model_summary': True,
  'enable_progress_bar': True,
  'fast_dev_run': False,
  'flush_logs_every_n_steps': None,
  'gpus': None,
  'gradient_clip_algorithm': None,
  'gradient_clip_val': None,
  'ipus': None,
  'limit_predict_batches': None,
  'limit_test_batches': None,
  'limit_train_batches': None,
  'limit_val_batches': None,
  'log_every_n_steps': 20,
  'log_gpu_memory': None,
  'logger': True,
  'max_epochs': None,
  'max_steps': -1,
  'max_time': None,
  'min_epochs': None,
  'min_steps': None,
  'move_metrics_to_cpu': False,
  'multiple_trainloader_mode': 'max_size_cycle',
  'num_nodes': 1,
  'num_processes': None,
  'num_sanity_val_steps': 2,
  'overfit_batches': 0.0,
  'plugins': None,
  'precision': 32,
  'prepare_data_per_node': None,
  'process_position': 0,
  'profiler': None,
  'progress_bar_refresh_rate': None,
  'reload_dataloaders_every_n_epochs': 0,
  'replace_sampler_ddp': True,
  'resume_from_checkpoint': None,
  'stochastic_weight_avg': False,
  'strategy': None,
  'sync_batchnorm': False,
  'terminate_on_nan': None,
  'tpu_cores': None,
  'track_grad_norm': -1,
  'val_check_interval': None,
  'weights_save_path': None,
  'weights_summary': 'top'}]
GeoguesserDataModule init
GeoguesserDataset init
GeoguesserDataset init
GeoguesserDataset init
Train, val and test size 26417 3302 3303
Using cache found in /home/fwolf/.cache/torch/hub/pytorch_vision_v0.12.0
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py:91: PossibleUserWarning: `max_epochs` was not set. Setting it to 1000 epochs. To train without an epoch limit, set `max_epochs=-1`.
  rank_zero_warn(
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/utilities/parsing.py:107: UserWarning: attribute 'data_module' removed from hparams because it cannot be pickled
  rank_zero_warn(f"attribute '{k}' removed from hparams because it cannot be pickled")
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/torch/cuda/__init__.py:122: UserWarning: 
    Found GPU1 NVIDIA GeForce GTX TITAN Black which is of cuda capability 3.5.
    PyTorch no longer supports this GPU because it is too old.
    The minimum cuda capability supported by this library is 3.7.
    
  warnings.warn(old_gpu_warn % (d, name, major, minor, min_arch // 10, min_arch % 10))
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name     | Type   | Params | In sizes         | Out sizes
-------------------------------------------------------------------
0 | backbone | ResNet | 86.7 M | [8, 3, 112, 112] | [8, 2048]
1 | fc       | Linear | 16.4 K | [8, 8192]        | [8, 2]   
-------------------------------------------------------------------
219 K     Trainable params
86.5 M    Non-trainable params
86.8 M    Total params
347.035   Total estimated model params size (MB)
/home/fwolf/lumen-geoguesser/src/model.py:285: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).
  outs_backbone = [self.backbone(image) for image in image_list]
Epoch 0:   4%|4         | 165/3714 [01:32<33:17,  1.78it/s]Epoch 0:   4%|4         | 165/3714 [01:32<33:17,  1.78it/s, loss=3.76, v_num=0, train/loss_step=3.650, train/acc_step=0.000]Epoch 0:   9%|8         | 330/3714 [03:00<30:51,  1.83it/s, loss=3.76, v_num=0, train/loss_step=3.650, train/acc_step=0.000]Epoch 0:   9%|8         | 330/3714 [03:00<30:51,  1.83it/s, loss=3.63, v_num=0, train/loss_step=3.920, train/acc_step=0.000]Sanity Checking: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:486: PossibleUserWarning: Your `val_dataloader`'s sampler has shuffling enabled, it is strongly recommended that you turn shuffling off for val/test/predict dataloaders.
  rank_zero_warn(
Sanity Checking DataLoader 0:   0%|          | 0/2 [00:02<?, ?it/s]Sanity Checking DataLoader 0: 100%|##########| 2/2 [00:02<00:00,  1.48s/it]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `validation_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
                                                                           Training: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:   0%|          | 0/3714 [00:00<?, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_epoch_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:  13%|#3        | 495/3714 [04:33<29:36,  1.81it/s, loss=3.63, v_num=0, train/loss_step=3.920, train/acc_step=0.000]Epoch 0:  13%|#3        | 495/3714 [04:33<29:36,  1.81it/s, loss=3.7, v_num=0, train/loss_step=3.360, train/acc_step=0.125] Epoch 0:   4%|4         | 165/3714 [01:46<38:10,  1.55it/s]Epoch 0:   4%|4         | 165/3714 [01:46<38:10,  1.55it/s, loss=0.925, v_num=0, train/loss_step=0.863, train/acc_step=0.625]Epoch 0:  18%|#7        | 660/3714 [06:09<28:29,  1.79it/s, loss=3.7, v_num=0, train/loss_step=3.360, train/acc_step=0.125]Epoch 0:  18%|#7        | 660/3714 [06:09<28:29,  1.79it/s, loss=3.68, v_num=0, train/loss_step=3.840, train/acc_step=0.000]Epoch 0:   9%|8         | 330/3714 [03:29<35:52,  1.57it/s, loss=0.925, v_num=0, train/loss_step=0.863, train/acc_step=0.625]Epoch 0:   9%|8         | 330/3714 [03:29<35:52,  1.57it/s, loss=1.06, v_num=0, train/loss_step=1.740, train/acc_step=0.250] Epoch 0:  22%|##2       | 825/3714 [07:45<27:09,  1.77it/s, loss=3.68, v_num=0, train/loss_step=3.840, train/acc_step=0.000]Epoch 0:  22%|##2       | 825/3714 [07:45<27:09,  1.77it/s, loss=3.68, v_num=0, train/loss_step=3.820, train/acc_step=0.000]Epoch 0:  13%|#3        | 495/3714 [05:13<34:01,  1.58it/s, loss=1.06, v_num=0, train/loss_step=1.740, train/acc_step=0.250]Epoch 0:  13%|#3        | 495/3714 [05:13<34:01,  1.58it/s, loss=0.926, v_num=0, train/loss_step=0.730, train/acc_step=0.750]Epoch 0:  27%|##6       | 990/3714 [09:21<25:45,  1.76it/s, loss=3.68, v_num=0, train/loss_step=3.820, train/acc_step=0.000]Epoch 0:  27%|##6       | 990/3714 [09:21<25:45,  1.76it/s, loss=3.59, v_num=0, train/loss_step=3.330, train/acc_step=0.000]Epoch 0:  18%|#7        | 660/3714 [06:57<32:11,  1.58it/s, loss=0.926, v_num=0, train/loss_step=0.730, train/acc_step=0.750]Epoch 0:  18%|#7        | 660/3714 [06:57<32:11,  1.58it/s, loss=1.06, v_num=0, train/loss_step=1.620, train/acc_step=0.250] Standard output piped to file:
/home/fwolf/lumen-geoguesser/reports/train-resnext101_32x8d-22-04-21-22-08-53.txt
[{'batch_size': 8,
  'cached_df': 'data/complete/data__spacing_0.5__num_class_55.csv',
  'dataset_dirs': ['data/external/', 'data/raw/'],
  'dataset_frac': 1,
  'image_size': 112,
  'load_in_ram': False,
  'lr': 1e-05,
  'models': ['resnext101_32x8d'],
  'num_workers': 32,
  'output_report': PosixPath('/home/fwolf/lumen-geoguesser/reports'),
  'pretrained': True,
  'quick': False,
  'regression': False,
  'shuffle_before_splitting': False,
  'split_ratios': [0.8, 0.1, 0.1],
  'trainer_checkpoint': None,
  'unfreeze_backbone_at_epoch': 5,
  'unfreeze_blocks': 'all',
  'use_single_images': False,
  'weight_decay': 0},
 {'accelerator': 'gpu',
  'accumulate_grad_batches': None,
  'amp_backend': 'native',
  'amp_level': None,
  'auto_lr_find': False,
  'auto_scale_batch_size': False,
  'auto_select_gpus': False,
  'benchmark': None,
  'check_val_every_n_epoch': 1,
  'checkpoint_callback': None,
  'default_root_dir': None,
  'detect_anomaly': False,
  'deterministic': False,
  'devices': '1',
  'enable_checkpointing': True,
  'enable_model_summary': True,
  'enable_progress_bar': True,
  'fast_dev_run': False,
  'flush_logs_every_n_steps': None,
  'gpus': None,
  'gradient_clip_algorithm': None,
  'gradient_clip_val': None,
  'ipus': None,
  'limit_predict_batches': None,
  'limit_test_batches': None,
  'limit_train_batches': None,
  'limit_val_batches': None,
  'log_every_n_steps': 20,
  'log_gpu_memory': None,
  'logger': True,
  'max_epochs': None,
  'max_steps': -1,
  'max_time': None,
  'min_epochs': None,
  'min_steps': None,
  'move_metrics_to_cpu': False,
  'multiple_trainloader_mode': 'max_size_cycle',
  'num_nodes': 1,
  'num_processes': None,
  'num_sanity_val_steps': 2,
  'overfit_batches': 0.0,
  'plugins': None,
  'precision': 32,
  'prepare_data_per_node': None,
  'process_position': 0,
  'profiler': None,
  'progress_bar_refresh_rate': None,
  'reload_dataloaders_every_n_epochs': 0,
  'replace_sampler_ddp': True,
  'resume_from_checkpoint': None,
  'stochastic_weight_avg': False,
  'strategy': None,
  'sync_batchnorm': False,
  'terminate_on_nan': None,
  'tpu_cores': None,
  'track_grad_norm': -1,
  'val_check_interval': None,
  'weights_save_path': None,
  'weights_summary': 'top'}]
GeoguesserDataModule init
GeoguesserDataset init
GeoguesserDataset init
GeoguesserDataset init
Train, val and test size 26417 3302 3303
Using cache found in /home/fwolf/.cache/torch/hub/pytorch_vision_v0.12.0
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py:91: PossibleUserWarning: `max_epochs` was not set. Setting it to 1000 epochs. To train without an epoch limit, set `max_epochs=-1`.
  rank_zero_warn(
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/torch/cuda/__init__.py:122: UserWarning: 
    Found GPU1 NVIDIA GeForce GTX TITAN Black which is of cuda capability 3.5.
    PyTorch no longer supports this GPU because it is too old.
    The minimum cuda capability supported by this library is 3.7.
    
  warnings.warn(old_gpu_warn % (d, name, major, minor, min_arch // 10, min_arch % 10))
Train, val and test size 26417 3302 3303
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name     | Type   | Params | In sizes         | Out sizes
-------------------------------------------------------------------
0 | backbone | ResNet | 86.7 M | [8, 3, 112, 112] | [8, 2048]
1 | fc       | Linear | 434 K  | [8, 8192]        | [8, 53]  
-------------------------------------------------------------------
637 K     Trainable params
86.5 M    Non-trainable params
87.2 M    Total params
348.706   Total estimated model params size (MB)
/home/fwolf/lumen-geoguesser/src/model.py:98: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).
  outs_backbone = [self.backbone(image) for image in image_list]
Epoch 0:  22%|##2       | 825/3714 [08:37<30:12,  1.59it/s, loss=1.06, v_num=0, train/loss_step=1.620, train/acc_step=0.250]Epoch 0:  22%|##2       | 825/3714 [08:37<30:12,  1.59it/s, loss=0.934, v_num=0, train/loss_step=0.767, train/acc_step=0.625]Sanity Checking: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:486: PossibleUserWarning: Your `val_dataloader`'s sampler has shuffling enabled, it is strongly recommended that you turn shuffling off for val/test/predict dataloaders.
  rank_zero_warn(
Sanity Checking DataLoader 0:   0%|          | 0/2 [00:03<?, ?it/s]/home/fwolf/lumen-geoguesser/src/utils_model.py:55: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  preds, indices = torch.topk(F.softmax(y_pred), k = top_k)
tensor([[[42.5658, 18.4556],
         [45.1467, 15.2464],
         [45.6467, 17.2464],
         [45.1519, 14.2344],
         [45.1955, 16.7530]],

        [[45.1519, 14.2344],
         [45.6467, 18.7464],
         [45.1467, 18.2464],
         [44.6467, 15.7464],
         [45.1507, 17.2434]],

        [[45.1507, 17.2434],
         [45.6467, 18.7464],
         [42.5658, 18.4556],
         [45.1519, 14.2344],
         [46.1467, 15.7464]],

        [[45.6467, 18.7464],
         [45.1955, 16.7530],
         [45.1519, 14.2344],
         [43.7579, 15.7739],
         [44.1467, 15.7464]],

        [[45.1519, 14.2344],
         [44.1467, 15.2464],
         [45.1467, 15.2464],
         [45.4465, 13.7554],
         [46.1467, 15.7464]],

        [[45.9136, 18.7156],
         [42.5658, 18.4556],
         [45.1507, 17.2434],
         [45.6467, 18.7464],
         [45.1519, 14.2344]],

        [[42.5658, 18.4556],
         [45.1955, 16.7530],
         [45.1519, 14.2344],
         [45.6467, 18.2464],
         [46.1467, 15.7464]],

        [[45.1507, 17.2434],
         [46.1467, 15.7464],
         [42.5658, 18.4556],
         [46.1190, 17.2123],
         [45.6467, 18.7464]]], device='cuda:0', dtype=torch.float64)
tensor([[[45.6467, 18.7464],
         [43.7579, 15.7739],
         [45.1955, 16.7530],
         [42.5658, 18.4556],
         [45.1507, 17.2434]],

        [[45.1955, 16.7530],
         [45.1519, 14.2344],
         [45.6467, 16.7464],
         [45.1507, 17.2434],
         [45.4465, 13.7554]],

        [[44.6467, 15.7464],
         [45.4465, 13.7554],
         [45.1519, 14.2344],
         [45.1467, 15.2464],
         [44.1467, 15.2464]],

        [[45.1507, 17.2434],
         [46.1190, 17.2123],
         [45.6467, 18.7464],
         [44.1467, 15.2464],
         [46.1467, 15.7464]],

        [[45.1507, 17.2434],
         [45.6467, 18.7464],
         [46.1467, 15.7464],
         [45.1955, 16.7530],
         [45.1467, 15.2464]],

        [[45.1519, 14.2344],
         [44.6467, 15.7464],
         [45.1507, 17.2434],
         [45.6467, 17.2464],
         [46.1467, 15.7464]],

        [[45.6467, 16.7464],
         [46.1467, 15.7464],
         [45.1955, 16.7530],
         [42.5658, 18.4556],
         [46.1190, 17.2123]],

        [[46.1190, 17.2123],
         [45.1955, 16.7530],
         [45.6467, 18.7464],
         [45.1467, 14.7464],
         [42.5658, 18.4556]]], device='cuda:0', dtype=torch.float64)
Sanity Checking DataLoader 0: 100%|##########| 2/2 [00:04<00:00,  2.15s/it]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `validation_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
                                                                           Training: 0it [00:00, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:   0%|          | 0/3714 [00:00<?, ?it/s]/home/fwolf/.conda/envs/lumen/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:229: UserWarning: You called `self.log('step', ...)` in your `on_train_epoch_start` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
Epoch 0:  27%|##6       | 990/3714 [10:19<28:25,  1.60it/s, loss=0.934, v_num=0, train/loss_step=0.767, train/acc_step=0.625]Epoch 0:  27%|##6       | 990/3714 [10:19<28:25,  1.60it/s, loss=0.929, v_num=0, train/loss_step=0.583, train/acc_step=0.500]Epoch 0:   4%|4         | 165/3714 [01:46<38:08,  1.55it/s]Epoch 0:   4%|4         | 165/3714 [01:46<38:08,  1.55it/s, loss=3.69, v_num=0, train/loss_step=3.540, train/acc_step=0.000]Epoch 0:  31%|###1      | 1155/3714 [12:02<26:40,  1.60it/s, loss=0.929, v_num=0, train/loss_step=0.583, train/acc_step=0.500]Epoch 0:  31%|###1      | 1155/3714 [12:02<26:40,  1.60it/s, loss=0.881, v_num=0, train/loss_step=0.638, train/acc_step=0.375]Epoch 0:   9%|8         | 330/3714 [03:29<35:49,  1.57it/s, loss=3.69, v_num=0, train/loss_step=3.540, train/acc_step=0.000]Epoch 0:   9%|8         | 330/3714 [03:29<35:49,  1.57it/s, loss=3.66, v_num=0, train/loss_step=3.470, train/acc_step=0.250]Epoch 0:  36%|###5      | 1320/3714 [13:44<24:55,  1.60it/s, loss=0.881, v_num=0, train/loss_step=0.638, train/acc_step=0.375]Epoch 0:  36%|###5      | 1320/3714 [13:44<24:55,  1.60it/s, loss=1.01, v_num=0, train/loss_step=0.648, train/acc_step=0.500] Epoch 0:  13%|#3        | 495/3714 [05:12<33:49,  1.59it/s, loss=3.66, v_num=0, train/loss_step=3.470, train/acc_step=0.250]Epoch 0:  13%|#3        | 495/3714 [05:12<33:49,  1.59it/s, loss=3.7, v_num=0, train/loss_step=3.760, train/acc_step=0.000] Epoch 0:  40%|###9      | 1485/3714 [15:28<23:13,  1.60it/s, loss=1.01, v_num=0, train/loss_step=0.648, train/acc_step=0.500]Epoch 0:  40%|###9      | 1485/3714 [15:28<23:13,  1.60it/s, loss=0.776, v_num=0, train/loss_step=0.577, train/acc_step=0.375]Epoch 0:  18%|#7        | 660/3714 [06:55<32:03,  1.59it/s, loss=3.7, v_num=0, train/loss_step=3.760, train/acc_step=0.000]Epoch 0:  18%|#7        | 660/3714 [06:55<32:03,  1.59it/s, loss=3.67, v_num=0, train/loss_step=3.480, train/acc_step=0.000]Epoch 0:  44%|####4     | 1650/3714 [17:10<21:29,  1.60it/s, loss=0.776, v_num=0, train/loss_step=0.577, train/acc_step=0.375]Epoch 0:  44%|####4     | 1650/3714 [17:10<21:29,  1.60it/s, loss=0.939, v_num=0, train/loss_step=1.500, train/acc_step=0.750]Epoch 0:  22%|##2       | 825/3714 [08:38<30:15,  1.59it/s, loss=3.67, v_num=0, train/loss_step=3.480, train/acc_step=0.000]Epoch 0:  22%|##2       | 825/3714 [08:38<30:15,  1.59it/s, loss=3.59, v_num=0, train/loss_step=3.170, train/acc_step=0.000]Epoch 0:  49%|####8     | 1815/3714 [18:52<19:44,  1.60it/s, loss=0.939, v_num=0, train/loss_step=1.500, train/acc_step=0.750]Epoch 0:  49%|####8     | 1815/3714 [18:52<19:44,  1.60it/s, loss=0.809, v_num=0, train/loss_step=0.576, train/acc_step=0.875]Epoch 0:  27%|##6       | 990/3714 [10:21<28:29,  1.59it/s, loss=3.59, v_num=0, train/loss_step=3.170, train/acc_step=0.000]Epoch 0:  27%|##6       | 990/3714 [10:21<28:29,  1.59it/s, loss=3.69, v_num=0, train/loss_step=3.580, train/acc_step=0.250]Epoch 0:  53%|#####3    | 1980/3714 [20:34<18:01,  1.60it/s, loss=0.809, v_num=0, train/loss_step=0.576, train/acc_step=0.875]Epoch 0:  53%|#####3    | 1980/3714 [20:34<18:01,  1.60it/s, loss=0.836, v_num=0, train/loss_step=0.512, train/acc_step=0.500]Epoch 0:  31%|###1      | 1155/3714 [12:03<26:43,  1.60it/s, loss=3.69, v_num=0, train/loss_step=3.580, train/acc_step=0.250]Epoch 0:  31%|###1      | 1155/3714 [12:03<26:43,  1.60it/s, loss=3.6, v_num=0, train/loss_step=3.470, train/acc_step=0.125] Epoch 0:  58%|#####7    | 2145/3714 [22:18<16:18,  1.60it/s, loss=0.836, v_num=0, train/loss_step=0.512, train/acc_step=0.500]Epoch 0:  58%|#####7    | 2145/3714 [22:18<16:18,  1.60it/s, loss=0.928, v_num=0, train/loss_step=0.752, train/acc_step=0.500]Epoch 0:  36%|###5      | 1320/3714 [13:45<24:56,  1.60it/s, loss=3.6, v_num=0, train/loss_step=3.470, train/acc_step=0.125]Epoch 0:  36%|###5      | 1320/3714 [13:45<24:56,  1.60it/s, loss=3.5, v_num=0, train/loss_step=3.400, train/acc_step=0.125]Epoch 0:  62%|######2   | 2310/3714 [24:00<14:35,  1.60it/s, loss=0.928, v_num=0, train/loss_step=0.752, train/acc_step=0.500]Epoch 0:  62%|######2   | 2310/3714 [24:00<14:35,  1.60it/s, loss=0.832, v_num=0, train/loss_step=1.240, train/acc_step=1.000]Epoch 0:  40%|###9      | 1485/3714 [15:27<23:12,  1.60it/s, loss=3.5, v_num=0, train/loss_step=3.400, train/acc_step=0.125]Epoch 0:  40%|###9      | 1485/3714 [15:27<23:12,  1.60it/s, loss=3.59, v_num=0, train/loss_step=3.730, train/acc_step=0.000]Epoch 0:  67%|######6   | 2475/3714 [25:44<12:52,  1.60it/s, loss=0.832, v_num=0, train/loss_step=1.240, train/acc_step=1.000]Epoch 0:  67%|######6   | 2475/3714 [25:44<12:52,  1.60it/s, loss=1.07, v_num=0, train/loss_step=0.860, train/acc_step=0.625] Epoch 0:  44%|####4     | 1650/3714 [17:09<21:27,  1.60it/s, loss=3.59, v_num=0, train/loss_step=3.730, train/acc_step=0.000]Epoch 0:  44%|####4     | 1650/3714 [17:09<21:27,  1.60it/s, loss=3.64, v_num=0, train/loss_step=3.230, train/acc_step=0.000]Epoch 0:  71%|#######1  | 2640/3714 [27:27<11:10,  1.60it/s, loss=1.07, v_num=0, train/loss_step=0.860, train/acc_step=0.625]Epoch 0:  71%|#######1  | 2640/3714 [27:27<11:10,  1.60it/s, loss=0.83, v_num=0, train/loss_step=0.852, train/acc_step=0.625]Epoch 0:  49%|####8     | 1815/3714 [18:52<19:45,  1.60it/s, loss=3.64, v_num=0, train/loss_step=3.230, train/acc_step=0.000]Epoch 0:  49%|####8     | 1815/3714 [18:52<19:45,  1.60it/s, loss=3.53, v_num=0, train/loss_step=3.840, train/acc_step=0.000]